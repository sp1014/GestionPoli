{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { mapState } from 'vuex';\nimport PayPal from 'vue-paypal-checkout';\nexport default {\n  name: 'Checkout',\n  components: {\n    PayPal: PayPal\n  },\n  data: function data() {\n    return {\n      user: {\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n        address: '',\n        city: '',\n        state: '',\n        pincode: ''\n      },\n      submitted: false,\n      payment: false,\n      complete: false,\n      paypal: {\n        sandbox: 'YOUR SANDBOX ID'\n      },\n      environment: 'sandbox',\n      button_style: {\n        label: 'checkout',\n        size: 'large',\n        // small | medium | large | responsive\n        shape: 'pill',\n        // pill | rect\n        color: 'blue' // gold | blue | silver | black\n\n      },\n      amtchar: ''\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    cart: function cart(state) {\n      return state.products.cart;\n    },\n    getAmount: function getAmount() {\n      return this.totalAmount = this.$store.getters['products/getTotalAmount'];\n    }\n  })),\n  methods: {\n    payWithStripe: function payWithStripe() {\n      var _this = this;\n\n      var handler = window.StripeCheckout.configure({\n        key: 'PUBLISHBLE_KEY',\n        // 'PUBLISHBLE_KEY' publishble key\n        locale: 'auto',\n        token: function token(_token) {\n          _this.$store.dispatch('products/createOrder', {\n            product: _this.cart,\n            userDetail: _this.user,\n            token: _token.id,\n            amt: _this.totalAmount\n          });\n\n          _this.$router.push('/ecommerce/success');\n        }\n      });\n      handler.open({\n        name: 'Cuba ',\n        description: 'Your Choice Theme',\n        amount: this.totalAmount * 100\n      });\n    },\n    getamt: function getamt() {\n      return this.totalAmount.toString();\n    },\n    removeProduct: function removeProduct(product) {\n      this.$store.dispatch('products/removeProduct', product);\n    },\n    onPaymentComplete: function onPaymentComplete(data) {\n      this.$store.dispatch('products/createOrder', {\n        product: this.cart,\n        userDetail: this.user,\n        token: data.orderID,\n        amt: this.totalAmount\n      });\n    },\n    onCancelled: function onCancelled() {}\n  }\n};","map":{"version":3,"mappings":";;;;AAoNA;AACA;AAEA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC;QACAC,aADA;QAEAC,YAFA;QAGAC,SAHA;QAIAC,SAJA;QAKAC,WALA;QAMAC,QANA;QAOAC,SAPA;QAQAC;MARA,CADA;MAWAC,gBAXA;MAYAC,cAZA;MAaAC,eAbA;MAcAC;QACAC;MADA,CAdA;MAiBAC,sBAjBA;MAkBAC;QACAC,iBADA;QAEAC,aAFA;QAEA;QACAC,aAHA;QAGA;QACAC,aAJA,CAIA;;MAJA,CAlBA;MAwBAC;IAxBA;EA0BA,CAhCA;EAiCAC,4BACAC;IACAC;MAAA;IAAA,CADA;IAEAC,SAFA,uBAEA;MACA,8CACA,yBADA;IAGA;EANA,EADA,CAjCA;EA2CAC;IACAC,aADA,2BACA;MAAA;;MACA;QACAC,qBADA;QACA;QACAC,cAFA;QAGAC;UACA;YACAC,mBADA;YAEAC,sBAFA;YAGAF,gBAHA;YAIAG;UAJA;;UAMA;QACA;MAXA;MAaAC;QACArC,aADA;QAEAsC,gCAFA;QAGAC;MAHA;IAKA,CApBA;IAqBAC,MArBA,oBAqBA;MACA;IACA,CAvBA;IAwBAC;MACA;IACA,CA1BA;IA2BAC;MACA;QACAR,kBADA;QAEAC,qBAFA;QAGAF,mBAHA;QAIAG;MAJA;IAMA,CAlCA;IAmCAO,WAnCA,yBAmCA,CACA;EApCA;AA3CA","names":["name","components","PayPal","data","user","firstName","lastName","phone","email","address","city","state","pincode","submitted","payment","complete","paypal","sandbox","environment","button_style","label","size","shape","color","amtchar","computed","mapState","cart","getAmount","methods","payWithStripe","key","locale","token","product","userDetail","amt","handler","description","amount","getamt","removeProduct","onPaymentComplete","onCancelled"],"sourceRoot":"src/pages/ecommerce","sources":["checkout.vue"],"sourcesContent":["<template>\n  <div class=\"checkout\">\n    <Breadcrumbs main=\"Ecommerce\" title=\"Checkout\" />\n    <!-- Container-fluid starts-->\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Billing Details</h5>\n        </div>\n        <div class=\"card-body\">\n          <form>\n          <div class=\"row\">\n            <div class=\"col-xl-6 col-sm-12\">\n              <div class=\"form-row\">\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputEmail4\">First Name</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.firstName\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('firstName') }\"\n                  />\n                  <div\n                    v-if=\"submitted && errors.has('firstName')\"\n                    class=\"invalid-feedback\"\n                  >{{ errors.first('firstName') }}</div>\n                </div>\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputPassword4\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.lastName\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('lastName') }\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputEmail4\">Phone</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.phone\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('phone') }\"\n                  />\n                </div>\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputPassword4\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    v-model=\"user.email\"\n                    id=\"email\"\n                    name=\"email\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('email') }\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputState\">Country</label>\n                <select class=\"form-control\" id=\"inputState\">\n                  <option>Choose...</option>\n                  <option selected>India</option>\n                  <option>USA</option>\n                  <option>UK</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">Address</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.address\"\n                  id=\"address\"\n                  name=\"address\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('address') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputCity\">Town/City</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.city\"\n                  id=\"city\"\n                  name=\"city\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('city') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">State/Country</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.state\"\n                  id=\"state\"\n                  name=\"state\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('state') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">Postal Code</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.pincode\"\n                  id=\"pincode\"\n                  name=\"pincode\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('pincode') }\"\n                />\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-sm-12\">\n              <div class=\"checkout-details\">\n                <div class=\"order-box\">\n                  <div class=\"title-box\">\n                    <div class=\"checkbox-title\">\n                      <h4>Product</h4>\n                      <span>Total</span>\n                    </div>\n                  </div>\n                  <ul class=\"qty\" v-if=\"cart.length\">\n                    <li v-for=\"(item,index) in cart\" :key=\"index\">\n                      {{item.name}} Ã— {{item.quantity}}\n                      <span>{{item.price * item.quantity | currency}}</span>\n                    </li>\n                  </ul>\n                  <ul class=\"qty\" v-if=\"!cart.length\">\n                    <li v-if=\"!cart.length\">There are no products in cart</li>\n                  </ul>\n                  <ul class=\"sub-total\">\n                    <li>\n                      Subtotal\n                      <span class=\"count\">{{getAmount | currency}}</span>\n                    </li>\n                  </ul>\n                  <ul class=\"sub-total\">\n                    <li>\n                      Total\n                      <span class=\"count\">{{getAmount | currency}}</span>\n                    </li>\n                  </ul>\n                  <div class=\"animate-chk\" v-if=\"cart.length\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <label class=\"d-block\" for=\"edo-ani\">\n                          <input\n                            class=\"radio_animated\"\n                            id=\"edo-ani\"\n                            v-model=\"payment\"\n                            :value=\"false\"\n                            type=\"radio\"\n                            name=\"rdo-ani\"\n                            checked\n                            data-original-title\n                            title\n                          />Stripe\n                        </label>\n                        <label class=\"d-block\" for=\"edo-ani1\">\n                          <input\n                            class=\"radio_animated\"\n                            id=\"edo-ani1\"\n                            v-model=\"payment\"\n                            type=\"radio\"\n                            :value=\"true\"\n                            name=\"rdo-ani\"\n                            data-original-title\n                            title\n                          />PayPal\n                        </label>\n                        <label class=\"d-block\" for=\"edo-ani2\">\n                          <img class=\"img-paypal\" src=\"../../assets/images/checkout/paypal.png\" alt />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <PayPal\n                      :amount=getamt()\n                      currency=\"USD\"\n                      :client=\"paypal\"\n                      :env=\"environment\"\n                      :style=\"button_style\"\n                      v-if=\"payment\"\n                      v-on:payment-authorized=\"onPaymentComplete\"\n                      v-on:payment-cancelled=\"onCancelled()\">\n                  </PayPal>\n                  <div class=\"text-right m-t-10\" v-if=\"cart.length && !payment\">\n                      <button\n                      class=\"btn btn-primary\"\n                      @click=\"payWithStripe\"\n                      type=\"button\"\n                    >Place Order</button>\n                  </div>                   \n                </div>\n              </div>\n            </div>\n          </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <!-- Container-fluid Ends-->\n  </div>\n</template>\n<script>\n  import { mapState } from 'vuex';\n  import PayPal from 'vue-paypal-checkout';\n\n  export default {\n    name: 'Checkout',\n    components: {\n      PayPal\n    },\n    data() {\n      return {\n        user: {\n          firstName: '',\n          lastName: '',\n          phone: '',\n          email: '',\n          address: '',\n          city: '',\n          state: '',\n          pincode: ''\n        },\n        submitted: false,\n        payment: false,\n        complete: false,\n        paypal: {\n          sandbox: 'YOUR SANDBOX ID'\n        },\n        environment : 'sandbox',\n        button_style : {\n          label: 'checkout',\n          size:  'large',    // small | medium | large | responsive\n          shape: 'pill',         // pill | rect\n          color: 'blue'         // gold | blue | silver | black\n        },\n        amtchar:''\n      };\n    },\n    computed: {\n      ...mapState({\n        cart: state => state.products.cart,\n        getAmount() {\n          return (this.totalAmount = this.$store.getters[\n            'products/getTotalAmount'\n          ]);\n        }\n      })\n    },\n    methods: {\n      payWithStripe() {\n        var handler = (window).StripeCheckout.configure({\n          key: 'PUBLISHBLE_KEY', // 'PUBLISHBLE_KEY' publishble key\n          locale: 'auto',\n          token: (token) => {\n            this.$store.dispatch('products/createOrder', {\n              product: this.cart,\n              userDetail: this.user,\n              token: token.id,\n              amt: this.totalAmount\n            });\n            this.$router.push('/ecommerce/success');\n          },\n        });\n        handler.open({\n          name: 'Cuba ',\n          description: 'Your Choice Theme',\n          amount: this.totalAmount * 100\n        });\n      },\n      getamt(){\n        return this.totalAmount.toString();\n      },\n      removeProduct: function(product) {\n        this.$store.dispatch('products/removeProduct', product);\n      },\n      onPaymentComplete: function (data) {\n        this.$store.dispatch('products/createOrder', {\n          product: this.cart,\n          userDetail: this.user,\n          token: data.orderID,\n          amt: this.totalAmount\n        });\n      },\n      onCancelled(){\n      }\n    }\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}