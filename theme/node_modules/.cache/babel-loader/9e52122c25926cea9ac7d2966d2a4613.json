{"ast":null,"code":"export default {\n  props: ['startTime', 'endTime'],\n  data: function data() {\n    return {\n      td: 0,\n      days: 1,\n      hours: 1,\n      minutes: 1,\n      seconds: 1\n    };\n  },\n  mounted: function mounted() {\n    if (this.startTime !== undefined) {\n      this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date(this.startTime));\n    } else if (this.startTime === undefined) {\n      this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date());\n    }\n\n    if (this.td >= 0) {\n      this.seconds = this.td;\n      this.minutes = this.seconds * 60;\n      this.hours = this.minutes * 60;\n      this.days = this.hours * 24;\n      this.timer();\n    } else {\n      this.seconds = this.minutes = this.hours = this.days = 0;\n    }\n  },\n  methods: {\n    timer: function timer() {\n      this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date());\n\n      if (this.td >= 0) {\n        this.seconds = Math.floor(this.td / 1000 % 60);\n        this.minutes = Math.floor(this.td / 1000 / 60 % 60);\n        this.hours = Math.floor(this.td / (1000 * 60 * 60) % 24);\n        this.days = Math.floor(this.td / (1000 * 60 * 60 * 24));\n        setTimeout(this.timer, 1000);\n      } else {\n        this.seconds = this.minutes = this.hours = this.days = 0;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA;EACAA,+BADA;EAEAC,IAFA,kBAEA;IACA;MACAC,KADA;MAEAC,OAFA;MAGAC,QAHA;MAIAC,UAJA;MAKAC;IALA;EAOA,CAVA;EAWAC,OAXA,qBAWA;IAEA;MACA;IACA,CAFA,MAEA;MACA;IACA;;IAEA;MACA;MACA;MACA;MACA;MACA;IACA,CANA,MAMA;MACA;IACA;EACA,CA5BA;EA6BAC;IACAC;MACA;;MAEA;QACA;QACA;QACA;QACA;QACAC;MACA,CANA,MAMA;QACA;MACA;IACA;EAbA;AA7BA","names":["props","data","td","days","hours","minutes","seconds","mounted","methods","timer","setTimeout"],"sourceRoot":"src/pages/comingsoon","sources":["comingsoon_timer.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<ul>\n\t\t\t<li><span class=\"time digits\" v-text=\"days\"></span><span class=\"title\">days</span></li>\n\t\t\t<li><span class=\"time digits\" v-text=\"hours\"></span><span class=\"title\">Hours</span></li>\n\t\t\t<li><span class=\"time digits\" v-text=\"minutes\"></span><span class=\"title\">Minutes</span></li>\n\t\t\t<li><span class=\"time digits\" v-text=\"seconds\"></span><span class=\"title\">Seconds</span></li>\n\t\t</ul>\n\t</div>\n</template>\n<script>\n  export default{\n    props: ['startTime','endTime'],\n    data(){\n      return{\n        td:0,\n        days:1,\n        hours:1,\n        minutes:1,\n        seconds:1,\n      };\n    },\n    mounted(){\n\t\t\t\n      if(this.startTime !== undefined) {\n        this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date(this.startTime));\n      } else if(this.startTime === undefined) {\n        this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date());\n      }\n\n      if(this.td>=0) {\n        this.seconds = this.td;\n        this.minutes = this.seconds * 60;\n        this.hours = this.minutes * 60;\n        this.days = this.hours * 24;\n        this.timer();\n      } else {\n        this.seconds = this.minutes = this.hours = this.days = 0;\n      }\n    },\n    methods:{\n      timer:function() {\n        this.td = Date.parse(new Date(this.endTime)) - Date.parse(new Date());\n\n        if(this.td>=0) {\n          this.seconds = Math.floor(this.td / 1000 % 60);\n          this.minutes = Math.floor(this.td / 1000 / 60 % 60);\n          this.hours = Math.floor(this.td / (1000 * 60 * 60) % 24);\n          this.days = Math.floor(this.td / (1000 * 60 * 60 * 24));\n          setTimeout(this.timer,1000);\n        } else {\n          this.seconds = this.minutes = this.hours = this.days = 0;\n        }\n      }\n    }\n  };\n</script>"]},"metadata":{},"sourceType":"module"}