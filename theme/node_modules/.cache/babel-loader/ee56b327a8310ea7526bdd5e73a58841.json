{"ast":null,"code":"import axios from \"axios\"; //import firebase from 'firebase';\n\nimport Userauth from '../auth/js/index';\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      type: '',\n      email: '',\n      password: '',\n      passwordjwt: '',\n      submitted: false,\n      Token: ''\n    };\n  },\n  computed: {\n    // JWT authentication\n    loggingIn: function loggingIn() {\n      return this.$store.state.authentication.status.loggingIn;\n    }\n  },\n  created: function created() {\n    // reset login status for JWT\n    this.$store.dispatch('authentication/logout');\n  },\n  methods: {\n    // JWT authentication\n\n    /* handleSubmit() {\n       this.submitted = true;\n       const { email, passwordjwt } = this;\n       const { dispatch } = this.$store;\n       if (email && passwordjwt) {\n         dispatch('authentication/login', { email, passwordjwt });\n       }\n     },*/\n    // show/hide password\n    showPassword: function showPassword() {\n      if (this.type === 'password') {\n        this.type = 'text';\n      } else {\n        this.type = 'password';\n      }\n    },\n    // Firebase login\n\n    /*  signUp: function() {\n         this.submitted = true;\n        if (this.email === '' && this.password === '') {\n          (this.email = 'test@admin.com'), (this.password = 'test@123456');\n        } else {\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(this.email, this.password)\n            .then(\n              (result) => {\n                Userauth.localLogin(result);\n                this.$router.replace('/dashboard');\n              },\n              (err) => {\n                (this.email = 'test@admin.com'), (this.password = 'test@123456');\n                this.$toasted.show('Oops...' + err.message, {\n                  theme: 'bubble',\n                  position: 'bottom-right',\n                  type: 'error',\n                  duration: 2000,\n                });\n              }\n            );\n        }\n      },*/\n    signUp: function signUp() {\n      var _this = this;\n\n      var json = {\n        \"email\": this.email,\n        \"password\": this.password\n      };\n      axios.post('https://localhost:44394/api/login', json).then(function (data) {\n        _this.token = data.data;\n        axios.get('https://localhost:44394/api/Login', {\n          headers: {\n            'Authorization': 'Bearer ' + _this.token\n          }\n        }).then(function (res) {\n          console.log(res);\n        });\n      });\n    } // Social login\n    // Auth0 login\n\n  }\n};","map":{"version":3,"mappings":"AA0HA,0B,CACA;;AACA;AAEA;EACAA,aADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC,SAFA;MAGAC,YAHA;MAIAC,eAJA;MAKAC,gBALA;MAMAC;IANA;EAQA,CAXA;EAYAC;IACA;IACAC,SAFA,uBAEA;MACA;IACA;EAJA,CAZA;EAkBAC,OAlBA,qBAkBA;IACA;IACA;EACA,CArBA;EAsBAC;IACA;;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAjBA;IAkBA;;IACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEAC,MA7CA,oBA6CA;MAAA;;MACA;QACA,mBADA;QAEA;MAFA;MAIAC,sDACAC,IADA,CACA;QACA;QAEAD;UACAE;YACA;UADA;QADA,GAGAD,IAHA,CAGA;UACAE;QACA,CALA;MAOA,CAXA;IAYA,CA9DA,CA+DA;IAGA;;EAlEA;AAtBA","names":["name","data","type","email","password","passwordjwt","submitted","Token","computed","loggingIn","created","methods","showPassword","signUp","axios","then","headers","console"],"sourceRoot":"src/auth","sources":["login.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- page-wrapper Start-->\n    <div class=\"container-fluid p-0\">\n      <div class=\"row m-0\">\n        <div class=\"col-12 p-0\">\n          <div class=\"login-card\">\n            <div>\n              <div>\n                <a class=\"logo\">\n                  <img\n                    class=\"img-fluid for-light\"\n                    src=\"../assets/images/logo/login.png\"\n                    alt=\"looginpage\"\n                  />\n                  <img\n                    class=\"img-fluid for-dark\"\n                    src=\"../assets/images/logo/logo_dark.png\"\n                    alt=\"looginpage\"\n                  />\n                </a>\n              </div>\n              <div class=\"login-main\">\n                <b-card no-body>\n                  <b-tabs pills vertical>\n                    <b-tab active>\n                      <template #title>\n                        <img\n                          src=\"../assets/images/login/firebase.svg\"\n                          id=\"firebase-tooltip\"\n                        />\n                        <span>Gestion Academica</span>\n                      </template>\n                      <b-card-text>\n                        <form class=\"theme-form\">\n                          <h4>Sign in to account</h4>\n                          <p>Enter your email & password to login</p>\n                          <div class=\"form-group\">\n                            <label class=\"col-form-label\">Email Address</label>\n                            <input\n                              v-model=\"email\"\n                              class=\"form-control\"\n                              type=\"email\"\n                              required=\"\"\n                              placeholder=\"Test@gmail.com\"\n                              :class=\"{\n                                'is-invalid': submitted && !email,\n                              }\"\n                            />\n                            <div\n                              v-show=\"submitted && !email\"\n                              class=\"invalid-feedback\"\n                            >\n                              Email is required\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                            <label class=\"col-form-label\">Password</label>\n                            <input\n                              v-model=\"password\"\n                              autocomplete=\"\"\n                              class=\"form-control\"\n                              :type=\"type\"\n                              name=\"login[password]\"\n                              required=\"\"\n                              placeholder=\"*********\"\n                              :class=\"{\n                                'is-invalid': submitted && !email,\n                              }\"\n                            />\n                            <div\n                              v-show=\"submitted && !password\"\n                              class=\"invalid-feedback\"\n                            >\n                              Email is required\n                            </div>\n                            <div class=\"show-hide\" @click=\"showPassword\">\n                              <span class=\"show\"></span>\n                            </div>\n                          </div>\n                          <div class=\"form-group mb-0\">\n                            <div class=\"checkbox p-0\">\n                              <input id=\"checkbox1\" type=\"checkbox\" />\n                              <label class=\"text-muted\" for=\"checkbox1\"\n                                >Remember password</label\n                              >\n                            </div>\n                            <button\n                              class=\"btn btn-primary btn-block\"\n                              type=\"button\"\n                              @click=\"signUp\"\n                            >\n                              Login\n                            </button>\n                          </div>\n       \n                          <p class=\"mt-4 mb-0\">\n                            Don't have account?\n                            <router-link\n                              class=\"ml-2\"\n                              tag=\"a\"\n                              to=\"/auth/register\"\n                            >\n                              Create Account\n                            </router-link>\n                          </p>\n                        </form>\n                      </b-card-text>\n                    </b-tab>\n                  </b-tabs>\n                </b-card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- latest jquery-->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n  //import firebase from 'firebase';\n  import Userauth from '../auth/js/index';\n  \n  export default {\n    name: 'login',\n    data() {\n      return {\n        type: '',\n        email: '',\n        password: '',\n        passwordjwt: '',\n        submitted: false,\n        Token: '',\n      };\n    },\n    computed: {\n      // JWT authentication\n      loggingIn() {\n        return this.$store.state.authentication.status.loggingIn;\n      },\n    },\n    created() {\n      // reset login status for JWT\n      this.$store.dispatch('authentication/logout');\n    },\n    methods: {\n      // JWT authentication\n     /* handleSubmit() {\n        this.submitted = true;\n        const { email, passwordjwt } = this;\n        const { dispatch } = this.$store;\n        if (email && passwordjwt) {\n          dispatch('authentication/login', { email, passwordjwt });\n        }\n      },*/\n      // show/hide password\n      showPassword: function() {\n        if (this.type === 'password') {\n          this.type = 'text';\n        } else {\n          this.type = 'password';\n        }\n      },\n      // Firebase login\n    /*  signUp: function() {\n\n        this.submitted = true;\n        if (this.email === '' && this.password === '') {\n          (this.email = 'test@admin.com'), (this.password = 'test@123456');\n        } else {\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(this.email, this.password)\n            .then(\n              (result) => {\n                Userauth.localLogin(result);\n                this.$router.replace('/dashboard');\n              },\n              (err) => {\n                (this.email = 'test@admin.com'), (this.password = 'test@123456');\n                this.$toasted.show('Oops...' + err.message, {\n                  theme: 'bubble',\n                  position: 'bottom-right',\n                  type: 'error',\n                  duration: 2000,\n                });\n              }\n            );\n        }\n      },*/\n           signUp () {\n          let json = {\n          \"email\" : this.email,\n          \"password\": this.password\n        };\n        axios.post('https://localhost:44394/api/login', json)\n        .then( data =>{\n          this.token = data.data\n  \n           axios.get('https://localhost:44394/api/Login',{\n            headers: {\n                'Authorization': 'Bearer '+this.token   \n            }}).then((res) => {\n            console.log(res);\n      });\n          \n        })\n      },\n      // Social login\n\n \n      // Auth0 login\n\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}