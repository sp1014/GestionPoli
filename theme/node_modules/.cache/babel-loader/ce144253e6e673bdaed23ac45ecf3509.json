{"ast":null,"code":"var user = JSON.parse(localStorage.getItem('user'));\nvar initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user: user\n} : {\n  status: {},\n  user: null\n};\nexport var authentication = {\n  namespaced: true,\n  state: initialState,\n  getters: {},\n  actions: {\n    /*  login({ dispatch, commit }, { username, passwordjwt }) {\n          commit('loginRequest', { username });\n          userService.login(username, passwordjwt)\n              .then(\n                  user => {\n                      commit('loginSuccess', user);\n                      router.push('/');\n                  },\n                  error => {\n                      commit('loginFailure', error);\n                      dispatch('alert/error', error, { root: true });\n                  }\n              );\n      },\n      logout({ commit }) {\n          userService.logout();\n          commit('logout');\n      }*/\n  },\n  mutations: {\n    getUser: function getUser(state, data, res) {\n      state.data = data;\n      state.res = res;\n    }\n    /* loginRequest(state, user) {\n         state.status = { loggingIn: true };\n         state.user = user;\n     },\n     loginSuccess(state, user) {\n         state.status = { loggedIn: true };\n         state.user = user;\n     },\n     loginFailure(state) {\n         state.status = {};\n         state.user = null;\n     },\n     logout(state) {\n         state.status = {};\n         state.user = null;\n     }*/\n\n  }\n};","map":{"version":3,"names":["user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","authentication","namespaced","state","getters","actions","mutations","getUser","data","res"],"sources":["C:/Users/user/Videos/FRONTTTTTT/vue/theme/src/store/modules/authentication.js"],"sourcesContent":["\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user\n    ? { status: { loggedIn: true }, user }\n    : { status: {}, user: null };\n\nexport const authentication = {\n    namespaced: true,\n    state: initialState,\n    getters: {\n\n    },\n    actions: {\n      /*  login({ dispatch, commit }, { username, passwordjwt }) {\n            commit('loginRequest', { username });\n            userService.login(username, passwordjwt)\n                .then(\n                    user => {\n                        commit('loginSuccess', user);\n                        router.push('/');\n                    },\n                    error => {\n                        commit('loginFailure', error);\n                        dispatch('alert/error', error, { root: true });\n                    }\n                );\n        },\n        logout({ commit }) {\n            userService.logout();\n            commit('logout');\n        }*/\n    },\n    mutations: {\n        getUser(state,data, res){\n            state.data = data;\n            state.res = res;\n          }\n       /* loginRequest(state, user) {\n            state.status = { loggingIn: true };\n            state.user = user;\n        },\n        loginSuccess(state, user) {\n            state.status = { loggedIn: true };\n            state.user = user;\n        },\n        loginFailure(state) {\n            state.status = {};\n            state.user = null;\n        },\n        logout(state) {\n            state.status = {};\n            state.user = null;\n        }*/\n    }\n};\n"],"mappings":"AACA,IAAMA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,IAAMC,YAAY,GAAGL,IAAI,GACnB;EAAEM,MAAM,EAAE;IAAEC,QAAQ,EAAE;EAAZ,CAAV;EAA8BP,IAAI,EAAJA;AAA9B,CADmB,GAEnB;EAAEM,MAAM,EAAE,EAAV;EAAcN,IAAI,EAAE;AAApB,CAFN;AAIA,OAAO,IAAMQ,cAAc,GAAG;EAC1BC,UAAU,EAAE,IADc;EAE1BC,KAAK,EAAEL,YAFmB;EAG1BM,OAAO,EAAE,EAHiB;EAM1BC,OAAO,EAAE;IACP;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlBa,CANiB;EA0B1BC,SAAS,EAAE;IACPC,OADO,mBACCJ,KADD,EACOK,IADP,EACaC,GADb,EACiB;MACpBN,KAAK,CAACK,IAAN,GAAaA,IAAb;MACAL,KAAK,CAACM,GAAN,GAAYA,GAAZ;IACD;IACJ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EApBe;AA1Be,CAAvB"},"metadata":{},"sourceType":"module"}