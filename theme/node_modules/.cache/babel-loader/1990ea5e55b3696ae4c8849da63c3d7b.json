{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapState } from 'vuex';\nimport { layoutClasses } from '../constants/layout';\nimport Header from './header';\nimport Sidebar from './sidebar';\nimport Footer from './footer';\nimport Customizer from './customizer';\nimport TapTop from './taptop';\nexport default {\n  name: 'mainpage',\n  // props:['sidebar_toggle_var'],\n  components: {\n    Header: Header,\n    Sidebar: Sidebar,\n    Footer: Footer,\n    Customizer: Customizer,\n    TapTop: TapTop\n  },\n  data: function data() {\n    return {\n      mobileheader_toggle_var: false,\n      sidebar_toggle_var: false,\n      horizontal_Sidebar: true,\n      resized: false,\n      layoutobj: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    menuItems: function menuItems(state) {\n      return state.menu.data;\n    },\n    layout: function layout(state) {\n      return state.layout.layout;\n    },\n    togglesidebar: function togglesidebar(state) {\n      return state.menu.togglesidebar;\n    },\n    activeoverlay: function activeoverlay(state) {\n      return state.menu.activeoverlay;\n    }\n  })), {}, {\n    layoutobject: {\n      get: function get() {\n        var _this = this;\n\n        return JSON.parse(JSON.stringify(layoutClasses.find(function (item) {\n          return Object.keys(item).pop() === _this.layout.settings.layout;\n        })))[this.layout.settings.layout];\n      },\n      set: function set() {\n        var _this2 = this;\n\n        this.layoutobj = layoutClasses.find(function (item) {\n          return Object.keys(item).pop() === _this2.layout.settings.layout;\n        });\n        this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\n        return this.layoutobj;\n      }\n    }\n  }),\n  watch: {\n    '$route': function $route() {\n      var _this3 = this;\n\n      this.menuItems.filter(function (items) {\n        if (items.path === _this3.$route.path) _this3.$store.dispatch('menu/setActiveRoute', items);\n        if (!items.children) return false;\n        items.children.filter(function (subItems) {\n          if (subItems.path === _this3.$route.path) _this3.$store.dispatch('menu/setActiveRoute', subItems);\n          if (!subItems.children) return false;\n          subItems.children.filter(function (subSubItems) {\n            if (subSubItems.path === _this3.$route.path) _this3.$store.dispatch('menu/setActiveRoute', subSubItems);\n          });\n        });\n      });\n      this.layoutobj = layoutClasses.find(function (item) {\n        return Object.keys(item).pop() === _this3.layout.settings.layout;\n      });\n\n      if (window.innerWidth < 991 && this.layout.settings.layout === 'LosAngeles' || window.innerWidth < 991 && this.layout.settings.layout === 'Singapore' || window.innerWidth < 991 && this.layout.settings.layout === 'Barcelona') {\n        var newlayout = JSON.parse(JSON.stringify(this.layoutobj).replace('horizontal-wrapper', 'compact-wrapper'));\n        this.layoutobj = JSON.parse(JSON.stringify(newlayout))[this.layout.settings.layout];\n      } else {\n        this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\n      }\n    },\n    sidebar_toggle_var: function sidebar_toggle_var() {\n      this.resized = this.width <= 991 ? !this.sidebar_toggle_var : this.sidebar_toggle_var;\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n    this.resized = this.sidebar_toggle_var;\n    this.$store.dispatch('layout/set'); // this.$router.replace({ 'query': null }).catch(err => err);\n\n    this.layout.settings.layout = this.$route.query.layout ? this.$route.query.layout : 'Dubai';\n    this.layoutobj = layoutClasses.find(function (item) {\n      return Object.keys(item).pop() === _this4.layout.settings.layout;\n    });\n    this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\n  },\n  methods: {\n    sidebar_toggle: function sidebar_toggle(value) {\n      this.sidebar_toggle_var = !value;\n    },\n    mobiletoggle_toggle: function mobiletoggle_toggle(value) {\n      this.mobileheader_toggle_var = value;\n    },\n    handleResize: function handleResize() {\n      this.$store.dispatch('menu/resizetoggle');\n    },\n    removeoverlay: function removeoverlay() {\n      this.$store.state.menu.activeoverlay = false;\n\n      if (window.innerWidth < 991) {\n        this.$store.state.menu.togglesidebar = false;\n      }\n\n      this.menuItems.filter(function (menuItem) {\n        menuItem.active = false;\n      });\n    },\n    hidesecondmenu: function hidesecondmenu() {\n      if (this.layoutobject.split(' ').includes('compact-sidebar')) {\n        this.menuItems.filter(function (menuItem) {\n          menuItem.active = false;\n        });\n      }\n\n      if (window.innerWidth < 991) {\n        this.$store.state.menu.togglesidebar = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA,gBADA;EAEA;EACAC;IACAC,cADA;IAEAC,gBAFA;IAGAC,cAHA;IAIAC,sBAJA;IAKAC;EALA,CAHA;EAUAC,IAVA,kBAUA;IACA;MACAC,8BADA;MAEAC,yBAFA;MAGAC,wBAHA;MAIAC,cAJA;MAKAC;IALA;EAOA,CAlBA;EAmBAC,0CACAC;IACAC;MAAA;IAAA,CADA;IAEAC;MAAA;IAAA,CAFA;IAGAC;MAAA;IAAA,CAHA;IAIAC;MAAA;IAAA;EAJA,EADA;IAOAC;MACAC;QAAA;;QACA;UAAA;QAAA;MACA,CAHA;MAIAC;QAAA;;QACA;UAAA;QAAA;QACA;QACA;MACA;IARA;EAPA,EAnBA;EAqCAC;IACA,QADA,oBACA;MAAA;;MACA;QACA,uCACA;QACA;QACAC;UACA,0CACA;UACA;UACAC;YACA,6CACA;UACA,CAHA;QAIA,CARA;MASA,CAbA;MAcA;QAAA;MAAA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;IACA,CAvBA;IAwBAf;MACA;IACA;EA1BA,CArCA;EAiEAgB,OAjEA,qBAiEA;IAAA;;IACAC;IACA;IACA;IACA,mCAJA,CAKA;;IACA;IACA;MAAA;IAAA;IACA;EACA,CA1EA;EA2EAC;IACAC,cADA,0BACAC,KADA,EACA;MACA;IACA,CAHA;IAIAC,mBAJA,+BAIAD,KAJA,EAIA;MACA;IACA,CANA;IAOAE,YAPA,0BAOA;MACA;IACA,CATA;IAUAC,aAVA,2BAUA;MACA;;MACA;QACA;MACA;;MACA;QACAC;MACA,CAFA;IAGA,CAlBA;IAmBAC,cAnBA,4BAmBA;MACA;QACA;UACAD;QACA,CAFA;MAGA;;MACA;QACA;MACA;IACA;EA5BA;AA3EA","names":["name","components","Header","Sidebar","Footer","Customizer","TapTop","data","mobileheader_toggle_var","sidebar_toggle_var","horizontal_Sidebar","resized","layoutobj","computed","mapState","menuItems","layout","togglesidebar","activeoverlay","layoutobject","get","set","watch","items","subItems","created","window","methods","sidebar_toggle","value","mobiletoggle_toggle","handleResize","removeoverlay","menuItem","hidesecondmenu"],"sourceRoot":"src/components","sources":["body.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"page-wrapper\" :class=\"layoutobj\">\n      <div class=\"page-header\" :class=\"{ close_icon:!togglesidebar }\">\n        <Header @clicked=\"sidebar_toggle\" />\n      </div>\n      <div class=\"page-body-wrapper\">\n        <div class=\"bg-overlay\" :class=\"{active: activeoverlay }\" @click=\"removeoverlay()\"></div>\n        <div class=\"sidebar-wrapper\" :class=\"[{ close_icon : !togglesidebar }]\" :sidebar-layout=\"layout.settings.sidebar_setting\">\n          <Sidebar @clicked=\"sidebar_toggle\" />\n        </div>\n        <div class=\"page-body\" @click=\"hidesecondmenu()\">\n          <transition name=\"fadeIn\" enter-active-class=\"animated fadeIn\">\n           <router-view class=\"view\"></router-view>\n          </transition>\n        </div>\n        <Footer/>\n      </div>\n      <Customizer/>\n      <TapTop/>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex';\n  import { layoutClasses } from '../constants/layout';\n  import Header from './header';\n  import Sidebar from './sidebar';\n  import Footer from './footer';\n  import Customizer from './customizer';\n  import TapTop from './taptop';\n\n  export default {\n    name: 'mainpage',\n    // props:['sidebar_toggle_var'],\n    components:{\n      Header,\n      Sidebar,\n      Footer,\n      Customizer,\n      TapTop\n    },\n    data(){\n      return{\n        mobileheader_toggle_var: false,\n        sidebar_toggle_var: false,\n        horizontal_Sidebar: true,\n        resized:false,\n        layoutobj:{}\n      };\n    },\n    computed: {\n      ...mapState({\n        menuItems: state => state.menu.data,\n        layout: state => state.layout.layout,\n        togglesidebar: (state) => state.menu.togglesidebar,\n        activeoverlay: (state) => state.menu.activeoverlay\n      }),\n      layoutobject: {\n        get: function () {\n          return JSON.parse(JSON.stringify(layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout)))[this.layout.settings.layout];\n        },\n        set: function () {\n          this.layoutobj = layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout);\n          this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\n          return this.layoutobj;\n        }\n      }\n    },\n    watch:{\n      '$route' (){\n        this.menuItems.filter(items => {\n          if (items.path === this.$route.path)\n            this.$store.dispatch('menu/setActiveRoute', items);\n          if (!items.children) return false;\n          items.children.filter(subItems => {\n            if (subItems.path === this.$route.path)\n              this.$store.dispatch('menu/setActiveRoute', subItems);\n            if (!subItems.children) return false;\n            subItems.children.filter(subSubItems => {\n              if (subSubItems.path === this.$route.path)\n                this.$store.dispatch('menu/setActiveRoute', subSubItems);\n            });\n          });\n        });\n        this.layoutobj = layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout);\n        if((window.innerWidth < 991 && this.layout.settings.layout === 'LosAngeles') || (window.innerWidth < 991 && this.layout.settings.layout === 'Singapore') || (window.innerWidth < 991 && this.layout.settings.layout === 'Barcelona')) {\n          const newlayout = JSON.parse(JSON.stringify(this.layoutobj).replace('horizontal-wrapper', 'compact-wrapper'));\n          this.layoutobj = JSON.parse(JSON.stringify(newlayout))[this.layout.settings.layout];\n        } else  {\n          this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout]; \n        }\n      },\n      sidebar_toggle_var: function (){\n        this.resized = (this.width <= 991) ? !this.sidebar_toggle_var : this.sidebar_toggle_var;      \n      }\n    },\n    created(){\n      window.addEventListener('resize', this.handleResize);\n      this.handleResize();\n      this.resized = this.sidebar_toggle_var;\n      this.$store.dispatch('layout/set');\n      // this.$router.replace({ 'query': null }).catch(err => err);\n      this.layout.settings.layout = this.$route.query.layout? this.$route.query.layout : 'Dubai';\n      this.layoutobj = layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout);\n      this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout]; \n    },\n    methods:{\n      sidebar_toggle(value) {\n        this.sidebar_toggle_var = !value;\n      },\n      mobiletoggle_toggle(value) {\n        this.mobileheader_toggle_var = value;\n      },\n      handleResize() {\n        this.$store.dispatch('menu/resizetoggle');\n      },\n      removeoverlay() {\n        this.$store.state.menu.activeoverlay = false;\n        if(window.innerWidth < 991){  \n          this.$store.state.menu.togglesidebar = false; \n        }\n        this.menuItems.filter(menuItem => {\n          menuItem.active = false;\n        });\n      }, \n      hidesecondmenu() {\n        if(this.layoutobject.split(' ').includes('compact-sidebar')) {\n          this.menuItems.filter(menuItem => {\n            menuItem.active = false;\n          });\n        }\n        if(window.innerWidth < 991) {\n          this.$store.state.menu.togglesidebar = false; \n        }\n      }\n    }\n  };\n</script>\n\n"]},"metadata":{},"sourceType":"module"}