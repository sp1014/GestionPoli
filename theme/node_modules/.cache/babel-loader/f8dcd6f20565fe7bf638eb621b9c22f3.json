{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapActions } from 'vuex';\nimport { localeOptions } from '../../constants/config';\nexport default {\n  name: 'Language',\n  data: function data() {\n    return {\n      localeOptions: localeOptions,\n      langIcon: localStorage.getItem('currentLanguageIcon') || 'flag-icon-us'\n    };\n  },\n  watch: {\n    '$i18n.locale': function $i18nLocale(to, from) {\n      if (from !== to) {\n        this.$router.go(this.$route.path);\n      }\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['setLang'])), {}, {\n    changeLocale: function changeLocale(locale) {\n      this.setLang(locale);\n    }\n  })\n};","map":{"version":3,"mappings":";AAwBA;AACA;AAEA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,4BADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IACA,cADA,uBACAC,EADA,EACAC,IADA,EACA;MACA;QACA;MACA;IACA;EALA,CARA;EAeAC,yCACAC,uBADA;IAEAC,YAFA,wBAEAC,MAFA,EAEA;MACA;IACA;EAJA;AAfA","names":["name","data","localeOptions","langIcon","watch","to","from","methods","mapActions","changeLocale","locale"],"sourceRoot":"src/components/header","sources":["language.vue"],"sourcesContent":["<template>\n  <b-dropdown\n    id=\"langddm\"\n    class=\"translate_wrapper ml-2\"\n    variant=\"light\"\n    size=\"sm\"\n    toggle-class=\"language-button\"\n  >\n    <template slot=\"button-content\">\n      <i class=\"flag-icon\" :class=\"langIcon\"></i>\n      <span class=\"name\">{{ $i18n.locale }}</span>\n    </template>\n    <b-dropdown-item\n      v-for=\"(l, index) in localeOptions\"\n      :key=\"index\"\n      @click=\"changeLocale(l)\"\n    >\n      <i class=\"flag-icon\" :class=\"l.icon\"></i>\n      {{ l.name }}</b-dropdown-item\n    >\n  </b-dropdown>\n</template>\n\n<script>\n  import { mapActions } from 'vuex';\n  import { localeOptions } from '../../constants/config';\n\n  export default {\n    name: 'Language',\n    data() {\n      return {\n        localeOptions,\n        langIcon: localStorage.getItem('currentLanguageIcon') || 'flag-icon-us',\n      };\n    },\n    watch: {\n      '$i18n.locale'(to, from) {\n        if (from !== to) {\n          this.$router.go(this.$route.path);\n        }\n      },\n    },\n    methods: {\n      ...mapActions(['setLang']),\n      changeLocale(locale) {\n        this.setLang(locale);\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}