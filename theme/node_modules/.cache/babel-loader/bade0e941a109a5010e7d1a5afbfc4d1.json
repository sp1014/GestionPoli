{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapState } from 'vuex';\nimport { layoutClasses } from '../../constants/layout';\nexport default {\n  name: 'Navmenu',\n  data: function data() {\n    return {\n      layoutobj: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    menuItems: function menuItems(state) {\n      return state.menu.data;\n    },\n    layout: function layout(state) {\n      return state.layout.layout;\n    },\n    sidebar: function sidebar(state) {\n      return state.layout.sidebarType;\n    },\n    activeoverlay: function activeoverlay(state) {\n      return state.menu.activeoverlay;\n    },\n    togglesidebar: function togglesidebar(state) {\n      return state.menu.togglesidebar;\n    },\n    width: function width(state) {\n      return state.menu.width;\n    },\n    height: function height(state) {\n      return state.menu.height;\n    },\n    margin: function margin(state) {\n      return state.menu.margin;\n    },\n    menuWidth: function menuWidth(state) {\n      return state.menu.menuWidth;\n    }\n  })), {}, {\n    layoutobject: {\n      get: function get() {\n        var _this = this;\n\n        return JSON.parse(JSON.stringify(layoutClasses.find(function (item) {\n          return Object.keys(item).pop() === _this.layout.settings.layout;\n        })))[this.layout.settings.layout];\n      },\n      set: function set() {\n        var _this2 = this;\n\n        this.layoutobj = layoutClasses.find(function (item) {\n          return Object.keys(item).pop() === _this2.layout.settings.layout;\n        });\n        this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\n        return this.layoutobj;\n      }\n    }\n  }),\n  watch: {\n    width: function width() {\n      window.addEventListener('resize', this.handleResize);\n      this.handleResize();\n      window.addEventListener('scroll', this.handleScroll);\n      this.handleScroll();\n\n      if (window.innerWidth < 992) {\n        var newlayout = JSON.parse(JSON.stringify(this.layoutobject).replace('horizontal-wrapper', 'compact-wrapper'));\n        document.querySelector('.page-wrapper').className = 'page-wrapper ' + newlayout;\n        this.$store.state.menu.margin = 0;\n      } else {\n        document.querySelector('.page-wrapper').className = 'page-wrapper ' + this.layoutobject;\n      }\n\n      if (window.innerWidth < 1199 && this.layout.settings.layout === 'Tokyo' || window.innerWidth < 1199 && this.layout.settings.layout === 'Moscow' || window.innerWidth < 1199 && this.layout.settings.layout === 'Rome') {\n        this.menuItems.filter(function (menuItem) {\n          menuItem.active = false;\n        });\n      }\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n\n    if (this.$store.state.menu.width < 991) {\n      this.layout.settings.layout = 'Dubai';\n      this.margin = 0;\n    }\n\n    setTimeout(function () {\n      var elmnt = document.getElementById('myDIV');\n      _this3.$store.state.menu.menuWidth = elmnt.offsetWidth;\n      _this3.$store.state.menu.menuWidth > window.innerWidth ? (_this3.$store.state.menu.hideRightArrow = false, _this3.$store.state.menu.hideLeftArrowRTL = false) : (_this3.$store.state.menu.hideRightArrow = false, _this3.$store.state.menu.hideLeftArrowRTL = true);\n    }, 500);\n    this.layoutobject = layoutClasses.find(function (item) {\n      return Object.keys(item).pop() === _this3.layout.settings.layout;\n    });\n    this.layoutobject = JSON.parse(JSON.stringify(this.layoutobject))[this.layout.settings.layout];\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('resize', this.handleResize);\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    this.menuItems.filter(function (items) {\n      if (items.path === _this4.$route.path) _this4.$store.dispatch('menu/setActiveRoute', items);\n      if (!items.children) return false;\n      items.children.filter(function (subItems) {\n        if (subItems.path === _this4.$route.path) _this4.$store.dispatch('menu/setActiveRoute', subItems);\n        if (!subItems.children) return false;\n        subItems.children.filter(function (subSubItems) {\n          if (subSubItems.path === _this4.$route.path) _this4.$store.dispatch('menu/setActiveRoute', subSubItems);\n        });\n      });\n    });\n  },\n  methods: {\n    handleScroll: function handleScroll() {\n      if (window.scrollY > 400) {\n        if (this.layoutobject.split(' ').pop() === 'material-type' || this.layoutobject.split(' ').pop() === 'advance-layout') document.querySelector('.sidebar-main').className = 'sidebar-main hovered';\n      } else {\n        if (document.getElementById('sidebar-main')) document.querySelector('.sidebar-main').className = 'sidebar-main';\n      }\n    },\n    setNavActive: function setNavActive(item) {\n      this.$store.dispatch('menu/setNavActive', item);\n\n      if (this.layoutobject.split(' ').includes('compact-sidebar') && window.innerWidth > 991) {\n        if (this.menuItems.some(function (menuItem) {\n          return menuItem.active === true;\n        })) {\n          this.$store.state.menu.activeoverlay = true;\n        } else {\n          this.$store.state.menu.activeoverlay = false;\n        }\n      }\n    },\n    hidesecondmenu: function hidesecondmenu() {\n      if (window.innerWidth < 991) {\n        this.$store.state.menu.activeoverlay = false, this.$store.state.menu.togglesidebar = false;\n        this.menuItems.filter(function (menuItem) {\n          menuItem.active = false;\n        });\n      } else if (this.layoutobject.split(' ').includes('compact-sidebar')) {\n        this.$store.state.menu.activeoverlay = false, this.menuItems.filter(function (menuItem) {\n          menuItem.active = false;\n        });\n      }\n    },\n    handleResize: function handleResize() {\n      this.$store.state.menu.width = window.innerWidth - 450;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAyMA;AACA;AAEA;EACAA,eADA;EAEAC,IAFA,kBAEA;IACA;MACAC;IADA;EAGA,CANA;EAOAC,0CACAC;IACAC;MAAA;IAAA,CADA;IAEAC;MAAA;IAAA,CAFA;IAGAC;MAAA;IAAA,CAHA;IAIAC;MAAA;IAAA,CAJA;IAKAC;MAAA;IAAA,CALA;IAMAC;MAAA;IAAA,CANA;IAOAC;MAAA;IAAA,CAPA;IAQAC;MAAA;IAAA,CARA;IASAC;MAAA;IAAA;EATA,EADA;IAYAC;MACAC;QAAA;;QACA;UAAA;QAAA;MACA,CAHA;MAIAC;QAAA;;QACA;UAAA;QAAA;QACA;QACA;MACA;IARA;EAZA,EAPA;EA8BAC;IACAP,KADA,mBACA;MACAQ;MACA;MACAA;MACA;;MACA;QACA;QACAC;QACA;MACA,CAJA,MAIA;QACAA;MACA;;MAEA;QACA;UACAC;QACA,CAFA;MAGA;IACA;EAnBA,CA9BA;EAmDAC,OAnDA,qBAmDA;IAAA;;IACAH;IACA;;IACA;MACA;MACA;IACA;;IACAI;MACA;MACA;MACA,0DACA,kGADA,KAEA,iGAFA;IAGA,CANA,EAMA,GANA;IAOA;MAAA;IAAA;IACA;EACA,CAnEA;EAoEAC,SApEA,uBAoEA;IACAL;EACA,CAtEA;EAuEAM,OAvEA,qBAuEA;IAAA;;IACA;MACA,uCACA;MACA;MACAC;QACA,0CACA;QACA;QACAC;UACA,6CACA;QACA,CAHA;MAIA,CARA;IASA,CAbA;EAcA,CAtFA;EAuFAC;IACAC,YADA,0BACA;MACA;QACA,uHACAT;MACA,CAHA,MAGA;QACA,6CACAA;MACA;IACA,CATA;IAUAU,YAVA,wBAUAC,IAVA,EAUA;MACA;;MACA;QACA;UAAA;QAAA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA;IACA,CAnBA;IAoBAC,cApBA,4BAoBA;MACA;QACA,8CACA,4CADA;QAEA;UACAX;QACA,CAFA;MAGA,CANA,MAMA;QACA,8CACA;UACAA;QACA,CAFA,CADA;MAIA;IACA,CAjCA;IAkCAY,YAlCA,0BAkCA;MACA;IACA;EApCA;AAvFA","names":["name","data","layoutobj","computed","mapState","menuItems","layout","sidebar","activeoverlay","togglesidebar","width","height","margin","menuWidth","layoutobject","get","set","watch","window","document","menuItem","created","setTimeout","destroyed","mounted","items","subItems","methods","handleScroll","setNavActive","item","hidesecondmenu","handleResize"],"sourceRoot":"src/components/sidebar","sources":["navmenu.vue"],"sourcesContent":["<template>\n        <div id=\"sidebar-menu\" class=\"d-flex\">\n          <!-- {{layoutobject}}\t\n          fdsfdsf{{[layoutobject.split(' ').includes('horizontal-wrapper')]}} -->\n          <ul class=\"sidebar-links custom-scrollbar\" id=\"myDIV\"\n          :style=\"[layoutobject.split(' ').includes('horizontal-wrapper')  ? layout.settings.layout_type=='rtl'? {'  -right': margin+'px'} : {'margin-left': margin+'px'} :  { margin : '0px'}]\"\n          >\n            <li class=\"back-btn\">\n              <router-link to=\"/\">\n                <img\n                  class=\"img-fluid\"\n                  src=\"../../assets/images/logo/logo-icon.png\"\n                  alt=\"\"\n              /></router-link>\n              <div class=\"mobile-back text-right\">\n                <span>Back</span\n                ><i class=\"fa fa-angle-right pl-2\" aria-hidden=\"true\"></i>\n              </div>\n            </li>\n           <li\n                v-for=\"(menuItem, index) in menuItems\"\n                :key=\"index\"\n                :class=\"{'active': menuItem.active, 'sidebar-main-title' : menuItem.type == 'headtitle'}\"\n                class=\"sidebar-list\"\n              >\n                <!-- link title -->\n                <div v-if=\"menuItem.type == 'headtitle'\">\n                  <h6 class=\"lan-1\">{{ $t(menuItem.headTitle1) }}</h6>\n                  <p class=\"lan-2\">{{ $t(menuItem.headTitle2) }}</p>\n                </div>\n                <!-- Sub -->\n                <label\n                      :class=\"'badge badge-'+menuItem.badgeType\"\n                      v-if=\"menuItem.badgeType\"\n                    >{{ $t(menuItem.badgeValue) }}</label>\n                    <a\n                  href=\"javascript:void(0)\"\n                  class=\"sidebar-link sidebar-title\"\n                  v-if=\"menuItem.type == 'sub'\"\n                  @click=\"setNavActive(menuItem, index)\"\n                >\n                  <feather :type=\"menuItem.icon\" class=\"top\"></feather>\n                  <span>\n                    {{ $t(menuItem.title) }}\n                  </span>\n                  <div class=\"according-menu\" v-if=\"menuItem.children\">\n                    <i class=\"fa fa-angle-right pull-right\" ></i>\n                  </div>\n                </a>\n                <!-- Link -->\n                <router-link\n                  :to=\"menuItem.path\"\n                  class=\"sidebar-link sidebar-title\"\n                  v-if=\"menuItem.type == 'link'\"\n                  router-link-exact-active\n                  exact v-on:click.native=\"hidesecondmenu()\"\n                >\n                  <feather :type=\"menuItem.icon\" class=\"top\"></feather>\n                  <span>\n                    {{ $t(menuItem.title) }}\n                  </span>\n                  <i class=\"fa fa-angle-right pull-right\" v-if=\"menuItem.children\"></i>\n                </router-link>\n                <!-- External Link -->\n                <a\n                  :href=\"menuItem.path\"\n                  class=\"sidebar-link sidebar-title\"\n                  v-if=\"menuItem.type == 'extLink'\"\n                  @click=\"setNavActive(menuItem, index)\"\n                >\n                  <feather :type=\"menuItem.icon\" class=\"top\"></feather>\n                  <span>\n                    {{ $t(menuItem.title) }}\n                  </span>\n                  <i class=\"fa fa-angle-right pull-right\" v-if=\"menuItem.children\"></i>\n                </a>\n                <!-- External Tab Link -->\n                <a\n                  :href=\"menuItem.path\"\n                  target=\"_blank\"\n                  class=\"sidebar-link sidebar-title\"\n                  v-if=\"menuItem.type == 'extTabLink'\"\n                  @click=\"setNavActive(menuItem, index)\"\n                >\n                  <feather :type=\"menuItem.icon\" class=\"top\"></feather>\n                  <span>\n                    {{ $t(menuItem.title) }}\n                  </span>\n                  <i class=\"fa fa-angle-right pull-right\" v-if=\"menuItem.children\"></i>\n                </a>\n                <!-- 2nd Level Menu -->\n                <ul class=\"sidebar-submenu\" v-if=\"menuItem.children\" :class=\"{ 'menu-open': menuItem.active }\">\n                  <li\n                    v-for=\"(childrenItem, index) in menuItem.children\"\n                    :key=\"index\"\n                    :class=\"{'active': childrenItem.active}\"\n                  >\n                    <!-- Sub -->\n                    <a\n                      class=\"submenu-title\"\n                      href=\"javascript:void(0)\"\n                      v-if=\"childrenItem.type == 'sub'\"\n                      @click=\"setNavActive(childrenItem, index)\"\n                    >\n                      {{ $t(childrenItem.title) }}\n                      <label\n                        :class=\"'badge badge-'+childrenItem.badgeType+' pull-right'\"\n                        v-if=\"childrenItem.badgeType\"\n                      >{{childrenItem.badgeValue}}</label>\n                      <i class=\"fa pull-right mt-1\" v-bind:class=\"[childrenItem.active ? 'fa fa-angle-down' : 'fa fa-angle-right']\" v-if=\"childrenItem.children\"></i>\n                    </a>\n                    <!-- Link -->\n                    <router-link\n                      class=\"submenu-title\"\n                      :to=\"childrenItem.path\"\n                      v-if=\"childrenItem.type == 'link'\"\n                      router-link-exact-active\n                      exact v-on:click.native=\"hidesecondmenu()\"\n                    >\n                      {{ $t(childrenItem.title) }}\n                      <label\n                        :class=\"'badge badge-'+childrenItem.badgeType+' pull-right'\"\n                        v-if=\"childrenItem.badgeType\"\n                      >{{ $t(childrenItem.badgeValue) }}</label>\n                      <i class=\"fa fa-angle-right pull-right mt-1\" v-if=\"childrenItem.children\"></i>\n                    </router-link>\n                    <!-- External Link -->\n                    <a :href=\"childrenItem.path\" v-if=\"childrenItem.type == 'extLink'\" class=\"submenu-title\">\n                      {{ $t(childrenItem.title) }}\n                      <label\n                        :class=\"'badge badge-'+childrenItem.badgeType+' pull-right'\"\n                        v-if=\"childrenItem.badgeType\"\n                      >{{ $t(childrenItem.badgeValue) }}</label>\n                      <i class=\"fa fa-angle-right pull-right mt-1\" v-if=\"childrenItem.children\"></i>\n                    </a>\n                    <!-- External Tab Link -->\n                    <a\n                    class=\"submenu-title\"\n                      :href=\"childrenItem.path\"\n                      target=\"_blank\"\n                      v-if=\"childrenItem.type == 'extTabLink'\"\n                    >\n                      {{ $t(childrenItem.title) }}\n                      <label\n                        :class=\"'badge badge-'+childrenItem.badgeType+' pull-right'\"\n                        v-if=\"childrenItem.badgeType\"\n                      >{{ $t(childrenItem.badgeValue) }}</label>\n                      <i class=\"fa fa-angle-right pull-right mt-1\" v-if=\"childrenItem.children\"></i>\n                    </a>\n                    <!-- 3rd Level Menu -->\n                    <ul class=\"nav-sub-childmenu submenu-content\" v-if=\"childrenItem.children\" :class=\"{ 'opensubchild': childrenItem.active }\">\n                      <li v-for=\"(childrenSubItem, index) in childrenItem.children\" :key=\"index\">\n                        <!-- Link -->\n                        <router-link\n                          :to=\"childrenSubItem.path\"\n                          v-if=\"childrenSubItem.type == 'link'\"\n                          router-link-exact-active\n                          exact v-on:click.native=\"hidesecondmenu()\"\n                        >\n                          {{ $t(childrenSubItem.title) }}\n                          <label\n                            :class=\"'badge badge-'+childrenSubItem.badgeType+' pull-right'\"\n                            v-if=\"childrenSubItem.badgeType\"\n                          >{{ $t(childrenSubItem.badgeValue) }}</label>\n                          <i class=\"fa fa-angle-right pull-right\" v-if=\"childrenSubItem.children\"></i>\n                        </router-link>\n                        <!-- External Link -->\n                        <router-link\n                          :to=\"childrenSubItem.path\"\n                          v-if=\"childrenSubItem.type == 'extLink'\"\n                          router-link-exact-active\n                        >\n                          {{ $t(childrenSubItem.title) }}\n                          <label\n                            :class=\"'badge badge-'+childrenSubItem.badgeType+' pull-right'\"\n                            v-if=\"childrenSubItem.badgeType\"\n                          >{{ $t(childrenSubItem.badgeValue) }}</label>\n                          <i class=\"fa fa-angle-right pull-right\" v-if=\"childrenSubItem.children\"></i>\n                        </router-link>\n                        <!-- External Tab Link -->\n                        <router-link\n                          :to=\"childrenSubItem.path\"\n                          v-if=\"childrenSubItem.type == 'extLink'\"\n                          router-link-exact-active\n                        >\n                          {{ $t(childrenSubItem.title) }}\n                          <label\n                            :class=\"'badge badge-'+childrenSubItem.badgeType+' pull-right'\"\n                            v-if=\"childrenSubItem.badgeType\"\n                          >{{ $t(childrenSubItem.badgeValue) }}</label>\n                          <i class=\"fa fa-angle-right pull-right\" v-if=\"childrenSubItem.children\"></i>\n                        </router-link>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n          </ul>\n        </div>\n</template>\n<script>\n  import { mapState } from 'vuex';\n  import { layoutClasses } from '../../constants/layout';\n  \n  export default {\n    name: 'Navmenu',\n    data() {\n      return {\n        layoutobj:{}\n      };\n    },\n    computed: {\n      ...mapState({\n        menuItems: state => state.menu.data,\n        layout: state => state.layout.layout,\n        sidebar: state => state.layout.sidebarType,\n        activeoverlay: (state) => state.menu.activeoverlay,\n        togglesidebar: (state) => state.menu.togglesidebar,\n        width: (state) => state.menu.width,\n        height: (state) => state.menu.height,\n        margin: (state) => state.menu.margin,\n        menuWidth: (state) => state.menu.menuWidth,\n      }),\n      layoutobject: {\t\n        get: function () {\t\n          return JSON.parse(JSON.stringify(layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout)))[this.layout.settings.layout];\t\n        },\t\n        set: function () {\t\n          this.layoutobj = layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout);\t\n          this.layoutobj = JSON.parse(JSON.stringify(this.layoutobj))[this.layout.settings.layout];\t\n          return this.layoutobj;\t\n        }\t\n      }\n    },\n    watch: {\n      width() {\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n        window.addEventListener('scroll',this.handleScroll);\n        this.handleScroll(); \n        if (window.innerWidth < 992) {\n          const newlayout = JSON.parse(JSON.stringify(this.layoutobject).replace('horizontal-wrapper', 'compact-wrapper'));\n          document.querySelector('.page-wrapper').className = 'page-wrapper ' + newlayout;\n          this.$store.state.menu.margin = 0;\n        } else {\n          document.querySelector('.page-wrapper').className = 'page-wrapper ' + this.layoutobject;\n        }\n\n        if((window.innerWidth < 1199 && this.layout.settings.layout === 'Tokyo') || (window.innerWidth < 1199 && this.layout.settings.layout === 'Moscow') || (window.innerWidth < 1199 && this.layout.settings.layout === 'Rome')) {\n          this.menuItems.filter(menuItem => {\n            menuItem.active = false;\n          });\n        }\n      }\n    },\n    created() {\n      window.addEventListener('resize', this.handleResize);\n      this.handleResize();\n      if (this.$store.state.menu.width < 991) {\n        this.layout.settings.layout = 'Dubai';\t\n        this.margin = 0;\n      }\n      setTimeout(()=> {\n        const elmnt = document.getElementById('myDIV');\n        this.$store.state.menu.menuWidth = elmnt.offsetWidth;   \n        this.$store.state.menu.menuWidth > window.innerWidth  ? \n          (this.$store.state.menu.hideRightArrow = false,this.$store.state.menu.hideLeftArrowRTL = false) : \n          (this.$store.state.menu.hideRightArrow = false,this.$store.state.menu.hideLeftArrowRTL = true);\n      }, 500);\n      this.layoutobject = layoutClasses.find((item) => Object.keys(item).pop() === this.layout.settings.layout);\t\n      this.layoutobject = JSON.parse(JSON.stringify(this.layoutobject))[this.layout.settings.layout];\n    },\n    destroyed() {\n      window.removeEventListener('resize', this.handleResize);\n    },\n    mounted() {   \n      this.menuItems.filter(items => {\n        if (items.path === this.$route.path)\n          this.$store.dispatch('menu/setActiveRoute', items);\n        if (!items.children) return false;\n        items.children.filter(subItems => {\n          if (subItems.path === this.$route.path)\n            this.$store.dispatch('menu/setActiveRoute', subItems);\n          if (!subItems.children) return false;\n          subItems.children.filter(subSubItems => {\n            if (subSubItems.path === this.$route.path)\n              this.$store.dispatch('menu/setActiveRoute', subSubItems);\n          });\n        });\n      });\n    },\n    methods: {\n      handleScroll() {\n        if(window.scrollY > 400){\n          if(this.layoutobject.split(' ').pop() === 'material-type' || this.layoutobject.split(' ').pop() ==='advance-layout')\n            document.querySelector('.sidebar-main').className = 'sidebar-main hovered';\n        }else{\n          if(document.getElementById('sidebar-main'))\n            document.querySelector('.sidebar-main').className = 'sidebar-main';\n        }\n      },\n      setNavActive(item) {\n        this.$store.dispatch('menu/setNavActive', item);\n        if(this.layoutobject.split(' ').includes('compact-sidebar') && window.innerWidth > 991) {\n          if(this.menuItems.some(menuItem => menuItem.active === true)) {\n            this.$store.state.menu.activeoverlay = true;\n          } else {\n            this.$store.state.menu.activeoverlay = false;\n          }\n        }\n      },\n      hidesecondmenu() {\n        if(window.innerWidth < 991) {\n          this.$store.state.menu.activeoverlay = false,\n          this.$store.state.menu.togglesidebar = false;\n          this.menuItems.filter(menuItem => {\n            menuItem.active = false;\n          });\n        } else if(this.layoutobject.split(' ').includes('compact-sidebar')){\n          this.$store.state.menu.activeoverlay = false,\n          this.menuItems.filter(menuItem => {\n            menuItem.active = false;\n          });\n        }\n      },\n      handleResize() {\n        this.$store.state.menu.width = window.innerWidth - 450;\n      },\n    }\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}