{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// import config from 'config';\n\n/* eslint-disable */\nimport { authHeader } from '../_helpers';\nexport var userService = {\n  login: login,\n  logout: logout,\n  getAll: getAll\n};\n\nfunction login(username, password) {\n  var requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  };\n  return fetch(\"http://localhost:8080/users/authenticate\", requestOptions).then(handleResponse).then(function (user) {\n    // login successful if there's a jwt token in the response\n    if (user.token) {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getAll() {\n  var requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(\"http://localhost:8080/users\", requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(function (text) {\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        location.reload(true);\n      }\n\n      var error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"names":["authHeader","userService","login","logout","getAll","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","token","localStorage","setItem","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"sources":["C:/Users/user/Videos/FRONTTTTTT/vue/theme/src/_services/user.service.js"],"sourcesContent":["// import config from 'config';\n\n/* eslint-disable */\nimport { authHeader } from '../_helpers';\n\nexport const userService = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`http://localhost:8080/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`http://localhost:8080/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"],"mappings":";;AAAA;;AAEA;AACA,SAASA,UAAT,QAA2B,aAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG;EACvBC,KAAK,EAALA,KADuB;EAEvBC,MAAM,EAANA,MAFuB;EAGvBC,MAAM,EAANA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;EAC/B,IAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MADW;IAEnBC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFU;IAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,QAAQ,EAARA,QAAF;MAAYC,QAAQ,EAARA;IAAZ,CAAf;EAHa,CAAvB;EAMA,OAAOO,KAAK,6CAA6CN,cAA7C,CAAL,CACFO,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,IAAI,EAAI;IACV;IACA,IAAIA,IAAI,CAACC,KAAT,EAAgB;MACZ;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B;IACH;;IAED,OAAOA,IAAP;EACH,CAVE,CAAP;AAWH;;AAED,SAASb,MAAT,GAAkB;EACd;EACAe,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAAShB,MAAT,GAAkB;EACd,IAAMG,cAAc,GAAG;IACnBC,MAAM,EAAE,KADW;IAEnBC,OAAO,EAAET,UAAU;EAFA,CAAvB;EAKA,OAAOa,KAAK,gCAAgCN,cAAhC,CAAL,CAAqDO,IAArD,CAA0DC,cAA1D,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;EAC9B,OAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqB,UAAAQ,IAAI,EAAI;IAChC,IAAMC,IAAI,GAAGD,IAAI,IAAIX,IAAI,CAACa,KAAL,CAAWF,IAAX,CAArB;;IACA,IAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;MACd,IAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;QACzB;QACAvB,MAAM;QACNwB,QAAQ,CAACC,MAAT,CAAgB,IAAhB;MACH;;MACD,IAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;MACA,OAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;IACH;;IAED,OAAON,IAAP;EACH,CAbM,CAAP;AAcH"},"metadata":{},"sourceType":"module"}