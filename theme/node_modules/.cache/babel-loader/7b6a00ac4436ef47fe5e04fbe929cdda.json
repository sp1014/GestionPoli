{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapState } from 'vuex';\nexport default {\n  name: 'todo',\n  data: function data() {\n    return {\n      markallread: true,\n      addtask: false,\n      task: ''\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    todolist: function todolist(state) {\n      return state.firebase_todo.todo;\n    }\n  })),\n  created: function created() {\n    this.retrieveTodos();\n  },\n  methods: {\n    retrieveTodos: function retrieveTodos() {\n      this.$store.dispatch('firebase_todo/retrieveTodos');\n    },\n    taskcomplete: function taskcomplete(id, status) {\n      this.$store.dispatch('firebase_todo/taskcomplete', id);\n      this.retrieveTodos();\n      if (status !== 'complete') this.$toasted.show(' tasks marked as complete.', {\n        theme: 'outline',\n        type: 'success',\n        duration: 2000\n      });else this.$toasted.show(' tasks marked as incomplete.', {\n        theme: 'outline',\n        type: 'error',\n        duration: 2000\n      });\n    },\n    alltaskcomplete: function alltaskcomplete() {\n      this.$store.dispatch('firebase_todo/alltaskcomplete', this.markallread);\n      this.markallread = !this.markallread;\n      this.retrieveTodos();\n      if (this.markallread) this.$toasted.show('All tasks marked as Incomplete.', {\n        theme: 'outline',\n        type: 'error',\n        duration: 2000\n      });else this.$toasted.show('All tasks marked as complete.', {\n        theme: 'outline',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    tododelete: function tododelete(id) {\n      this.$store.dispatch('firebase_todo/tododelete', id);\n      this.retrieveTodos();\n      this.$toasted.show('Task has been deleted.', {\n        theme: 'outline',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    addnewtask: function addnewtask() {\n      if (this.task !== '') {\n        this.$store.dispatch('firebase_todo/addtodo', this.task);\n        this.task = '';\n        this.addtask = false;\n        var container = this.$el.querySelector('.todo-list-body');\n        setTimeout(function () {\n          container.scrollBy({\n            top: 200,\n            behavior: 'smooth'\n          });\n        }, 310);\n        this.$toasted.show('Task list is updated.', {\n          theme: 'outline',\n          type: 'success',\n          duration: 2000\n        });\n        this.retrieveTodos();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA4FA;AAEA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,iBADA;MAEAC,cAFA;MAGAC;IAHA;EAKA,CARA;EASAC,4BACAC;IACAC;MAAA;IAAA;EADA,EADA,CATA;EAcAC,OAdA,qBAcA;IACA;EACA,CAhBA;EAiBAC;IACAC,aADA,2BACA;MACA;IACA,CAHA;IAIAC,YAJA,wBAIAC,EAJA,EAIAC,MAJA,EAIA;MACA;MACA;MAEA,2BACA;QAAAC;QAAAC;QAAAC;MAAA,GADA,KAGA;QAAAF;QAAAC;QAAAC;MAAA;IACA,CAZA;IAaAC,eAbA,6BAaA;MACA;MACA;MACA;MAEA,sBACA;QAAAH;QAAAC;QAAAC;MAAA,GADA,KAGA;QAAAF;QAAAC;QAAAC;MAAA;IAEA,CAvBA;IAwBAE,UAxBA,sBAwBAN,EAxBA,EAwBA;MACA;MACA;MACA;QAAAE;QAAAC;QAAAC;MAAA;IACA,CA5BA;IA6BAG,UA7BA,wBA6BA;MACA;QACA;QACA;QACA;QACA;QACAC;UACAC;YAAAC;YAAAC;UAAA;QACA,CAFA,EAEA,GAFA;QAGA;UAAAT;UAAAC;UAAAC;QAAA;QACA;MACA;IAEA;EA1CA;AAjBA","names":["name","data","markallread","addtask","task","computed","mapState","todolist","created","methods","retrieveTodos","taskcomplete","id","status","theme","type","duration","alltaskcomplete","tododelete","addnewtask","setTimeout","container","top","behavior"],"sourceRoot":"src/pages/todo","sources":["firebase_todo.vue"],"sourcesContent":["<template>\n    <div>\n        <Breadcrumbs main=\"\" title=\"firebase todo\"/>\n        <!-- Container-fluid starts-->\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-xl-12\">\n                <div class=\"card\">\n                  <div class=\"card-header firebase-header\">\n                    <h5>firebase todo</h5>\n                  </div>\n                  <div class=\"card-body custom-scrollbar\">\n                    <div class=\"todo\">\n                      <div class=\"todo-list-wrapper\">\n                        <div class=\"todo-list-container\">\n                          <div class=\"mark-all-tasks firebase-sm\">\n                            <div @click=\"alltaskcomplete()\" class=\"mark-all-tasks-container\">\n                              <span class=\"mark-all-btn\" :class=\"{'move-down':!markallread}\"  id=\"mark-all-finished\" role=\"button\">\n                                <span class=\"btn-label\">Mark all as finished</span>\n                                <span class=\"action-box completed\">\n                                  <i class=\"icon\">\n                                    <i class=\"icon-check\"></i>\n                                  </i>\n                                </span>\n                              </span>\n                              <span class=\"mark-all-btn \" :class=\"{'move-down':markallread}\" id=\"mark-all-incomplete\" role=\"button\">\n                                <span class=\"btn-label\">Mark all as Incomplete</span>\n                                <span class=\"action-box\">\n                                  <i class=\"icon\">\n                                    <i class=\"icon-check\"></i>\n                                  </i>\n                                </span>\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"todo-list-body\">\n                            <ul id=\"todo-list\">\n                              <li  v-for=\"(todo,index) in todolist\" :key=\"index\" class=\"task\" :class=\"{'completed':todo.status == 'complete'}\">\n                                <div class=\"task-container\">\n                                  <h4 class=\"task-label\"> {{todo.title}} </h4>\n                                  <span class=\"task-action-btn\">\n                                      <span @click=\"tododelete(todo.id)\" class=\"action-box large delete-btn\" title=\"Delete Task\"><i class=\"icon\"><i class=\"icon-trash\"></i></i></span>\n                                     <span @click=\"taskcomplete(todo.id,todo.status)\" class=\"action-box large complete-btn\" title=\"Mark Complete\"><i class=\"icon\"><i class=\"icon-check\"></i></i></span>\n                                  </span>\n                                </div>\n                              </li>\n                            </ul>\n                          </div>\n\n                          <div class=\"todo-list-footer\">\n                            <div class=\"add-task-btn-wrapper\"><span class=\"add-task-btn\">\n                                <button  @click='addtask =! addtask' class=\"btn btn-primary\" :class=\"{'d-none':addtask}\"><i class=\"icon-plus\"></i> Add new task</button></span></div>\n                            <div class=\"new-task-wrapper \" :class=\"{'visible':addtask}\">\n                              <textarea v-on:keyup.enter=\"addnewtask\" v-model=\"task\" id=\"new-task\" placeholder=\"Enter new task here. . .\"></textarea>\n                              <span @click='addtask = false'  class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\">Close</span>\n                              <span @click=\"addnewtask()\" class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\">Add Task</span>\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                      <div>\n                        <notifications classes=\"task\" group=\"Todolist\" />\n                      </div>\n                    </div>\n\n\n                    <!-- HTML Template for tasks-->\n                    <script id=\"task-template \" type=\"tect/template\">\n                      <li class=\"task\">\n                      <div class=\"task-container\">\n                      <h4 class=\"task-label\"></h4>\n                      <span class=\"task-action-btn\">\n                      <span class=\"action-box large delete-btn\" title=\"Delete Task\">\n                      <i class=\"icon\"><i class=\"icon-trash\"></i></i>\n                      </span>\n                      <span class=\"action-box large complete-btn\" title=\"Mark Complete\">\n                      <i class=\"icon\"><i class=\"icon-check\"></i></i>\n                      </span>\n                      </span>\n                      </div>\n                      </li>\n                    </script>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      <!-- Container-fluid Ends-->\n    </div>\n</template>\n<script>\n  import { mapState } from 'vuex';\n\n  export default {\n    name:'todo',\n    data(){\n      return {\n        markallread :true,\n        addtask :false,\n        task:''\n      };\n    },\n    computed: {\n      ...mapState({\n        todolist: state => state.firebase_todo.todo,\n      })\n    },\n    created(){\n      this.retrieveTodos();\n    },\n    methods:{\n      retrieveTodos() {\n        this.$store.dispatch('firebase_todo/retrieveTodos');\n      },\n      taskcomplete(id,status) {\n        this.$store.dispatch('firebase_todo/taskcomplete', id);\n        this.retrieveTodos();\n\n        if(status !== 'complete')\n          this.$toasted.show(' tasks marked as complete.', { theme: 'outline', type: 'success', duration: 2000 });\n        else\n          this.$toasted.show(' tasks marked as incomplete.', { theme: 'outline', type: 'error', duration: 2000 });\n      },\n      alltaskcomplete() {\n        this.$store.dispatch('firebase_todo/alltaskcomplete',this.markallread);\n        this.markallread =! this.markallread;\n        this.retrieveTodos();\n\n        if(this.markallread)\n          this.$toasted.show('All tasks marked as Incomplete.',{ theme:'outline', type : 'error',duration:2000 });\n        else\n          this.$toasted.show('All tasks marked as complete.',{ theme:'outline', type : 'success',duration:2000 });\n\n      },\n      tododelete(id) {\n        this.$store.dispatch('firebase_todo/tododelete', id);\n        this.retrieveTodos();\n        this.$toasted.show('Task has been deleted.',{ theme:'outline', type : 'success',duration:2000 });\n      },\n      addnewtask() {\n        if(this.task !== '') {\n          this.$store.dispatch('firebase_todo/addtodo', this.task);\n          this.task = '';\n          this.addtask = false;\n          var container = this.$el.querySelector('.todo-list-body');\n          setTimeout(function () {\n            container.scrollBy({ top: 200, behavior: 'smooth' });\n          }, 310);\n          this.$toasted.show('Task list is updated.',{ theme:'outline', type : 'success',duration:2000 });\n          this.retrieveTodos();\n        }\n\n      }\n    }\n\n\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}