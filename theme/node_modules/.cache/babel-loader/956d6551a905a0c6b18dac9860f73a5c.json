{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Videos/FRONTTTTTT/vue/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport VueSlider from 'vue-slider-component';\nimport { mapGetters, mapState } from 'vuex';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/css/swiper.css';\nexport default {\n  components: {\n    VueSlider: VueSlider,\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      filter: false,\n      value: [0, 450],\n      applyFilter: [],\n      swiperOption: {\n        loop: true,\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        }\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    products: function products(state) {\n      return state.products.products;\n    }\n  })), mapGetters({\n    getCategory: 'products/getCategory',\n    getBrand: 'products/getBrands',\n    getColors: 'products/getColors'\n  })),\n  mounted: function mounted() {\n    this.$emit('priceVal', this.value);\n  },\n  methods: {\n    isActive: function isActive(filterItem) {\n      return this.applyFilter.indexOf(filterItem) > -1;\n    },\n    appliedFilter: function appliedFilter() {\n      this.$emit('allFilters', this.applyFilter);\n    },\n    sliderChange: function sliderChange(event) {\n      this.$emit('priceVal', event);\n    },\n    getImgUrl: function getImgUrl(path) {\n      return require('../../assets/images/' + path);\n    }\n  }\n};","map":{"version":3,"mappings":";AAuFA;AACA;AACA;AACA;AAEA;EACAA;IACAC,oBADA;IAEAC,cAFA;IAGAC;EAHA,CADA;EAMAC,IANA,kBAMA;IACA;MACAC,aADA;MAEAC,eAFA;MAGAC,eAHA;MAIAC;QACAC,UADA;QAEAC;UACAC,6BADA;UAEAC;QAFA;MAFA;IAJA;EAYA,CAnBA;EAoBAC,0CACAC;IACAC;MAAA;IAAA;EADA,EADA,GAIAC;IACAC,mCADA;IAEAC,8BAFA;IAGAC;EAHA,EAJA,CApBA;EA8BAC,OA9BA,qBA8BA;IACA;EACA,CAhCA;EAiCAC;IACAC,QADA,oBACAC,UADA,EACA;MACA;IACA,CAHA;IAIAC,aAJA,2BAIA;MACA;IACA,CANA;IAOAC,YAPA,wBAOAC,KAPA,EAOA;MACA;IACA,CATA;IAUAC,SAVA,qBAUAC,IAVA,EAUA;MACA;IACA;EAZA;AAjCA","names":["components","VueSlider","swiper","swiperSlide","data","filter","value","applyFilter","swiperOption","loop","navigation","nextEl","prevEl","computed","mapState","products","mapGetters","getCategory","getBrand","getColors","mounted","methods","isActive","filterItem","appliedFilter","sliderChange","event","getImgUrl","path"],"sourceRoot":"src/pages/ecommerce","sources":["filterbar.vue"],"sourcesContent":["<template>\n  <div class=\"left-filter\">\n    <div class=\"card-body filter-cards-view animate-chk\">\n      <div class=\"product-filter\">\n        <h6 class=\"f-w-500\">Category</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(product,index) in getCategory\" :key=\"index\">\n            <input  @change=\"appliedFilter(product.category)\" :value=\"product.category\" v-model=\"applyFilter\" \n            class=\"checkbox_animated\" :id=\"product.category\" type=\"checkbox\">{{product.category | capitalize}}\n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter\">\n        <h6 class=\"f-w-500\">Brand</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(brand,index) in getBrand\" :key=\"index\">\n            <input @change=\"appliedFilter(brand)\" class=\"checkbox_animated\" :value=\"brand\" \n            v-model=\"applyFilter\" :id=\"brand\" type=\"checkbox\"> {{brand | capitalize}}\n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter slider-product\">\n        <h6 class=\"f-w-500\">Colors</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(product,index) in getColors\" :key=\"index\">\n            <input @change=\"appliedFilter(product.color)\" class=\"checkbox_animated\" :value=\"product.color\" \n            v-model=\"applyFilter\" :id=\"product.color\" type=\"checkbox\"> \n            <span :class=\"product.color\" v-bind:style=\"{ 'background-color' : product.color}\"></span>\n            {{product.color | capitalize}}                                  \n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter pb-0\">\n        <h6 class=\"f-w-500\">Price</h6>\n          <vue-slider\n          v-model=\"value\"\n          :min=\"0\"\n          :max=\"800\"\n          ref=\"slider\"\n          @change=\"sliderChange($refs.slider.getValue())\">\n          </vue-slider>\n      </div>\n      <div class=\"product-filter new-products\">\n        <h6 class=\"f-w-500\">New Products</h6>\n           <swiper :options=\"swiperOption\">\n                <swiper-slide >\n                  <div class=\"product-box row\" v-for=\"(product,index) in products.slice(0, 3)\" :key=\"index\">\n                  <div class=\"product-img col-md-6\">\n                    <img class=\"img-fluid\" :src='getImgUrl(product.images[0])' alt=\"\">\n                  </div>\n                  <div class=\"product-details col-md-6 text-left\">\n                    <span>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning\"></i>\n                    </span>\n                    <router-link :to=\"'/ecommerce/details/'+product.sku\"> <p class=\"mb-0\">{{product.name}}</p></router-link>\n                    <div class=\"product-price\">{{product.price | currency}}</div>\n                  </div>\n                  </div>\n                  </swiper-slide>\n                  <swiper-slide v-if=\"products.length >= 4\">\n                    <div class=\"product-box row\" v-for=\"(product,index) in products.slice(3, 6)\" :key=\"index\">\n                      <div class=\"product-img col-md-6\">\n                        <img class=\"img-fluid\" :src='getImgUrl(product.images[0])' alt=\"\">\n                      </div>\n                    <div class=\"product-details col-md-6 text-left\">\n                      <span>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning\"></i>\n                      </span>\n                      <router-link :to=\"'/ecommerce/details/'+product.sku\"> <p class=\"mb-0\">{{product.name}}</p></router-link>\n                      <div class=\"product-price\">{{product.price | currency}}</div>\n                    </div>\n                    </div>\n                  </swiper-slide>\n           </swiper>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import VueSlider from 'vue-slider-component';\n  import { mapGetters, mapState } from 'vuex';\n  import { swiper, swiperSlide } from 'vue-awesome-swiper';\n  import 'swiper/css/swiper.css';\n\n  export default {\n    components: {\n      VueSlider,\n      swiper,\n      swiperSlide\n    },\n    data() {\n      return {\n        filter: false,\n        value: [0, 450],\n        applyFilter: [],\n        swiperOption: {\n          loop: true,\n          navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev'\n          }\n        }\n      };\n    },\n    computed: {\n      ...mapState({\n        products: state => state.products.products\n      }),\n      ...mapGetters({\n        getCategory: 'products/getCategory',\n        getBrand: 'products/getBrands',\n        getColors: 'products/getColors'\n      })\n    },\n    mounted() {\n      this.$emit('priceVal', this.value);\n    },\n    methods: {\n      isActive(filterItem) {\n        return this.applyFilter.indexOf(filterItem) > -1;\n      },\n      appliedFilter() {\n        this.$emit('allFilters', this.applyFilter);\n      },\n      sliderChange(event) {\n        this.$emit('priceVal', event);\n      },\n      getImgUrl(path) {\n        return require('../../assets/images/'+path);\n      }, \n    }\n  };\n</script>"]},"metadata":{},"sourceType":"module"}