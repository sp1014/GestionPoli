{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4901f3e2a3beb48c5e09","webpack:///./node_modules/cross-domain-utils/src/util.js","webpack:///./node_modules/cross-domain-utils/src/constants.js","webpack:///./node_modules/cross-domain-utils/src/utils.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/native.js","webpack:///./src/conf/constants.js","webpack:///./src/conf/config.js","webpack:///./src/lib/util.js","webpack:///./node_modules/zalgo-promise/src/utils.js","webpack:///./node_modules/zalgo-promise/src/exceptions.js","webpack:///./node_modules/zalgo-promise/src/flush.js","webpack:///./node_modules/zalgo-promise/src/promise.js","webpack:///./src/global.js","webpack:///./src/lib/serialize.js","webpack:///./src/lib/ready.js","webpack:///./src/drivers/send/strategies.js","webpack:///./src/drivers/send/index.js","webpack:///./src/drivers/listeners.js","webpack:///./src/drivers/receive/types.js","webpack:///./src/drivers/receive/index.js","webpack:///./src/public/client.js","webpack:///./src/public/server.js","webpack:///./src/public/config.js","webpack:///./src/public/index.js","webpack:///./src/clean.js","webpack:///./src/interface.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isRegex","item","toString","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","IE_WIN_ACCESS_ERROR","isAboutProtocol","arguments","length","undefined","window","location","protocol","getParent","win","parent","err","getOpener","opener","canReadFromWindow","href","getActualDomain","Error","host","getDomain","domain","mockDomain","indexOf","isActuallySameDomain","desc","getOwnPropertyDescriptor","isAncestorParent","child","childParent","result","push","getParents","getFrames","frames","len","frame","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","isSameDomain","mockclosed","top","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","isWindow","obj","Window","__cross_domain_utils_window_check__","CrossDomainSafeWeakMap","_classCallCheck","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","weakmap","keys","values","_cleanupClosedWindows","value","splice","isSafeToReadWrite","key","entry","writable","index","has","getOrSet","CONSTANTS","POST_MESSAGE_TYPE","REQUEST","RESPONSE","ACK","POST_MESSAGE_ACK","SUCCESS","ERROR","POST_MESSAGE_NAMES","METHOD","HELLO","OPEN_TUNNEL","WINDOW_TYPES","FULLPAGE","POPUP","IFRAME","WINDOW_PROPS","POSTROBOT","SERIALIZATION_TYPES","PROMISE","ZALGO_PROMISE","REGEX","SEND_STRATEGIES","POST_MESSAGE","BRIDGE","GLOBAL","MOCK_PROTOCOL","FILE_PROTOCOL","BRIDGE_NAME_PREFIX","POSTROBOT_PROXY","CONFIG","map","ALLOW_POSTMESSAGE_POPUP","__ALLOW_POSTMESSAGE_POPUP__","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","navigator","userAgent","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","ALLOW_SAME_ORIGIN","stringifyError","level","stack","newErr","once","method","called","apply","noop","uniqueID","chars","replace","charAt","floor","replaceObject","callback","depth","newobj","_typeof","TypeError","eachArray","eachObject","each","childItem","isPromise","Promise","constructor","then","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","promise__classCallCheck","resolved","rejected","errorHandled","handlers","error","isAsync","res","reject","dispatch","_this2","setTimeout","j","dispatchPossiblyUnhandledError","asyncReject","dispatching","chain","firstPromise","secondPromise","_handlers$i","onSuccess","onError","onFinally","timeout","time","_this3","clearTimeout","toPromise","all","promises","count","results","prom","hash","items","onPossiblyUnhandledException","cancel","context","args","delay","flush","Zalgo","awaitActive","global","registerSelf","methods","listenForMethods","on","_ref","source","data","meth","id","isSerialized","type","serialize__typeof","__type__","serializeMethod","destination","__id__","__name__","deserializeMethod","wrapper","slice","send","_ref2","__xdomain__","deserializeZalgoPromise","__then__","readyPromises","sayHello","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","forEach","postMessage","sendMessage","_jsonStringify","options","isPopup","isIframe","sourceDomain","_extends","windowType","buildMessage","__message__","__code__","code","serializePromise","serializeZalgoPromise","regex","__source__","serializeMethods","messages","replacer","indent","objectToJSON","arrayToJSON","toJSON","jsonStringify","strategyName","success","status","join","responseListeners","requestListeners","WINDOW_WILDCARD","erroredResponseListeners","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","nameListeners","_i2","_ref3","_length2","winQualifier","winListeners","_i4","_winListeners$__DOMAI2","_length4","_ref5","listener","RECEIVE_MESSAGE_TYPES","pathname","ack","_RECEIVE_MESSAGE_TYPE","respond","fireAndForget","types__extends","target","originalSource","handleError","response","receivedMessages","receiveMessage","event","parsedMessage","parse","receive__typeof","parseMessage","deserializeError","deserializePromise","RegExp","deserializeRegex","deserializeMethods","messageListener","sourceElement","originalEvent","requestPromises","request","targetWindow","el","document","getElementById","tagName","toLowerCase","HTMLIFrameElement","hasResult","requestPromise","actualParent","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","_length6","getTop","_i15","_getFrames8","_length14","isAncestor","onChildWindowReady","actualDomain","responseListener","addResponseListener","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref6","listenersCollection","_i6","_win2","_i8","_length8","_i10","_domain2","_length10","_i12","_length12","existingListener","strDomain","regexListeners","regexListener","onceFunction","errorOnClose","interval","runInterval","server__typeof","safeInterval","onceListener","disable","removeEventListener","cleanUpWindow","popupWindowsByWin","remoteWindows","bridge","init","initialized","addEventListener","attachEvent","initOnReady","INTERFACE"],"mappings":"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","file":"post-robot.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4901f3e2a3beb48c5e09","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/util.js","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/constants.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/utils.js","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/util.js","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/weakmap.js","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/native.js","/* @flow */\n\nexport let CONSTANTS = {\n\n    POST_MESSAGE_TYPE: {\n        REQUEST:  'postrobot_message_request',\n        RESPONSE: 'postrobot_message_response',\n        ACK:      'postrobot_message_ack'\n    },\n\n    POST_MESSAGE_ACK: {\n        SUCCESS: 'success',\n        ERROR:   'error'\n    },\n\n    POST_MESSAGE_NAMES: {\n        METHOD:      'postrobot_method',\n        HELLO:       'postrobot_ready',\n        OPEN_TUNNEL: 'postrobot_open_tunnel'\n    },\n\n    WINDOW_TYPES: {\n        FULLPAGE: 'fullpage',\n        POPUP:    'popup',\n        IFRAME:   'iframe'\n    },\n\n    WINDOW_PROPS: {\n        POSTROBOT: '__postRobot__'\n    },\n\n    SERIALIZATION_TYPES: {\n        METHOD:        'postrobot_method',\n        ERROR:         'postrobot_error',\n        PROMISE:       'postrobot_promise',\n        ZALGO_PROMISE: 'postrobot_zalgo_promise',\n        REGEX:         'regex'\n    },\n\n    SEND_STRATEGIES: {\n        POST_MESSAGE: 'postrobot_post_message',\n        BRIDGE:       'postrobot_bridge',\n        GLOBAL:       'postrobot_global'\n    },\n\n    MOCK_PROTOCOL: 'mock:',\n    FILE_PROTOCOL: 'file:',\n\n    BRIDGE_NAME_PREFIX: '__postrobot_bridge__',\n    POSTROBOT_PROXY:    '__postrobot_proxy__',\n\n    WILDCARD: '*'\n};\n\nexport const POST_MESSAGE_NAMES = {\n    METHOD:      'postrobot_method',\n    HELLO:       'postrobot_hello',\n    OPEN_TUNNEL: 'postrobot_open_tunnel'\n};\n\nexport let POST_MESSAGE_NAMES_LIST : Array<string> = Object.keys(POST_MESSAGE_NAMES)\n    .map(key => POST_MESSAGE_NAMES[key]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/constants.js","/* @flow */\n\nimport { CONSTANTS } from './constants';\n\nexport let CONFIG : Object = {\n\n    ALLOW_POSTMESSAGE_POPUP: ('__ALLOW_POSTMESSAGE_POPUP__' in window)\n        ? window.__ALLOW_POSTMESSAGE_POPUP__\n        : __POST_ROBOT__.__ALLOW_POSTMESSAGE_POPUP__,\n\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT: (window.navigator.userAgent.match(/MSIE/i) !== -1 && !__TEST__) ? 10000 : 2000,\n    RES_TIMEOUT: __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ CONSTANTS.SEND_STRATEGIES.POST_MESSAGE ]: true,\n        [ CONSTANTS.SEND_STRATEGIES.BRIDGE ]:       true,\n        [ CONSTANTS.SEND_STRATEGIES.GLOBAL ]:       true\n    },\n\n    ALLOW_SAME_ORIGIN: false\n};\n\nif (window.location.href.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n    CONFIG.ALLOW_POSTMESSAGE_POPUP = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/config.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { isPopup, isIframe, getUserAgent } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\n\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let once = <T>(method : Function) : ((...args : Array<any>) => T | void) => {\n    if (!method) {\n        return method;\n    }\n    let called = false;\n    return function onceWrapper() : T | void {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n};\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function addEventListener(obj : Object, event : string, handler : Function) : { cancel : () => void } {\n    if (obj.addEventListener) {\n        obj.addEventListener(event, handler);\n    } else {\n        obj.attachEvent(`on${ event }`, handler);\n    }\n\n    return {\n        cancel() {\n            if (obj.removeEventListener) {\n                obj.removeEventListener(event, handler);\n            } else {\n                obj.detachEvent(`on${ event }`, handler);\n            }\n        }\n    };\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    return 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n}\n\ntype MixedArrayType = Array<mixed>;\n\nexport function eachArray(item : MixedArrayType, callback : (item : mixed, key : number) => mixed) {\n    for (let i = 0; i < item.length; i++) {\n        callback(item[i], i);\n    }\n}\n\nexport function eachObject(item : Object, callback : (item : mixed, key : string) => mixed) {\n    for (let key in item) {\n        if (item.hasOwnProperty(key)) {\n            callback(item[key], key);\n        }\n    }\n}\n\nexport function each<T : Object | MixedArrayType>(item : T, callback : (item : mixed, key : number | string) => mixed) {\n    if (Array.isArray(item)) {\n        eachArray(item, callback);\n    } else if (typeof item === 'object' && item !== null) {\n        eachObject(item, callback);\n    }\n}\n\nexport function replaceObject<T : Object | MixedArrayType>(item : T, callback : (item : mixed, key : number | string) => mixed, depth : number = 1) : T {\n\n    if (depth >= 100) {\n        throw new Error(`Self-referential object passed, or object contained too many layers`);\n    }\n\n    let newobj;\n\n    if (typeof item === 'object' && item !== null && !Array.isArray(item)) {\n        newobj = {};\n    } else if (Array.isArray(item)) {\n        newobj = [];\n    } else {\n        throw new TypeError(`Invalid type: ${ typeof item }`);\n    }\n\n    each(item, (childItem, key) => {\n\n        let result = callback(childItem, key);\n\n        if (typeof result !== 'undefined') {\n            // $FlowFixMe\n            newobj[key] = result;\n        } else if (typeof childItem === 'object' && childItem !== null) {\n            // $FlowFixMe\n            newobj[key] = replaceObject(childItem, callback, depth + 1);\n        } else {\n            // $FlowFixMe\n            newobj[key] = childItem;\n        }\n    });\n\n    // $FlowFixMe\n    return newobj;\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n    let timeout;\n\n    function runInterval() {\n        timeout = setTimeout(runInterval, time);\n        method.call();\n    }\n\n    timeout = setTimeout(runInterval, time);\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        let result = weakmap.get(arg);\n\n        if (typeof result !== 'undefined') {\n            return result;\n        }\n\n        result = method.call(this, arg);\n\n        if (typeof result !== 'undefined') {\n            weakmap.set(arg, result);\n        }\n\n        return result;\n    };\n};\n\nexport function getWindowType() : string {\n    if (isPopup()) {\n        return CONSTANTS.WINDOW_TYPES.POPUP;\n    }\n    if (isIframe()) {\n        return CONSTANTS.WINDOW_TYPES.IFRAME;\n    }\n    return CONSTANTS.WINDOW_TYPES.FULLPAGE;\n}\n\nexport function jsonStringify<T : mixed>(obj : T, replacer : ?Function, indent : number | void) : string {\n\n    let objectToJSON;\n    let arrayToJSON;\n\n    try {\n        if (JSON.stringify({}) !== '{}') {\n            // $FlowFixMe\n            objectToJSON = Object.prototype.toJSON;\n            // $FlowFixMe\n            delete Object.prototype.toJSON;\n        }\n\n        if (JSON.stringify({}) !== '{}') {\n            throw new Error(`Can not correctly serialize JSON objects`);\n        }\n\n        if (JSON.stringify([]) !== '[]') {\n            // $FlowFixMe\n            arrayToJSON  = Array.prototype.toJSON;\n            // $FlowFixMe\n            delete Array.prototype.toJSON;\n        }\n\n        if (JSON.stringify([]) !== '[]') {\n            throw new Error(`Can not correctly serialize JSON objects`);\n        }\n\n    } catch (err) {\n        throw new Error(`Can not repair JSON.stringify: ${ err.message }`);\n    }\n\n    let result = JSON.stringify.call(this, obj, replacer, indent);\n\n    try {\n        if (objectToJSON) {\n            // $FlowFixMe\n            Object.prototype.toJSON = objectToJSON; // eslint-disable-line no-extend-native\n        }\n\n        if (arrayToJSON) {\n            // $FlowFixMe\n            Array.prototype.toJSON = arrayToJSON; // eslint-disable-line no-extend-native\n        }\n\n    } catch (err) {\n        throw new Error(`Can not repair JSON.stringify: ${ err.message }`);\n    }\n\n\n    return result;\n}\n\nexport function jsonParse(item : string) : mixed {\n    return JSON.parse(item);\n}\n            \nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n        \n    if (!CONFIG.ALLOW_POSTMESSAGE_POPUP) {\n        return true;\n    }\n        \n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/util.js","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/utils.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/exceptions.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/flush.js","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/promise.js","/* @flow */\n\nimport { CONSTANTS } from './conf';\n\nexport let global : Object = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] || {};\n\n// Backwards compatibility\n\nglobal.registerSelf = () => {\n    // pass\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\nimport { once, uniqueID, replaceObject, stringifyError, isRegex } from './util';\n\nglobal.methods = global.methods || new WeakMap();\n\nexport let listenForMethods = once(() => {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.METHOD, { origin: CONSTANTS.WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n\n        let methods = global.methods.get(source);\n\n        if (!methods) {\n            throw new Error(`Could not find any methods this window has privileges to call`);\n        }\n\n        let meth = methods[data.id];\n\n        if (!meth) {\n            throw new Error(`Could not find method with id: ${ data.id }`);\n        }\n\n        if (!matchDomain(meth.domain, origin)) {\n            throw new Error(`Method domain ${ meth.domain } does not match origin ${ origin }`);\n        }\n\n        return ZalgoPromise.try(() => {\n            return meth.method.apply({ source, origin, data }, data.args);\n\n        }).then(result => {\n\n            return {\n                result,\n                id:   data.id,\n                name: data.name\n            };\n        });\n    });\n});\n\nfunction isSerialized(item : mixed, type : string) : boolean {\n    return typeof item === 'object' && item !== null && item.__type__ === type;\n}\n\ntype SerializedMethod = {\n    __type__ : string,\n    __id__ : string,\n    __name__ : string\n};\n\nexport function serializeMethod(destination : CrossDomainWindowType, domain : string | Array<string>, method : Function, name : string) : SerializedMethod {\n\n    let id = uniqueID();\n\n    let methods = global.methods.get(destination);\n\n    if (!methods) {\n        methods = {};\n        global.methods.set(destination, methods);\n    }\n\n    methods[id] = { domain, method };\n\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.METHOD,\n        __id__:   id,\n        __name__: name\n    };\n}\n\ntype SerializedError = {\n    __type__ : string,\n    __message__ : string\n};\n\nfunction serializeError(err : mixed) : SerializedError {\n    return {\n        __type__:    CONSTANTS.SERIALIZATION_TYPES.ERROR,\n        __message__: stringifyError(err),\n        // $FlowFixMe\n        __code__:    err.code\n    };\n}\n\ntype SerializePromise = {\n    __type__ : string,\n    __then__ : SerializedMethod\n};\n\nfunction serializePromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\nfunction serializeZalgoPromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\ntype SerializedRegex = {\n    __type__ : string,\n    __source__ : string\n};\n\nfunction serializeRegex(regex : RegExp) : SerializedRegex {\n    return {\n        __type__:   CONSTANTS.SERIALIZATION_TYPES.REGEX,\n        __source__: regex.source\n    };\n}\n\nexport function serializeMethods(destination : CrossDomainWindowType, domain : string | Array<string>, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item, key) => {\n        if (typeof item === 'function') {\n            return serializeMethod(destination, domain, item, key.toString());\n        }\n\n        if (item instanceof Error) {\n            return serializeError(item);\n        }\n\n        if (window.Promise && item instanceof window.Promise) {\n            return serializePromise(destination, domain, item, key.toString());\n        }\n\n        if (ZalgoPromise.isPromise(item)) {\n            // $FlowFixMe\n            return serializeZalgoPromise(destination, domain, item, key.toString());\n        }\n\n        if (isRegex(item)) {\n            // $FlowFixMe\n            return serializeRegex(item);\n        }\n    }).obj;\n}\n\nexport function deserializeMethod(source : CrossDomainWindowType, origin : string, obj : Object) : Function {\n\n    function wrapper() : ZalgoPromise<mixed> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, CONSTANTS.POST_MESSAGE_NAMES.METHOD, {\n            id:   obj.__id__,\n            name: obj.__name__,\n            args\n\n        }, { domain: origin, timeout: -1 }).then(({ data }) => {\n            return data.result;\n        }, err => {\n            throw err;\n        });\n    }\n\n    wrapper.__name__ = obj.__name__;\n    wrapper.__xdomain__ = true;\n\n    wrapper.source = source;\n    wrapper.origin = origin;\n\n    return wrapper;\n}\n\nexport function deserializeError(source : CrossDomainWindowType, origin : string, obj : Object) : Error {\n    let err = new Error(obj.__message__);\n    if (obj.__code__) {\n        // $FlowFixMe\n        err.code = obj.__code__;\n    }\n    return err;\n}\n\nexport function deserializeZalgoPromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    return new ZalgoPromise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializePromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    if (!window.Promise) {\n        return deserializeZalgoPromise(source, origin, prom);\n    }\n\n    return new window.Promise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializeRegex(source : CrossDomainWindowType, origin : string, item : Object) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(item.__source__);\n}\n\nexport function deserializeMethods(source : CrossDomainWindowType, origin : string, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item) => {\n        if (typeof item !== 'object' || item === null) {\n            return;\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.METHOD)) {\n            return deserializeMethod(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ERROR)) {\n            return deserializeError(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.PROMISE)) {\n            return deserializePromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE)) {\n            return deserializeZalgoPromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.REGEX)) {\n            return deserializeRegex(source, origin, item);\n        }\n\n    }).obj;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/serialize.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\nimport { noop } from './util';\n\nglobal.readyPromises = global.readyPromises || new WeakMap();\n\nexport function onHello(handler : ({ source? : CrossDomainWindowType, origin? : string }) => void) {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.HELLO, { domain: CONSTANTS.WILDCARD }, ({ source, origin }) => {\n        return handler({ source, origin });\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ origin : string }> {\n    return global.send(win, CONSTANTS.POST_MESSAGE_NAMES.HELLO, {}, { domain: CONSTANTS.WILDCARD, timeout: -1 })\n        .then(({ origin }) => {\n            return { origin };\n        });\n}\n\nexport function initOnReady() {\n\n    onHello(({ source, origin }) => {\n        let promise = global.readyPromises.get(source) || new ZalgoPromise();\n        promise.resolve({ origin });\n        global.readyPromises.set(source, promise);\n    });\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function onChildWindowReady(win : mixed, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ origin : string }> {\n\n    let promise = global.readyPromises.get(win);\n\n    if (promise) {\n        return promise;\n    }\n\n    promise = new ZalgoPromise();\n    global.readyPromises.set(win, promise);\n\n    if (timeout !== -1) {\n        setTimeout(() => promise.reject(new Error(`${ name } did not load after ${ timeout }ms`)), timeout);\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ready.js","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : (string | Array<string>)) => {\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(window, win);\n        } catch (err) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ CONSTANTS.WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0) {\n\n            if (window.location.protocol === CONSTANTS.FILE_PROTOCOL) {\n                return CONSTANTS.WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n            return CONSTANTS.WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, serializedMessage, domain);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/strategies.js","/* @flow */\n\nimport { getDomain, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS, CONFIG, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { uniqueID, serializeMethods, getWindowType, jsonStringify, stringifyError } from '../../lib';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\n\nfunction buildMessage(win : CrossDomainWindowType, message : Object, options = {}) : Object {\n\n    let id   = uniqueID();\n    let type = getWindowType();\n    let sourceDomain = getDomain(window);\n\n    return {\n        ...message,\n        ...options,\n        sourceDomain,\n        id:         message.id || id,\n        windowType: type\n    };\n}\n\n\nexport function sendMessage(win : CrossDomainWindowType, message : Object, domain : string | Array<string>) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        message = buildMessage(win, message, {\n            data: serializeMethods(win, domain, message.data),\n            domain\n        });\n\n        let level;\n\n        if (__DEBUG__) {\n            if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n                level = 'debug';\n            } else if (message.ack === 'error') {\n                level = 'error';\n            } else {\n                level = 'info';\n            }\n\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || CONSTANTS.WILDCARD, '\\n\\n', message);\n        }\n\n        if (win === window && !CONFIG.ALLOW_SAME_ORIGIN) {\n            throw new Error('Attemping to send message to self');\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        let messages = [];\n\n        let serializedMessage = jsonStringify({\n            [ CONSTANTS.WINDOW_PROPS.POSTROBOT ]: message\n        }, null, 2);\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/index.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from '../global';\nimport { isRegex } from '../lib';\nimport { CONSTANTS } from '../conf';\n\nexport function resetListeners() {\n    global.responseListeners = {};\n    global.requestListeners  = {};\n}\n\nglobal.responseListeners = global.responseListeners || {};\nglobal.requestListeners  = global.requestListeners  || {};\nglobal.WINDOW_WILDCARD   = global.WINDOW_WILDCARD   || new (function WindowWildcard() { /* pass */ })();\n\nglobal.erroredResponseListeners = global.erroredResponseListeners || {};\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : Object }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : string | RegExp | Array<string>\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : (string | Array<string> | RegExp),\n    respond : (err : ?mixed, result : ?Object) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    global.responseListeners[hash] = listener;\n}\n\nexport function getResponseListener(hash : string) : ResponseListenerType {\n    return global.responseListeners[hash];\n}\n\nexport function deleteResponseListener(hash : string) {\n    delete global.responseListeners[hash];\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    global.erroredResponseListeners[hash] = true;\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return Boolean(global.erroredResponseListeners[hash]);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === CONSTANTS.WILDCARD) {\n        win = null;\n    }\n\n    if (domain === CONSTANTS.WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    let nameListeners = global.requestListeners[name];\n\n    if (!nameListeners) {\n        return;\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n\n        let winListeners = winQualifier && nameListeners.get(winQualifier);\n\n        if (!winListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (winListeners[domain]) {\n                return winListeners[domain];\n            }\n\n            if (winListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of winListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (winListeners[CONSTANTS.WILDCARD]) {\n            return winListeners[CONSTANTS.WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp | Array<string>) }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === CONSTANTS.WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || CONSTANTS.WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let requestListeners = global.requestListeners;\n\n    let nameListeners = requestListeners[name];\n\n    if (!nameListeners) {\n        nameListeners = new WeakMap();\n        requestListeners[name] = nameListeners;\n    }\n\n    let winListeners  = nameListeners.get(win);\n\n    if (!winListeners) {\n        winListeners = {};\n        nameListeners.set(win, winListeners);\n    }\n\n    let strDomain = domain.toString();\n\n    let regexListeners = winListeners[__DOMAIN_REGEX__];\n    let regexListener;\n\n    if (isRegex(domain)) {\n\n        if (!regexListeners) {\n            regexListeners = [];\n            winListeners[__DOMAIN_REGEX__] = regexListeners;\n        }\n\n        regexListener = { regex: domain, listener };\n\n        regexListeners.push(regexListener);\n\n    } else {\n        winListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            if (!winListeners) {\n                return;\n            }\n\n            delete winListeners[strDomain];\n\n            if (win && Object.keys(winListeners).length === 0) {\n                nameListeners.delete(win);\n            }\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n            }\n        }\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/listeners.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { stringifyError, noop } from '../../lib';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : Object) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : Object) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function respond(data) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            return sendMessage(source, {\n                target: message.originalSource,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            }, origin);\n        }\n\n        return ZalgoPromise.all([\n\n            respond({\n                type: CONSTANTS.POST_MESSAGE_TYPE.ACK\n            }),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, err => {\n\n                let error = stringifyError(err).replace(/^Error: /, '');\n                // $FlowFixMe\n                let code = err.code;\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.ERROR,\n                    error,\n                    code\n                });\n            })\n\n        ]).then(noop).catch(err => {\n\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : Object) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === CONSTANTS.POST_MESSAGE_ACK.ERROR) {\n            let err = new Error(message.error);\n            if (message.code) {\n                // $FlowFixMe\n                err.code = message.code;\n            }\n            return options.respond(err, null);\n        } else if (message.ack === CONSTANTS.POST_MESSAGE_ACK.SUCCESS) {\n            let data = message.data || message.response;\n\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/types.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { deserializeMethods, jsonParse, addEventListener, noop } from '../../lib';\nimport { global } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nglobal.receivedMessages = global.receivedMessages || [];\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = jsonParse(message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        return;\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    let message = parseMessage(data);\n\n    if (!message) {\n        return;\n    }\n\n    if (!message.sourceDomain || typeof message.sourceDomain !== 'string') {\n        throw new Error(`Expected message to have sourceDomain`);\n    }\n\n    if (message.sourceDomain.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0 || message.sourceDomain.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n        origin = message.sourceDomain;\n    }\n\n    if (global.receivedMessages.indexOf(message.id) === -1) {\n        global.receivedMessages.push(message.id);\n    } else {\n        return;\n    }\n\n    if (__DEBUG__) {\n        let level;\n\n        if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n        \n        // eslint-disable-next-line no-console\n        console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.data) {\n        message.data = deserializeMethods(source, origin, message.data);\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(messageEvent.source, window);\n        } catch (err) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/index.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { uniqueID, onChildWindowReady, sayHello, isRegex } from '../lib';\nimport { global } from '../global';\n\nglobal.requestPromises = global.requestPromises || new WeakMap();\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?(string | Array<string> | RegExp),\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : string | Array<string> | RegExp;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || CONSTANTS.WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let requestPromises = global.requestPromises.get(win);\n\n        if (!requestPromises) {\n            requestPromises = [];\n            global.requestPromises.set(win, requestPromises);\n        }\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return onChildWindowReady(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                requestPromises.splice(requestPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, {\n                    type:          CONSTANTS.POST_MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: options.fireAndForget\n                }, actualDomain).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let ackTimeout = CONFIG.ACK_TIMEOUT;\n                let resTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ CONFIG.ACK_TIMEOUT }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ options.timeout || CONFIG.RES_TIMEOUT }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        requestPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/client.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { once as onceFunction, safeInterval } from '../lib';\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : Object }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?(string | RegExp | Array<string>),\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || CONSTANTS.WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/server.js","/* @flow */\n\nimport { CONSTANTS } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG, CONSTANTS } from '../conf';\n\nexport function disable() {\n    delete window[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/config.js","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/index.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n\n    // global.tunnelWindows\n    // global.bridges\n    // global.popupWindowsByName\n    // global.responseListeners\n    // global.requestListeners\n\n    let requestPromises = global.requestPromises.get(win);\n\n    if (requestPromises) {\n        for (let promise of requestPromises) {\n            promise.reject(new Error(`No response from window - cleaned up`));\n        }\n    }\n\n    if (global.popupWindowsByWin) {\n        global.popupWindowsByWin.delete(win);\n    }\n\n    if (global.remoteWindows) {\n        global.remoteWindows.delete(win);\n    }\n\n    global.requestPromises.delete(win);\n    global.methods.delete(win);\n    global.readyPromises.delete(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clean.js","/* @flow */\n\nimport { initOnReady, listenForMethods } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\nimport { on, send } from './public';\n\nexport * from './public';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nexport function init() {\n    if (!global.initialized) {\n        listenForMessages();\n\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            require('./bridge').openTunnelToOpener();\n        }\n\n        initOnReady();\n        listenForMethods({ on, send });\n    }\n\n    global.initialized = true;\n}\n\ninit();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.js","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}