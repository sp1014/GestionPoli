{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 13fa7cf816af74cd32df","webpack:///./node_modules/cross-domain-utils/src/util.js","webpack:///./node_modules/cross-domain-utils/src/constants.js","webpack:///./node_modules/cross-domain-utils/src/utils.js","webpack:///./node_modules/cross-domain-utils/src/index.js","webpack:///./node_modules/cross-domain-utils/src/types.js","webpack:///./src/conf/constants.js","webpack:///./src/conf/config.js","webpack:///./src/conf/index.js","webpack:///./node_modules/zalgo-promise/src/utils.js","webpack:///./node_modules/zalgo-promise/src/exceptions.js","webpack:///./node_modules/zalgo-promise/src/flush.js","webpack:///./node_modules/zalgo-promise/src/promise.js","webpack:///./node_modules/zalgo-promise/src/index.js","webpack:///./src/global.js","webpack:///./src/lib/util.js","webpack:///./src/lib/serialize.js","webpack:///./src/lib/ready.js","webpack:///./src/lib/index.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/native.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/index.js","webpack:///./src/bridge/bridge.js","webpack:///./src/bridge/common.js","webpack:///./src/bridge/child.js","webpack:///./src/bridge/parent.js","webpack:///./src/compat/ie.js","webpack:///./src/compat/index.js","webpack:///./src/drivers/send/strategies.js","webpack:///./src/drivers/send/index.js","webpack:///./src/drivers/listeners.js","webpack:///./src/drivers/receive/types.js","webpack:///./src/drivers/receive/index.js","webpack:///./src/public/client.js","webpack:///./src/public/server.js","webpack:///./src/public/config.js","webpack:///./src/public/index.js","webpack:///./src/clean.js","webpack:///./src/interface.js","webpack:///./src/index.js","webpack:///./src/bridge/interface.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isRegex","item","toString","PROTOCOL","MOCK","FILE","ABOUT","WILDCARD","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isFileProtocol","arguments","length","undefined","window","location","protocol","isAboutProtocol","getParent","win","parent","err","getOpener","opener","canReadFromWindow","href","getActualDomain","Error","host","getDomain","domain","mockDomain","indexOf","isBlankDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","assertSameDomain","getParents","result","push","isAncestorParent","child","childParent","getFrames","frames","len","frame","getAllChildFrames","_i3","_getFrames2","_length2","_i5","_getAllChildFrames2","_length4","childFrame","getTop","top","_i7","_getAllChildFrames4","_length6","getNextOpener","getUltimateTop","getAllFramesInWindow","concat","getAllWindows","isTop","isFrameWindowClosed","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","linkFrameWindow","splice","cleanIframes","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","_i9","_length8","findChildFrameByName","_i11","_getFrames4","_length10","namedFrame","findFrameByName","isParent","frameParent","_i13","_getFrames6","_length12","isOpener","getAncestor","getAncestors","results","ancestor","isAncestor","actualParent","_i15","_getFrames8","_length14","isPopup","Boolean","isIframe","isFullpage","anyMatch","collection1","collection2","_i17","_length16","item1","_i19","_length18","getDistanceFromTop","distance","getNthParent","getNthParentFromTop","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","match","JSON","stringify","some","subpattern","stringifyDomainPattern","join","getDomainFromUrl","url","split","slice","onCloseWindow","callback","delay","maxtime","Infinity","timeout","check","clearTimeout","setTimeout","cancel","isWindow","obj","Window","__cross_domain_utils_window_check__","isBrowser","isCurrentDomain","isMockDomain","normalizeMockUrl","closeWindow","close","getFrameForWindow","frameElement","_i21","_document$querySelect2","document","querySelectorAll","_length20","__webpack_exports__","CONSTANTS","POST_MESSAGE_TYPE","REQUEST","RESPONSE","ACK","POST_MESSAGE_ACK","SUCCESS","ERROR","POST_MESSAGE_NAMES","METHOD","HELLO","OPEN_TUNNEL","WINDOW_TYPES","FULLPAGE","WINDOW_PROPS","POSTROBOT","SERIALIZATION_TYPES","PROMISE","ZALGO_PROMISE","REGEX","SEND_STRATEGIES","POST_MESSAGE","BRIDGE","GLOBAL","MOCK_PROTOCOL","FILE_PROTOCOL","BRIDGE_NAME_PREFIX","POSTROBOT_PROXY","POST_MESSAGE_NAMES_LIST","keys","map","key","CONFIG","ALLOW_POSTMESSAGE_POPUP","__ALLOW_POSTMESSAGE_POPUP__","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","ALLOW_SAME_ORIGIN","isPromise","Promise","constructor","then","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","_this","_classCallCheck","resolved","rejected","errorHandled","handlers","error","isAsync","res","reject","value","dispatch","_this2","j","dispatchPossiblyUnhandledError","asyncReject","dispatching","chain","firstPromise","secondPromise","_handlers$i","onSuccess","onError","onFinally","time","_this3","toPromise","TypeError","all","promises","count","prom","hash","items","method","onPossiblyUnhandledException","context","args","apply","flush","promise_ZalgoPromise","global","__WEBPACK_IMPORTED_MODULE_0__conf__","registerSelf","stringifyError","level","stack","newErr","once","called","noop","addEventListener","event","attachEvent","removeEventListener","detachEvent","uniqueID","chars","replace","charAt","Math","floor","random","eachArray","eachObject","each","_typeof","replaceObject","depth","newobj","childItem","safeInterval","runInterval","weakMapMemoize","weakmap","WeakMap","arg","set","getWindowType","jsonStringify","replacer","indent","objectToJSON","arrayToJSON","toJSON","jsonParse","parse","needsGlobalMessagingForBrowser","methods","listenForMethods","on","_ref","source","data","meth","id","isSerialized","type","serialize__typeof","__type__","serializeMethod","destination","__id__","__name__","serializeMethods","__message__","__code__","code","__then__","serializePromise","serializeZalgoPromise","regex","__source__","deserializeMethod","wrapper","send","_ref2","__xdomain__","deserializeError","deserializeZalgoPromise","deserializePromise","deserializeRegex","RegExp","deserializeMethods","onHello","sayHello","initOnReady","_ref3","readyPromises","onChildWindowReady","util_weakMapMemoize","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","hasNativeWeakMap","values","_cleanupClosedWindows","isSafeToReadWrite","entry","writable","index","has","getOrSet","weakmap_CrossDomainSafeWeakMap","deleteTunnelWindow","tunnelWindows","tunnelWindowId","openTunnelToParent","canary","sendMessage","parentWindow","_i2","_Object$keys2","tunnelWindow","cleanTunnelWindows","addTunnelWindow","getTunnelWindow","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","sanitizedDomain","isBridge","documentBodyReady","body","interval","setInterval","clearInterval","registerRemoteWindow","remoteWindows","sendMessagePromise","findRemoteWindow","registerRemoteSendMessage","remoteWindow","sendMessageWrapper","remoteWin","remoteDomain","rejectRemoteSendMessage","sendBridgeMessage","messagingChild","messagingParent","awaitRemoteBridgeForWindow","openTunnelToOpener","bridge","receiveMessage","hasBridge","bridges","openBridge","iframe","createElement","setAttribute","src","openBridgeFrame","bridgeFrames","appendChild","popupWindowsByName","winDetails","listenForRegister","onload","onerror","popupWindowsByWin","windowOpen","open","linkUrl","winOptions","destroyBridges","_i4","_Object$keys4","removeChild","options","last","_url$split","winName","emulateIERestrictions","sourceWindow","targetWindow","SEND_MESSAGE_STRATEGIES","serializedMessage","require","dom","forEach","postMessage","_require","foreignGlobal","_jsonStringify","sourceDomain","_extends","windowType","buildMessage","messages","strategyName","success","status","responseListeners","requestListeners","WINDOW_WILDCARD","erroredResponseListeners","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","nameListeners","winQualifier","winListeners","_winListeners$__DOMAI2","_ref5","listener","RECEIVE_MESSAGE_TYPES","pathname","ack","_RECEIVE_MESSAGE_TYPE","respond","fireAndForget","types__extends","target","originalSource","handleError","response","parsedMessage","parseMessage","receivedMessages","messageListener","messageEvent","sourceElement","originalEvent","request","el","getElementById","tagName","toLowerCase","HTMLIFrameElement","hasResult","requestPromises","requestPromise","actualDomain","responseListener","addResponseListener","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref6","listenersCollection","_i6","_win2","_i8","_i10","_domain2","_i12","existingListener","strDomain","regexListeners","regexListener","onceFunction","errorOnClose","server__typeof","onceListener","disable","cleanUpWindow","init","initialized","INTERFACE","__WEBPACK_IMPORTED_MODULE_0__index__"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,eAAAH,GACA,iBAAAC,QACAA,QAAA,UAAAD,IAEAD,EAAA,UAAAC,IARA,CASC,oBAAAK,UAAAC,KAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAV,YAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QAqCA,OAhCAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,IAAAgB,EAAAhB,KAAAwB,WACA,WAA2B,OAAAxB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,kCC3DO,SAASC,EAAQC,GACpB,MAAgD,oBAAzCd,OAAOS,UAAUM,SAAStB,KAAKqB,GCDnC,IAAME,GACTC,KAAQ,QACRC,KAAQ,QACRC,MAAQ,UAGCC,EAAW,IAEXC,GACTC,OAAS,SACTC,MAAS,SCLTC,EAAsB,mCAEnB,SAASC,IACZ,OAD0EC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,QAC7CC,SAASC,WAAaf,EAASE,KAGvC,SAASc,IACZ,OAD2EN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,QAC9CC,SAASC,WAAaf,EAASG,MAGvC,SAASc,IAA0E,IAAhEC,EAAgER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCG,OAErD,GAAKK,EAIL,IACI,GAAIA,EAAIC,QAAUD,EAAIC,SAAWD,EAC7B,OAAOA,EAAIC,OAEjB,MAAOC,KAKN,SAASC,IAA0E,IAAhEH,EAAgER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCG,OAErD,GAAKK,IAKDD,EAAUC,GAId,IACI,OAAOA,EAAII,OACb,MAAOF,KAKN,SAASG,EAAkBL,GAC9B,IAGI,OADKA,GAAOA,EAAIJ,UAAYI,EAAIJ,SAASU,MAClC,EACT,MAAOJ,IAIT,OAAO,EAGJ,SAASK,IAA+D,IAA/CP,EAA+CR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjBG,OAEtDC,EAAWI,EAAIJ,SAEnB,IAAKA,EACD,MAAM,IAAIY,MAAJ,gCAGV,IAAIX,EAAWD,EAASC,SAExB,IAAKA,EACD,MAAM,IAAIW,MAAJ,gCAGV,GAAIX,IAAaf,EAASE,KACtB,OAAWF,EAASE,KAApB,KAGJ,GAAIa,IAAaf,EAASG,MAAO,CAE7B,IAAIgB,EAASF,EAAUC,GACvB,OAAIC,GAAUI,EAAkBJ,GAErBM,EAAgBN,GAGhBnB,EAASG,MAApB,KAGJ,IAAIwB,EAAOb,EAASa,KAEpB,IAAKA,EACD,MAAM,IAAID,MAAJ,4BAGV,OAAWX,EAAX,KAA0BY,EAGvB,SAASC,IAAyD,IAA/CV,EAA+CR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjBG,OAEhDgB,EAASJ,EAAgBP,GAE7B,OAAIW,GAAUX,EAAIY,YAAwD,IAA1CZ,EAAIY,WAAWC,QAAQ/B,EAASC,MACrDiB,EAAIY,WAGRD,EAGJ,SAASG,EAAcd,GAC1B,IAEI,IAAKA,EAAIJ,SAASU,KACd,OAAO,EAGX,GAA0B,gBAAtBN,EAAIJ,SAASU,KACb,OAAO,EAEb,MAAOJ,IAIT,OAAO,EAGJ,SAASa,EAAqBf,GAEjC,IACI,GAAIA,IAAQL,OACR,OAAO,EAGb,MAAOO,IAIT,IACI,IAAIc,EAAOlD,OAAOmD,yBAAyBjB,EAAK,YAEhD,GAAIgB,IAA4B,IAApBA,EAAK/C,WACb,OAAO,EAGb,MAAOiC,IAIT,IAEI,GAAIJ,EAAgBE,IAAQK,EAAkBL,GAC1C,OAAO,EAEb,MAAOE,IAIT,IAEI,GAAIK,EAAgBP,KAASO,EAAgBZ,QACzC,OAAO,EAGb,MAAOO,IAIT,OAAO,EAGJ,SAASgB,EAAalB,GAEzB,IAAKe,EAAqBf,GACtB,OAAO,EAGX,IAEI,GAAIA,IAAQL,OACR,OAAO,EAIX,GAAIG,EAAgBE,IAAQK,EAAkBL,GAC1C,OAAO,EAIX,GAAIU,EAAUf,UAAYe,EAAUV,GAChC,OAAO,EAGb,MAAOE,IAIT,OAAO,EAIJ,SAASiB,EAAiBnB,GAC7B,IAAKkB,EAAalB,GACd,MAAM,IAAIQ,MAAJ,qCAIV,OAAOR,EAGJ,SAASoB,EAAWpB,GAEvB,IAAIqB,KAEJ,IAEI,KAAOrB,EAAIC,SAAWD,GAClBqB,EAAOC,KAAKtB,EAAIC,QAChBD,EAAMA,EAAIC,OAGhB,MAAOC,IAIT,OAAOmB,EAGJ,SAASE,EAAiBtB,EAAgCuB,GAE7D,IAAKvB,IAAWuB,EACZ,OAAO,EAGX,IAAIC,EAAc1B,EAAUyB,GAE5B,OAAIC,EACOA,IAAgBxB,GAGgB,IAAvCmB,EAAWI,GAAOX,QAAQZ,GAO3B,SAASyB,EAAU1B,GAEtB,IAAIqB,KAEAM,SAEJ,IACIA,EAAS3B,EAAI2B,OACf,MAAOzB,GACLyB,EAAS3B,EAGb,IAAI4B,SAEJ,IACIA,EAAMD,EAAOlC,OACf,MAAOS,IAIT,GAAY,IAAR0B,EACA,OAAOP,EAGX,GAAIO,EAAK,CACL,IAAK,IAAIxE,EAAI,EAAGA,EAAIwE,EAAKxE,IAAK,CAE1B,IAAIyE,SAEJ,IACIA,EAAQF,EAAOvE,GACjB,MAAO8C,GACL,SAGJmB,EAAOC,KAAKO,GAGhB,OAAOR,EAGX,IAAK,IAAIjE,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIyE,SAEJ,IACIA,EAAQF,EAAOvE,GACjB,MAAO8C,GACL,OAAOmB,EAGX,IAAKQ,EACD,OAAOR,EAGXA,EAAOC,KAAKO,GAGhB,OAAOR,EAIJ,SAASS,EAAkB9B,GAA4D,IAE1F,IAAIqB,KAFsFU,EAAA,EAAAC,EAIxEN,EAAU1B,GAJ8DiC,EAAA,MAAAD,EAAA,EAAAA,EAAAvC,OAAAsC,EAAAE,EAAAF,IAIxD,CAA7B,IAAIF,OACLR,EAAOC,KAAKO,GADkB,QAAAK,EAAA,EAAAC,EAGPL,EAAkBD,GAHXO,EAAA,MAAAD,EAAA,EAAAA,EAAA1C,OAAAyC,EAAAE,EAAAF,IAGmB,CAA5C,IAAIG,OACLhB,EAAOC,KAAKe,IAIpB,OAAOhB,EAGJ,SAASiB,IAAuE,IAAhEtC,EAAgER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCG,OAElD,IACI,GAAIK,EAAIuC,IACJ,OAAOvC,EAAIuC,IAEjB,MAAOrC,IAIT,GAAIH,EAAUC,KAASA,EACnB,OAAOA,EAGX,IACI,GAAIuB,EAAiB5B,OAAQK,IAAQL,OAAO4C,IACxC,OAAO5C,OAAO4C,IAEpB,MAAOrC,IAIT,IACI,GAAIqB,EAAiBvB,EAAKL,SAAWA,OAAO4C,IACxC,OAAO5C,OAAO4C,IAEpB,MAAOrC,IA1B0E,QAAAsC,EAAA,EAAAC,EA8BjEX,EAAkB9B,GA9B+C0C,EAAA,MAAAD,EAAA,EAAAA,EAAAhD,OAAA+C,EAAAE,EAAAF,IA8BzC,CAArC,IAAIX,OACL,IACI,GAAIA,EAAMU,IACN,OAAOV,EAAMU,IAEnB,MAAOrC,IAIT,GAAIH,EAAU8B,KAAWA,EACrB,OAAOA,GAKZ,SAASc,IAA8E,IAAhE3C,EAAgER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCG,OACzD,OAAOQ,EAAUmC,EAAOtC,IAAQA,GAG7B,SAAS4C,IAA8E,IACtFxC,EAASuC,EAD6EnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCG,QAG1D,OAAIS,EACOwC,EAAexC,GAGnBmC,IAGJ,SAASM,EAAqB7C,GACjC,IAAIuC,EAAMD,EAAOtC,GAEjB,IAAKuC,EACD,MAAM,IAAI/B,MAAJ,gCAGV,SAAAsC,OAAYhB,EAAkBS,IAAMA,IAGjC,SAASQ,IAA6F,IAA/E/C,EAA+ER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDG,OACrDgC,EAASkB,EAAqB7C,GAC9BI,EAASuC,EAAc3C,GAE3B,OAAII,KACA0C,OAAYC,EAAc3C,GAAYuB,GAE/BA,EAIR,SAASqB,EAAMhD,GAClB,OAAOA,IAAQsC,EAAOtC,GAGnB,SAASiD,EAAoBpB,GAEhC,IAAKA,EAAMqB,cACP,OAAO,EAGX,IAAKrB,EAAMsB,WACP,OAAO,EAGX,IAAIC,EAAMvB,EAAMwB,cAEhB,SAAID,IAAOA,EAAIE,iBAAoBF,EAAIE,gBAAgBC,SAAS1B,IAsBpE,IAAI2B,KACAC,KAEG,SAASC,EAAe1D,GAAmE,IAAtC2D,IAAsCnE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAE9F,IACI,GAAIQ,IAAQL,OACR,OAAO,EAEb,MAAOO,GACL,OAAO,EAGX,IACI,IAAKF,EACD,OAAO,EAGb,MAAOE,GACL,OAAO,EAGX,IACI,GAAIF,EAAI4D,OACJ,OAAO,EAGb,MAAO1D,GAIL,OAAIA,GAAOA,EAAI2D,UAAYvE,EAQ/B,GAAIqE,GAAazC,EAAalB,GAC1B,IAEI,GAAIA,EAAI8D,WACJ,OAAO,EAEb,MAAO5D,IAOb,IACI,IAAKF,EAAIC,SAAWD,EAAIuC,IACpB,OAAO,EAEb,MAAOrC,IAeT,IAAI6D,EAtFR,SAAwBC,EAAuBpF,GAC3C,IAAK,IAAIxB,EAAI,EAAGA,EAAI4G,EAAWvE,OAAQrC,IAEnC,IACI,GAAI4G,EAAW5G,KAAOwB,EAClB,OAAOxB,EAEb,MAAO8C,IAKb,OAAQ,EA0EU+D,CAAYT,EAAexD,GAE7C,IAAqB,IAAjB+D,EAAoB,CACpB,IAAIlC,EAAQ4B,EAAaM,GAEzB,GAAIlC,GAASoB,EAAoBpB,GAC7B,OAAO,EAIf,OAAO,EAoBJ,SAASqC,EAAgBrC,GAI5B,GArBJ,WACI,IAAK,IAAIzE,EAAI,EAAGA,EAAIoG,EAAc/D,OAAQrC,IAAK,CAC3C,IAAIwG,GAAS,EAEb,IACIA,EAASJ,EAAcpG,GAAGwG,OAC5B,MAAO1D,IAIL0D,IACAH,EAAaU,OAAO/G,EAAG,GACvBoG,EAAcW,OAAO/G,EAAG,KAOhCgH,GAEIvC,GAASA,EAAMqB,cACf,IACIM,EAAclC,KAAKO,EAAMqB,eACzBO,EAAanC,KAAKO,GACpB,MAAO3B,KAMV,SAASmE,EAAarE,GAEzB,OADAA,EAAMA,GAAOL,QACF2E,UAAUC,eAAiBvE,EAAIsE,UAAUE,UAIjD,SAASC,EAAezE,EAA6BrC,GAAwC,IAEhG,IAAI+G,EAAYhD,EAAU1B,GAFsE2E,EAAA,EAAAC,EAAA,MAIzEF,EAJyE,EAIzEA,EAJyEjF,OAAAkF,EAAAC,EAAAD,IAI9D,CAA7B,IAAItC,EAAcqC,EAAdC,GACL,IAEI,GAAIzD,EAAamB,IAAeA,EAAW1E,OAASA,IAA2C,IAAnC+G,EAAU7D,QAAQwB,GAC1E,OAAOA,EAEb,MAAOnC,KAKb,IAEI,IAA6C,IAAzCwE,EAAU7D,QAAQb,EAAI2B,OAAOhE,IAE7B,OAAOqC,EAAI2B,OAAOhE,GAExB,MAAOuC,IAIT,IACI,IAAsC,IAAlCwE,EAAU7D,QAAQb,EAAIrC,IACtB,OAAOqC,EAAIrC,GAEjB,MAAOuC,KAKN,SAAS2E,EAAqB7E,EAA6BrC,GAE9D,IAAIkE,EAAQ4C,EAAezE,EAAKrC,GAEhC,GAAIkE,EACA,OAAOA,EAL2F,QAAAiD,EAAA,EAAAC,EAQ/ErD,EAAU1B,GARqEgF,EAAA,MAAAD,EAAA,EAAAA,EAAAtF,OAAAqF,EAAAE,EAAAF,IAQ/D,CAAlC,IACGG,EAAaJ,EADZxC,KAC6C1E,GAElD,GAAIsH,EACA,OAAOA,GAKZ,SAASC,EAAgBlF,EAA6BrC,GAEzD,IAAIkE,EAIJ,OAFAA,EAAQ4C,EAAezE,EAAKrC,IAGjBkE,EAKJgD,EAFGvC,EAAOtC,IAAQA,EAEQrC,GAG9B,SAASwH,EAASnF,EAA6B6B,GAElD,IAAIuD,EAAcrF,EAAU8B,GAE5B,GAAIuD,EACA,OAAOA,IAAgBpF,EALgE,QAAAqF,EAAA,EAAAC,EAQpE5D,EAAU1B,GAR0DuF,EAAA,MAAAD,EAAA,EAAAA,EAAA7F,OAAA4F,EAAAE,EAAAF,IASvF,GADKhD,OACcR,EACf,OAAO,EAIf,OAAO,EAGJ,SAAS2D,EAASvF,EAAgCuB,GAErD,OAAOvB,IAAWE,EAAUqB,GAGzB,SAASiE,IAA4E,IAAhEzF,EAAgER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCG,OAKvD,OAFaQ,EAFbH,EAAMA,GAAOL,SAQAI,EAAUC,SAEvB,EAKG,SAAS0F,EAAa1F,GAMzB,IAJA,IAAI2F,KAEAC,EAAW5F,EAER4F,IACHA,EAAWH,EAAYG,KAEnBD,EAAQrE,KAAKsE,GAIrB,OAAOD,EAIJ,SAASE,EAAW5F,EAAgCuB,GAEvD,IAAIsE,EAAeL,EAAYjE,GAE/B,GAAIsE,EACA,OAAIA,IAAiB7F,EAOzB,GAAIuB,IAAUvB,EACV,OAAO,EAGX,GAAIqC,EAAOd,KAAWA,EAClB,OAAO,EAjBqF,QAAAuE,EAAA,EAAAC,EAoB9EtE,EAAUzB,GApBoEgG,EAAA,MAAAD,EAAA,EAAAA,EAAAvG,OAAAsG,EAAAE,EAAAF,IAqB5F,GADKlE,OACSL,EACV,OAAO,EAIf,OAAO,EAGJ,SAAS0E,IAAyD,IAAjDlG,EAAiDR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,OACnD,OAAOwG,QAAQhG,EAAUH,IAGtB,SAASoG,IAA0D,IAAjDpG,EAAiDR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,OACpD,OAAOwG,QAAQpG,EAAUC,IAGtB,SAASqG,IAA4D,IAAjDrG,EAAiDR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBG,OACtD,OAAOwG,SAASC,EAASpG,KAASkG,EAAQlG,IAG9C,SAASsG,EAASC,EAAaC,GAAuB,QAAAC,EAAA,EAAAC,EAAA,MAEhCH,EAFgC,EAEhCA,EAFgC9G,OAAAgH,EAAAC,EAAAD,IAEnB,IAA1B,IAAIE,EAASJ,EAATE,GAAsBG,EAAA,EAAAC,EAAA,MACTL,EADS,EACTA,EADS/G,OAAAmH,EAAAC,EAAAD,IAEvB,GAAID,IADUH,EAATI,GAED,OAAO,EAKnB,OAAO,EAGJ,SAASE,IAIZ,IAJ8E,IAC1EC,EAAW,EACX9G,EAF0ET,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjBG,OAItDM,IACHA,EAASF,EAAUE,MAEf8G,GAAY,GAIpB,OAAOA,EAGJ,SAASC,EAAahH,GAGzB,IAH+F,IAAzC7B,EAAyCqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,EAC/DS,EAASD,EAEJ5C,EAAI,EAAGA,EAAIe,EAAGf,IAAK,CACxB,IAAK6C,EACD,OAGJA,EAASF,EAAUE,GAGvB,OAAOA,EAGJ,SAASgH,EAAoBjH,GAAsE,IAAzC7B,EAAyCqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,EAC1E,OAAOwH,EAAahH,EAAK8G,EAAmB9G,GAAO7B,GAGhD,SAAS+I,EAAgBC,EAA8BC,GAE1D,IAAIC,EAAO/E,EAAO6E,IAASA,EACvBG,EAAOhF,EAAO8E,IAASA,EAE3B,IACI,GAAIC,GAAQC,EACR,OAAID,IAASC,EAMnB,MAAOpH,IAIT,IAAIqH,EAAa1E,EAAqBsE,GAClCK,EAAa3E,EAAqBuE,GAEtC,GAAId,EAASiB,EAAYC,GACrB,OAAO,EAGX,IAAIC,EAAUtH,EAAUkH,GACpBK,EAAUvH,EAAUmH,GAExB,QAAIG,GAAWnB,EAASzD,EAAqB4E,GAAUD,KAInDE,GAAWpB,EAASzD,EAAqB6E,GAAUH,GAC5C,IAMR,SAASI,EAAYC,EAAyBC,GAEjD,GAAuB,iBAAZD,EAAsB,CAE7B,GAAsB,iBAAXC,EACP,OAAOD,IAAY1I,GAAY2I,IAAWD,EAG9C,GAAIjJ,EAAQkJ,GACR,OAAO,EAGX,GAAIC,MAAMC,QAAQF,GACd,OAAO,EAIf,OAAIlJ,EAAQiJ,GAEJjJ,EAAQkJ,GACDD,EAAQ/I,aAAegJ,EAAOhJ,YAGrCiJ,MAAMC,QAAQF,IAKX1B,QAAQ0B,EAAOG,MAAMJ,MAG5BE,MAAMC,QAAQH,KAEVE,MAAMC,QAAQF,GACPI,KAAKC,UAAUN,KAAaK,KAAKC,UAAUL,IAGlDlJ,EAAQkJ,IAILD,EAAQO,KAAK,SAAAC,GAAA,OAAcT,EAAYS,EAAYP,MAM3D,SAASQ,EAAuBT,GACnC,OAAIE,MAAMC,QAAQH,GACd,IAAYA,EAAQU,KAAK,OAAzB,IACO3J,EAAQiJ,GACf,UAAkBA,EAAQ/I,WAEnB+I,EAAQ/I,WAIhB,SAAS0J,EAAiBC,GAI7B,OAAIA,EAAIR,MAAM,4BACDQ,EAKGC,MAAM,KAAKC,MAAM,EAAG,GAAGJ,KAAK,KAHjC5H,IAQR,SAASiI,GAAc3I,EAA6B4I,GAAmG,IAA9EC,EAA8ErJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7D,IAAMsJ,EAAuDtJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCuJ,IAElHC,SAuBJ,OArBY,SAARC,IAEA,GAAIvF,EAAe1D,GAMf,OAJIgJ,GACAE,aAAaF,GAGVJ,IAGPE,GAAW,EACXI,aAAaF,IAEbF,GAAWD,EACXG,EAAUG,WAAWF,EAAOJ,IAIpCI,IAGIG,OADG,WAEKJ,GACAE,aAAaF,KAOtB,SAASK,GAASC,GAErB,IACI,GAAIA,IAAQ3J,OACR,OAAO,EAEb,MAAOO,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAIf,IACI,GAA4C,oBAAxCxB,OAAOS,UAAUM,SAAStB,KAAK+L,GAC/B,OAAO,EAEb,MAAOpJ,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAIf,IACI,GAAIK,OAAO4J,QAAUD,aAAe3J,OAAO4J,OACvC,OAAO,EAEb,MAAOrJ,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAIf,IACI,GAAIgK,GAAOA,EAAIvM,OAASuM,EACpB,OAAO,EAEb,MAAOpJ,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAIf,IACI,GAAIgK,GAAOA,EAAIrJ,SAAWqJ,EACtB,OAAO,EAEb,MAAOpJ,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAIf,IACI,GAAIgK,GAAOA,EAAI/G,MAAQ+G,EACnB,OAAO,EAEb,MAAOpJ,GACL,GAAIA,GAAOA,EAAI2D,UAAYvE,EACvB,OAAO,EAaf,IACI,GAAIgK,GAAmD,uBAA5CA,EAAIE,oCACX,OAAO,EAGb,MAAOtJ,GACL,OAAO,EAGX,OAAO,EAGJ,SAASuJ,KACZ,MAA0B,oBAAX9J,aAAqD,IAApBA,OAAOC,SAGpD,SAAS8J,GAAgB/I,GAC5B,QAAK8I,MAIG/I,MAAgBC,EAGrB,SAASgJ,GAAahJ,GACzB,OAAyC,IAAlCA,EAAOE,QAAQ/B,EAASC,MAG5B,SAAS6K,GAAiBpB,GAC7B,IAAKmB,GAAapB,EAAiBC,IAC/B,OAAOA,EAIP,MAAM,IAAIhI,MAAJ,4CAMP,SAASqJ,GAAY7J,GACxB,IACIA,EAAI8J,QACN,MAAO5J,KAKN,SAAS6J,GAAkB/J,GAC9B,GAAIkB,EAAalB,GACb,OAAOmB,EAAiBnB,GAAKgK,aAFyC,QAAAC,EAAA,EAAAC,EAKtDC,SAASC,iBAAiB,UAL4BC,EAAA,MAAAH,EAAA,EAAAA,EAAAzK,OAAAwK,EAAAI,EAAAJ,IAKjB,CAApD,IAAMpI,OACP,GAAIA,GAASA,EAAMqB,eAAiBrB,EAAMqB,gBAAkBlD,EACxD,OAAO6B,GC/gCnB3E,EAAAQ,EAAA4M,GAAA,oBAAA/K,IAAArC,EAAAQ,EAAA4M,GAAA,oBAAAxK,IAAA5C,EAAAQ,EAAA4M,EAAA,sBAAAvK,IAAA7C,EAAAQ,EAAA4M,EAAA,sBAAAnK,IAAAjD,EAAAQ,EAAA4M,GAAA,oBAAAjK,IAAAnD,EAAAQ,EAAA4M,EAAA,sBAAA/J,IAAArD,EAAAQ,EAAA4M,EAAA,sBAAA5J,IAAAxD,EAAAQ,EAAA4M,GAAA,oBAAAxJ,IAAA5D,EAAAQ,EAAA4M,EAAA,sBAAAvJ,IAAA7D,EAAAQ,EAAA4M,EAAA,sBAAApJ,IAAAhE,EAAAQ,EAAA4M,GAAA,oBAAAnJ,IAAAjE,EAAAQ,EAAA4M,GAAA,oBAAAlJ,IAAAlE,EAAAQ,EAAA4M,GAAA,oBAAA/I,IAAArE,EAAAQ,EAAA4M,EAAA,sBAAA5I,IAAAxE,EAAAQ,EAAA4M,GAAA,oBAAAxI,IAAA5E,EAAAQ,EAAA4M,GAAA,oBAAAhI,IAAApF,EAAAQ,EAAA4M,GAAA,oBAAA3H,IAAAzF,EAAAQ,EAAA4M,GAAA,oBAAA1H,IAAA1F,EAAAQ,EAAA4M,GAAA,oBAAAzH,IAAA3F,EAAAQ,EAAA4M,GAAA,oBAAAvH,IAAA7F,EAAAQ,EAAA4M,GAAA,oBAAAtH,IAAA9F,EAAAQ,EAAA4M,GAAA,oBAAArH,IAAA/F,EAAAQ,EAAA4M,EAAA,sBAAA5G,IAAAxG,EAAAQ,EAAA4M,GAAA,oBAAApG,IAAAhH,EAAAQ,EAAA4M,EAAA,sBAAAjG,IAAAnH,EAAAQ,EAAA4M,EAAA,sBAAA7F,IAAAvH,EAAAQ,EAAA4M,GAAA,oBAAAzF,IAAA3H,EAAAQ,EAAA4M,GAAA,oBAAApF,IAAAhI,EAAAQ,EAAA4M,GAAA,oBAAAnF,IAAAjI,EAAAQ,EAAA4M,EAAA,sBAAA9E,IAAAtI,EAAAQ,EAAA4M,EAAA,sBAAA7E,IAAAvI,EAAAQ,EAAA4M,GAAA,oBAAA5E,IAAAxI,EAAAQ,EAAA4M,EAAA,sBAAAzE,IAAA3I,EAAAQ,EAAA4M,EAAA,sBAAApE,IAAAhJ,EAAAQ,EAAA4M,EAAA,sBAAAlE,IAAAlJ,EAAAQ,EAAA4M,GAAA,oBAAAjE,IAAAnJ,EAAAQ,EAAA4M,GAAA,oBAAAxD,IAAA5J,EAAAQ,EAAA4M,GAAA,oBAAAtD,IAAA9J,EAAAQ,EAAA4M,GAAA,oBAAArD,IAAA/J,EAAAQ,EAAA4M,EAAA,sBAAApD,IAAAhK,EAAAQ,EAAA4M,EAAA,sBAAA3C,IAAAzK,EAAAQ,EAAA4M,EAAA,sBAAAjC,IAAAnL,EAAAQ,EAAA4M,EAAA,sBAAA/B,IAAArL,EAAAQ,EAAA4M,GAAA,oBAAA3B,KAAAzL,EAAAQ,EAAA4M,EAAA,sBAAAjB,KAAAnM,EAAAQ,EAAA4M,GAAA,oBAAAb,KAAAvM,EAAAQ,EAAA4M,GAAA,oBAAAZ,KAAAxM,EAAAQ,EAAA4M,GAAA,oBAAAX,KAAAzM,EAAAQ,EAAA4M,GAAA,oBAAAV,KAAA1M,EAAAQ,EAAA4M,GAAA,oBAAAT,KAAA3M,EAAAQ,EAAA4M,GAAA,oBAAAP,KAAA7M,EAAAQ,EAAA4M,GAAA,oBCCqB,IDDrBpN,EAAAQ,EAAA4M,GAAA,oBAAAxL,IAAA5B,EAAAQ,EAAA4M,GAAA,oBAAApL,IAAAhC,EAAAQ,EAAA4M,GAAA,oBAAAnL,kCEAO,MAAIoL,GAEPC,mBACIC,QAAU,4BACVC,SAAU,6BACVC,IAAU,yBAGdC,kBACIC,QAAS,UACTC,MAAS,SAGbC,oBACIC,OAAa,mBACbC,MAAa,kBACbC,YAAa,yBAGjBC,cACIC,SAAU,WACV/L,MAAU,QACVD,OAAU,UAGdiM,cACIC,UAAW,iBAGfC,qBACIP,OAAe,mBACfF,MAAe,kBACfU,QAAe,oBACfC,cAAe,0BACfC,MAAe,SAGnBC,iBACIC,aAAc,yBACdC,OAAc,mBACdC,OAAc,oBAGlBC,cAAe,QACfC,cAAe,QAEfC,mBAAoB,uBACpBC,gBAAoB,sBAEpBhN,SAAU,KAGD6L,GACTC,OAAa,mBACbC,MAAa,kBACbC,YAAa,yBAGNiB,EAA0CrO,OAAOsO,KAAKrB,GAC5DsB,IAAI,SAAAC,GAAA,OAAOvB,EAAmBuB,KCzDxBC,GAEPC,0BAA0B,gCAAiC7M,SACrDA,OAAO8M,4BAGbC,eAAsB,IACtBC,qBAAsB,IAEtBC,aAA6D,IAA/CjN,OAAO2E,UAAUE,UAAUwD,MAAM,SAAgC,IAAQ,IACvF6E,aAAgC,EAEhCC,qCACMvC,EAAUoB,gBAAgBC,eAAgB,EADhDmB,EAEMxC,EAAUoB,gBAAgBE,SAAgB,EAFhDkB,EAGMxC,EAAUoB,gBAAgBG,SAAgB,EAHhDiB,GAMAC,mBAAmB,GAGuC,IAA1DrN,OAAOC,SAASU,KAAKO,QAAQ0J,EAAUyB,iBACvCO,EAAOC,yBAA0B,GCxBrCtP,EAAAQ,EAAA4M,EAAA,sBAAAiC,IAAArP,EAAAQ,EAAA4M,EAAA,sBAAAC,IAAArN,EAAAQ,EAAA4M,GAAA,oBAAAS,IAAA7N,EAAAQ,EAAA4M,GAAA,oBAAA6B,kCCAO,SAASc,EAAUrO,GACtB,IACI,IAAKA,EACD,OAAO,EAGX,GAAuB,oBAAZsO,SAA2BtO,aAAgBsO,QAClD,OAAO,EAGX,GAAsB,oBAAXvN,QAAmD,mBAAlBA,OAAO4J,QAAyB3K,aAAgBe,OAAO4J,OAC/F,OAAO,EAGX,GAAsB,oBAAX5J,QAAwD,mBAAvBA,OAAOwN,aAA8BvO,aAAgBe,OAAOwN,YACpG,OAAO,EAGX,IAAItO,KAAgBA,SAEpB,GAAIA,EAAU,CACV,IAAIlB,EAAOkB,EAAStB,KAAKqB,GAEzB,GAAa,oBAATjB,GAAuC,oBAATA,GAAuC,uBAATA,EAC5D,OAAO,EAIf,GAAyB,mBAAdiB,EAAKwO,KACZ,OAAO,EAEb,MAAOlN,GACL,OAAO,EAGX,OAAO,ECjCX,IAAMmN,KACAC,KCDFC,EAAc,EACdC,SAEJ,SAASC,IACL,IAAKF,GAAeC,EAAc,CAC9B,IAAME,EAAUF,EAChBA,EAAe,KACfE,EAAQC,WAIT,SAASC,IACZL,GAAe,EAGZ,SAASM,IACZN,GAAe,EACfE,QCfSK,aAeT,SAAAA,EAAYC,GAAuF,IAAAC,EAAAhR,KAQ/F,mCAR+F8Q,4DAAAG,CAAAjR,MAE/FA,KAAKkR,UAAW,EAChBlR,KAAKmR,UAAW,EAChBnR,KAAKoR,cAAe,EAEpBpR,KAAKqR,YAEDN,EAAS,CAET,IAAI1M,SACAiN,SACAJ,GAAW,EACXC,GAAW,EACXI,GAAU,EAEdX,IAEA,IACIG,EAAQ,SAAAS,GACAD,EACAP,EAAKL,QAAQa,IAEbN,GAAW,EACX7M,EAASmN,IAGd,SAAAtO,GACKqO,EACAP,EAAKS,OAAOvO,IAEZiO,GAAW,EACXG,EAAQpO,KAIlB,MAAOA,GAGL,OAFA2N,SACA7Q,KAAKyR,OAAOvO,GAIhB2N,IAEAU,GAAU,EAENL,EAEAlR,KAAK2Q,QAAQtM,GACN8M,GACPnR,KAAKyR,OAAOH,uBAaxBX,iBAAQtM,GACJ,GAAIrE,KAAKkR,UAAYlR,KAAKmR,SACtB,OAAOnR,KAGX,GAAIiQ,EAAU5L,GACV,MAAM,IAAIb,MAAM,gDAOpB,OAJAxD,KAAKkR,UAAW,EAChBlR,KAAK0R,MAAQrN,EACbrE,KAAK2R,WAEE3R,kBAGXyR,gBAAOH,GAAiC,IAAAM,EAAA5R,KACpC,GAAIA,KAAKkR,UAAYlR,KAAKmR,SACtB,OAAOnR,KAGX,GAAIiQ,EAAUqB,GACV,MAAM,IAAI9N,MAAM,+CAGpB,IAAK8N,EAAO,CAER,IAAIpO,EAAOoO,GAAmC,mBAAnBA,EAAMzP,SAA0ByP,EAAMzP,WAAaf,OAAOS,UAAUM,SAAStB,KAAK+Q,GAC7GA,EAAQ,IAAI9N,MAAJ,gDAA2DN,GAgBvE,OAbAlD,KAAKmR,UAAW,EAChBnR,KAAKsR,MAAQA,EAERtR,KAAKoR,cACNjF,WAAW,WACFyF,EAAKR,cFjHnB,SAA2ClO,EAAawN,GAE3D,IAAuC,IAAnCL,EAAiBxM,QAAQX,GAA7B,CAIAmN,EAAiB/L,KAAKpB,GAEtBiJ,WAAW,WAMP,MAAMjJ,GACP,GAEH,IAAK,IAAI2O,EAAI,EAAGA,EAAIvB,EAAiC7N,OAAQoP,IAEzDvB,EAAiCuB,GAAG3O,EAAKwN,IE+F7BoB,CAA+BR,EAAOM,IAE3C,GAGP5R,KAAK2R,WAEE3R,kBAGX+R,qBAAYT,GAGR,OAFAtR,KAAKoR,cAAe,EACpBpR,KAAKyR,OAAOH,GACLtR,kBAGX2R,oBAAW,IAEDK,EAA8ChS,KAA9CgS,YAAad,EAAiClR,KAAjCkR,SAAUC,EAAuBnR,KAAvBmR,SAAUE,EAAarR,KAAbqR,SAEvC,IAAIW,IAICd,GAAaC,GAAlB,CAIAnR,KAAKgS,aAAc,EACnBpB,IAUA,IARA,IAAMqB,EAAQ,SAAIC,EAAgCC,GAC9C,OAAOD,EAAa9B,KAAK,SAAAoB,GACrBW,EAAcxB,QAAQa,IACvB,SAAAtO,GACCiP,EAAcV,OAAOvO,MAIpB9C,EAAI,EAAGA,EAAIiR,EAAS5O,OAAQrC,IAAK,KAAAgS,EAEAf,EAASjR,GAAzCiS,EAFgCD,EAEhCC,UAAWC,EAFqBF,EAErBE,QAAS5B,EAFY0B,EAEZ1B,QAEtBrM,SAEJ,GAAI6M,EAEA,IACI7M,EAASgO,EAAYA,EAAUrS,KAAK0R,OAAS1R,KAAK0R,MACpD,MAAOxO,GACLwN,EAAQe,OAAOvO,GACf,cAGD,GAAIiO,EAAU,CAEjB,IAAKmB,EAAS,CACV5B,EAAQe,OAAOzR,KAAKsR,OACpB,SAGJ,IACIjN,EAASiO,EAAQtS,KAAKsR,OACxB,MAAOpO,GACLwN,EAAQe,OAAOvO,GACf,UAIJmB,aAAkByM,IAAiBzM,EAAO6M,UAAY7M,EAAO8M,WAEzD9M,EAAO6M,SACPR,EAAQC,QAAQtM,EAAOqN,OAEvBhB,EAAQe,OAAOpN,EAAOiN,OAG1BjN,EAAO+M,cAAe,GAEfnB,EAAU5L,GAEbA,aAAkByM,IAAiBzM,EAAO6M,UAAY7M,EAAO8M,UACzD9M,EAAO6M,SACPR,EAAQC,QAAQtM,EAAOqN,OAEvBhB,EAAQe,OAAOpN,EAAOiN,OAK1BW,EAAM5N,EAAQqM,GAKlBA,EAAQC,QAAQtM,GAIxBgN,EAAS5O,OAAS,EAClBzC,KAAKgS,aAAc,EACnBnB,kBAGJT,cAA2BiC,EAA0DC,GAEjF,GAAID,GAAkC,mBAAdA,IAA6BA,EAAU9R,KAC3D,MAAM,IAAIiD,MAAM,wDAGpB,GAAI8O,GAA8B,mBAAZA,IAA2BA,EAAQ/R,KACrD,MAAM,IAAIiD,MAAM,sDAGpB,IAAIkN,EAAgC,IAAII,EAYxC,OAVA9Q,KAAKqR,SAAS/M,MACVoM,UACA2B,YACAC,YAGJtS,KAAKoR,cAAe,EAEpBpR,KAAK2R,WAEEjB,8BAGiB4B,GACxB,OAAOtS,KAAKoQ,UAAK1N,EAAW4P,iCAGxBC,GAEJ,GAAIA,GAAkC,mBAAdA,IAA6BA,EAAUhS,KAC3D,MAAM,IAAIiD,MAAM,uCAGpB,OAAOxD,KAAKoQ,KAAK,SAAC/L,GACd,OAAOyM,MAAiByB,GACnBnC,KAAK,WACF,OAAO/L,KAEhB,SAACnB,GACA,OAAO4N,MAAiByB,GACnBnC,KAAK,WACF,MAAMlN,mBAKtB8I,iBAAQwG,EAAetP,GAAgC,IAAAuP,EAAAzS,KAEnD,GAAIA,KAAKkR,UAAYlR,KAAKmR,SACtB,OAAOnR,KAGX,IAAIgM,EAAUG,WAAW,WAEjBsG,EAAKvB,UAAYuB,EAAKtB,UAI1BsB,EAAKhB,OAAOvO,GAAO,IAAIM,MAAJ,2BAAsCgP,EAAtC,QAEpBA,GAEH,OAAOxS,KAAKoQ,KAAK,SAAA/L,GAEb,OADA6H,aAAaF,GACN3H,iBAKfqO,qBAEI,GAAuB,oBAAZxC,QACP,MAAM,IAAIyC,UAAJ,0BAGV,OAAOzC,QAAQS,QAAQ3Q,SAGpB2Q,iBAAmBe,GAEtB,OAAIA,aAAiBZ,EACVY,EAGPzB,EAAUyB,GAEH,IAAIZ,EAAa,SAACH,EAASc,GAAV,OAAqBC,EAAMtB,KAAKO,EAASc,MAG9D,IAAIX,GAAeH,QAAQe,MAG/BD,gBAAOH,GACV,OAAO,IAAIR,GAAeW,OAAOH,MAG9BS,qBAAYT,GACf,OAAO,IAAIR,GAAeiB,YAAYT,MAGnCsB,aAAsBC,GAEzB,IAAInC,EAAU,IAAII,EACdgC,EAAQD,EAASpQ,OACjBkG,KAEJ,IAAKmK,EAED,OADApC,EAAQC,QAAQhI,GACT+H,EAeX,IAZA,IAAMuB,EAAQ,SAAI7R,EAAY8R,EAAgCC,GAC1D,OAAOD,EAAa9B,KAAK,SAAAoB,GACrB7I,EAAQvI,GAAKoR,EAEC,IADdsB,GAAS,IAELpC,EAAQC,QAAQhI,IAErB,SAAAzF,GACCiP,EAAcV,OAAOvO,MAIpB9C,EAAI,EAAGA,EAAIyS,EAASpQ,OAAQrC,IAAK,CACtC,IAAI2S,EAAOF,EAASzS,GAEpB,GAAI2S,aAAgBjC,GAChB,GAAIiC,EAAK7B,SAAU,CACfvI,EAAQvI,GAAK2S,EAAKrB,MAClBoB,GAAS,EACT,eAED,IAAK7C,EAAU8C,GAAO,CACzBpK,EAAQvI,GAAK2S,EACbD,GAAS,EACT,SAGJb,EAAM7R,EAAG0Q,EAAaH,QAAQoC,GAAOrC,GAOzC,OAJc,IAAVoC,GACApC,EAAQC,QAAQhI,GAGb+H,KAGJsC,cAAiBH,GACpB,IAAIxO,KAEJ,OAAOyM,EAAa8B,IAAI9R,OAAOsO,KAAKyD,GAAUxD,IAAI,SAAAC,GAC9C,OAAOwB,EAAaH,QAAQkC,EAASvD,IAAMc,KAAK,SAAAsB,GAC5CrN,EAAOiL,GAAOoC,OAElBtB,KAAK,WACL,OAAO/L,OAIRgL,aAAU4D,EAAkBC,GAE/B,OAAOpC,EAAa8B,IAAIK,EAAM5D,IAAI6D,OAG/BC,sCAA6BpC,GAChC,OF3WD,SAAsCA,GAGzC,OAFAT,EAAiChM,KAAKyM,IAGlC3E,OADG,WAECkE,EAAiCnJ,OAAOmJ,EAAiCzM,QAAQkN,GAAU,KEsWxFoC,CAA6BpC,mBAGsBmC,EAAiDE,EAAcC,GAEzH,GAAIH,GAA4B,mBAAXA,IAA0BA,EAAO3S,KAClD,MAAM,IAAIiD,MAAM,mCAGpB,IAAIa,SAEJuM,IAEA,IAEIvM,EAAS6O,EAAOI,MAAMF,EAASC,OACjC,MAAOnQ,GAEL,OADA2N,IACOC,EAAaW,OAAOvO,GAK/B,OAFA2N,IAEOC,EAAaH,QAAQtM,MAGzBwH,eAAMA,GACT,OAAO,IAAIiF,EAAa,SAAAH,GACpBxE,WAAWwE,EAAS9E,QAIrBoE,mBAAUyB,GAEb,SAAIA,GAASA,aAAiBZ,IAIvBb,EAAUyB,MAGd6B,iBACH,OD1ZA7C,EAAUF,EAAeA,GAAgB,IC0ZtBM,EDzZvBL,IACOC,EAHJ,IACCA,QEvBRxQ,EAAAQ,EAAA4M,EAAA,sBAAAkG,kCCAAtT,EAAAQ,EAAA4M,EAAA,sBAAAmG,IAAA,IAAAC,EAAAxT,EAAA,GAEWuT,EAAkB9Q,OAAO4K,IAAUc,aAAaC,WAAa3L,OAAO4K,IAAUc,aAAaC,eAItGmF,EAAOE,aAAe,gRCAf,SAASC,EAAe1Q,GAA0C,IAA7B2Q,EAA6BrR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,EAEzD,GAAIqR,GAAS,EACT,MAAO,gCAGX,IACI,IAAK3Q,EACD,yBAA2BpC,OAAOS,UAAUM,SAAStB,KAAK2C,GAA1D,IAGJ,GAAmB,iBAARA,EACP,OAAOA,EAGX,GAAIA,aAAeM,MAAO,CACtB,IAAIsQ,EAAQ5Q,GAAOA,EAAI4Q,MACnBjN,EAAU3D,GAAOA,EAAI2D,QAEzB,GAAIiN,GAASjN,EACT,OAAgC,IAA5BiN,EAAMjQ,QAAQgD,GACPiN,EAEIjN,EAAX,KAAyBiN,EAE1B,GAAIA,EACP,OAAOA,EACJ,GAAIjN,EACP,OAAOA,EAIf,MAA4B,mBAAjB3D,EAAIrB,SACJqB,EAAIrB,WAGRf,OAAOS,UAAUM,SAAStB,KAAK2C,GAExC,MAAO6Q,GACL,yCAA2CH,EAAeG,EAAQF,EAAQ,IAK3E,IAAIG,EAAO,SAAId,GAClB,IAAKA,EACD,OAAOA,EAEX,IAAIe,GAAS,EACb,OAAO,WACH,IAAKA,EAED,OADAA,GAAS,EACFf,EAAOI,MAAMtT,KAAMwC,aAM/B,SAAS0R,KAIT,SAASC,EAAiB7H,EAAc8H,EAAgBrD,GAO3D,OANIzE,EAAI6H,iBACJ7H,EAAI6H,iBAAiBC,EAAOrD,GAE5BzE,EAAI+H,YAAJ,KAAsBD,EAAUrD,IAIhC3E,OADG,WAEKE,EAAIgI,oBACJhI,EAAIgI,oBAAoBF,EAAOrD,GAE/BzE,EAAIiI,YAAJ,KAAsBH,EAAUrD,KAMzC,SAASyD,IAEZ,IAAIC,EAAQ,mBAEZ,MAAO,aAAaC,QAAQ,KAAM,WAC9B,OAAOD,EAAME,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMhS,WAMtD,SAASsS,EAAUnT,EAAuBgK,GAC7C,IAAK,IAAIxL,EAAI,EAAGA,EAAIwB,EAAKa,OAAQrC,IAC7BwL,EAAShK,EAAKxB,GAAIA,GAInB,SAAS4U,EAAWpT,EAAegK,GACtC,IAAK,IAAI0D,KAAO1N,EACRA,EAAKJ,eAAe8N,IACpB1D,EAAShK,EAAK0N,GAAMA,GAKzB,SAAS2F,EAAkCrT,EAAUgK,GACpDd,MAAMC,QAAQnJ,GACdmT,EAAUnT,EAAMgK,GACO,iBAAhB,IAAOhK,EAAP,YAAAsT,EAAOtT,KAA8B,OAATA,GACnCoT,EAAWpT,EAAMgK,GAIlB,SAASuJ,EAA2CvT,EAAUgK,GAAmF,IAAxBwJ,EAAwB5S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,EAE7I,GAAI4S,GAAS,IACT,MAAM,IAAI5R,MAAJ,uEAGV,IAAI6R,SAEJ,GAAoB,iBAAhB,IAAOzT,EAAP,YAAAsT,EAAOtT,KAA8B,OAATA,GAAkBkJ,MAAMC,QAAQnJ,GAEzD,KAAIkJ,MAAMC,QAAQnJ,GAGrB,MAAM,IAAI+Q,UAAJ,2BAAuC/Q,EAAvC,YAAAsT,EAAuCtT,KAF7CyT,UAFAA,KAwBJ,OAjBAJ,EAAKrT,EAAM,SAAC0T,EAAWhG,GAEnB,IAAIjL,EAASuH,EAAS0J,EAAWhG,QAEX,IAAXjL,EAEPgR,EAAO/F,GAAOjL,EACc,iBAArB,IAAOiR,EAAP,YAAAJ,EAAOI,KAAwC,OAAdA,EAExCD,EAAO/F,GAAO6F,EAAcG,EAAW1J,EAAUwJ,EAAQ,GAGzDC,EAAO/F,GAAOgG,IAKfD,EAGJ,SAASE,EAAarC,EAAmBV,GAC5C,IAAIxG,SASJ,OAFAA,EAAUG,WALV,SAASqJ,IACLxJ,EAAUG,WAAWqJ,EAAahD,GAClCU,EAAO3S,QAGuBiS,IAG9BpG,OADG,WAECF,aAAaF,KAKlB,SAASrK,EAAQC,GACpB,MAAgD,oBAAzCd,OAAOS,UAAUM,SAAStB,KAAKqB,GAOnC,IAAI6T,EAAoC,SAAYvC,GAEvD,IAAIwC,EAAU,IAAIC,IAGlB,OAAO,SAAyBC,GAC5B,IAAIvR,EAASqR,EAAQxU,IAAI0U,GAEzB,YAAsB,IAAXvR,EACAA,QAKW,KAFtBA,EAAS6O,EAAO3S,KAAKP,KAAM4V,KAGvBF,EAAQG,IAAID,EAAKvR,GAGdA,KAIR,SAASyR,IACZ,OAAI5M,cACOqE,IAAUY,aAAa9L,MAE9B+G,cACOmE,IAAUY,aAAa/L,OAE3BmL,IAAUY,aAAaC,SAG3B,SAAS2H,EAAyBzJ,EAAS0J,EAAsBC,GAEpE,IAAIC,SACAC,SAEJ,IAQI,GAP2B,OAAvBlL,KAAKC,gBAELgL,EAAepV,OAAOS,UAAU6U,cAEzBtV,OAAOS,UAAU6U,QAGD,OAAvBnL,KAAKC,cACL,MAAM,IAAI1H,MAAJ,4CAUV,GAP2B,OAAvByH,KAAKC,gBAELiL,EAAerL,MAAMvJ,UAAU6U,cAExBtL,MAAMvJ,UAAU6U,QAGA,OAAvBnL,KAAKC,cACL,MAAM,IAAI1H,MAAJ,4CAGZ,MAAON,GACL,MAAM,IAAIM,MAAJ,kCAA6CN,EAAI2D,SAG3D,IAAIxC,EAAS4G,KAAKC,UAAU3K,KAAKP,KAAMsM,EAAK0J,EAAUC,GAEtD,IACQC,IAEApV,OAAOS,UAAU6U,OAASF,GAG1BC,IAEArL,MAAMvJ,UAAU6U,OAASD,GAG/B,MAAOjT,GACL,MAAM,IAAIM,MAAJ,kCAA6CN,EAAI2D,SAI3D,OAAOxC,EAGJ,SAASgS,EAAUzU,GACtB,OAAOqJ,KAAKqL,MAAM1U,GAGf,SAAS2U,IAEZ,QAAIlP,YAAa1E,QAAQqI,MAAM,qCAI1BuE,IAAOC,sPC1QhBiE,IAAO+C,QAAU/C,IAAO+C,SAAW,IAAIb,IAEhC,IAAIc,EAAmBzC,EAAK,WAC/BP,IAAOiD,GAAGnJ,IAAUQ,mBAAmBC,QAAUnD,OAAQ0C,IAAUrL,UAAY,SAAAyU,GAAmG,IAAhGC,EAAgGD,EAAhGC,OAAQ/L,EAAwF8L,EAAxF9L,OAAQgM,EAAgFF,EAAhFE,KAE1FL,EAAU/C,IAAO+C,QAAQtV,IAAI0V,GAEjC,IAAKJ,EACD,MAAM,IAAIhT,MAAJ,iEAGV,IAAIsT,EAAON,EAAQK,EAAKE,IAExB,IAAKD,EACD,MAAM,IAAItT,MAAJ,kCAA6CqT,EAAKE,IAG5D,IAAKpM,YAAYmM,EAAKnT,OAAQkH,GAC1B,MAAM,IAAIrH,MAAJ,iBAA4BsT,EAAKnT,OAAjC,0BAAmEkH,GAG7E,OAAOiG,IAAYA,IAAK,WACpB,OAAOgG,EAAK5D,OAAOI,OAAQsD,SAAQ/L,SAAQgM,QAAQA,EAAKxD,QAEzDjD,KAAK,SAAA/L,GAEJ,OACIA,SACA0S,GAAMF,EAAKE,GACXpW,KAAMkW,EAAKlW,YAM3B,SAASqW,EAAapV,EAAcqV,GAChC,MAAuB,iBAAhB,IAAOrV,EAAP,YAAAsV,EAAOtV,KAA8B,OAATA,GAAiBA,EAAKuV,WAAaF,EASnE,SAASG,EAAgBC,EAAqC1T,EAAiCuP,EAAmBvS,GAErH,IAAIoW,EAAKvC,IAELgC,EAAU/C,IAAO+C,QAAQtV,IAAImW,GASjC,OAPKb,IACDA,KACA/C,IAAO+C,QAAQX,IAAIwB,EAAab,IAGpCA,EAAQO,IAAQpT,SAAQuP,WAGpBiE,SAAU5J,IAAUgB,oBAAoBP,OACxCsJ,OAAUP,EACVQ,SAAU5W,GAiDX,SAAS6W,EAAiBH,EAAqC1T,EAAiC2I,GAEnG,OAAO6I,GAAgB7I,OAAO,SAAC1K,EAAM0N,GACjC,MAAoB,mBAAT1N,EACAwV,EAAgBC,EAAa1T,EAAQ/B,EAAM0N,EAAIzN,YAGtDD,aAAgB4B,OA/CJN,EAgDUtB,GA9C1BuV,SAAa5J,IAAUgB,oBAAoBT,MAC3C2J,YAAa7D,EAAe1Q,GAE5BwU,SAAaxU,EAAIyU,OA8CbhV,OAAOuN,SAAWtO,aAAgBe,OAAOuN,QArCrD,SAA0BmH,EAAqC1T,EAAiC+M,EAA+B/P,GAC3H,OACIwW,SAAU5J,IAAUgB,oBAAoBC,QACxCoJ,SAAUR,EAAgBC,EAAa1T,EAAQ,SAACgN,EAASc,GAAV,OAAqBf,EAAQN,KAAKO,EAASc,IAAa9Q,EAA7F,UAmCCkX,CAAiBR,EAAa1T,EAAQ/B,EAAM0N,EAAIzN,YAGvDiP,IAAab,UAAUrO,GAlCnC,SAA+ByV,EAAqC1T,EAAiC+M,EAA+B/P,GAChI,OACIwW,SAAU5J,IAAUgB,oBAAoBE,cACxCmJ,SAAUR,EAAgBC,EAAa1T,EAAQ,SAACgN,EAASc,GAAV,OAAqBf,EAAQN,KAAKO,EAASc,IAAa9Q,EAA7F,UAiCCmX,CAAsBT,EAAa1T,EAAQ/B,EAAM0N,EAAIzN,YAG5DF,EAAQC,IA3BImW,EA6BUnW,GA3B1BuV,SAAY5J,IAAUgB,oBAAoBG,MAC1CsJ,WAAYD,EAAMnB,cAwBlB,EA5DR,IAAwB1T,EAiCA6U,IA+BjBzL,IAGA,SAAS2L,EAAkBrB,EAAgC/L,EAAiByB,GAE/E,SAAS4L,IACL,IAAI7E,EAAOvI,MAAMvJ,UAAUmK,MAAMnL,KAAKiC,WACtC,OAAOiR,IAAO0E,KAAKvB,EAAQrJ,IAAUQ,mBAAmBC,QACpD+I,GAAMzK,EAAIgL,OACV3W,KAAM2L,EAAIiL,SACVlE,SAEC1P,OAAQkH,EAAQmB,SAAU,IAAKoE,KAAK,SAAAgI,GACrC,OADmDA,EAAXvB,KAC5BxS,QACb,SAAAnB,GACC,MAAMA,IAUd,OANAgV,EAAQX,SAAWjL,EAAIiL,SACvBW,EAAQG,aAAc,EAEtBH,EAAQtB,OAASA,EACjBsB,EAAQrN,OAASA,EAEVqN,EAGJ,SAASI,EAAiB1B,EAAgC/L,EAAiByB,GAC9E,IAAIpJ,EAAM,IAAIM,MAAM8I,EAAImL,aAKxB,OAJInL,EAAIoL,WAEJxU,EAAIyU,KAAOrL,EAAIoL,UAEZxU,EAGJ,SAASqV,EAAwB3B,EAAgC/L,EAAiBkI,GACrF,OAAO,IAAIjC,IAAa,SAACH,EAASc,GAAV,OAAqBwG,EAAkBrB,EAAQ/L,EAAQkI,EAAK6E,SAAvCK,CAAiDtH,EAASc,KAGpG,SAAS+G,EAAmB5B,EAAgC/L,EAAiBkI,GAChF,OAAKpQ,OAAOuN,QAIL,IAAIvN,OAAOuN,QAAQ,SAACS,EAASc,GAAV,OAAqBwG,EAAkBrB,EAAQ/L,EAAQkI,EAAK6E,SAAvCK,CAAiDtH,EAASc,KAH9F8G,EAAwB3B,EAAQ/L,EAAQkI,GAMhD,SAAS0F,EAAiB7B,EAAgC/L,EAAiBjJ,GAE9E,OAAO,IAAI8W,OAAO9W,EAAKoW,YAGpB,SAASW,EAAmB/B,EAAgC/L,EAAiByB,GAEhF,OAAO6I,GAAgB7I,OAAO,SAAC1K,GAC3B,GAAoB,iBAAhB,IAAOA,EAAP,YAAAsV,EAAOtV,KAA8B,OAATA,EAIhC,OAAIoV,EAAapV,EAAM2L,IAAUgB,oBAAoBP,QAC1CiK,EAAkBrB,EAAQ/L,EAAQjJ,GAGzCoV,EAAapV,EAAM2L,IAAUgB,oBAAoBT,OAC1CwK,EAAiB1B,EAAQ/L,EAAQjJ,GAGxCoV,EAAapV,EAAM2L,IAAUgB,oBAAoBC,SAC1CgK,EAAmB5B,EAAQ/L,EAAQjJ,GAG1CoV,EAAapV,EAAM2L,IAAUgB,oBAAoBE,eAC1C8J,EAAwB3B,EAAQ/L,EAAQjJ,GAG/CoV,EAAapV,EAAM2L,IAAUgB,oBAAoBG,OAC1C+J,EAAiB7B,EAAQ/L,EAAQjJ,QAD5C,IAID0K,ICrNA,SAASsM,EAAQ7H,GACpB0C,IAAOiD,GAAGnJ,IAAUQ,mBAAmBE,OAAStK,OAAQ4J,IAAUrL,UAAY,SAAAyU,GAAwB,IAArBC,EAAqBD,EAArBC,OAAQ/L,EAAa8L,EAAb9L,OACrF,OAAOkG,GAAU6F,SAAQ/L,aAI1B,SAASgO,EAAS7V,GACrB,OAAOyQ,IAAO0E,KAAKnV,EAAKuK,IAAUQ,mBAAmBE,UAAatK,OAAQ4J,IAAUrL,SAAU8J,SAAU,IACnGoE,KAAK,SAAAgI,GACF,OAASvN,OADSuN,EAAbvN,UAKV,SAASiO,IAEZF,EAAQ,SAAAG,GAAwB,IAArBnC,EAAqBmC,EAArBnC,OAAQ/L,EAAakO,EAAblO,OACX6F,EAAU+C,IAAOuF,cAAc9X,IAAI0V,IAAW,IAAI9F,IACtDJ,EAAQC,SAAU9F,WAClB4I,IAAOuF,cAAcnD,IAAIe,EAAQlG,KAGrC,IAAIzN,EAASwF,cACTxF,GACA4V,EAAS5V,GAAT,MAAuBiR,GAIxB,SAAS+E,EAAmBjW,GAAoG,IAAvFgJ,EAAuFxJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApE,IAAM7B,EAA8D6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9C,SAEjFkO,EAAU+C,IAAOuF,cAAc9X,IAAI8B,GAEvC,OAAI0N,IAIJA,EAAU,IAAII,IACd2C,IAAOuF,cAAcnD,IAAI7S,EAAK0N,IAEb,IAAb1E,GACAG,WAAW,kBAAMuE,EAAQe,OAAO,IAAIjO,MAAU7C,EAAd,uBAA2CqL,EAA3C,QAA2DA,GAGxF0E,GA5CX+C,IAAOuF,cAAgBvF,IAAOuF,eAAiB,IAAIrD,ICTnDzV,EAAAQ,EAAA4M,EAAA,sBAAAsG,IAAA1T,EAAAQ,EAAA4M,EAAA,sBAAA0G,IAAA9T,EAAAQ,EAAA4M,EAAA,sBAAA4G,IAAAhU,EAAAQ,EAAA4M,EAAA,sBAAA6G,IAAAjU,EAAAQ,EAAA4M,EAAA,sBAAAkH,IAAAtU,EAAAQ,EAAA4M,GAAA,oBAAAyH,IAAA7U,EAAAQ,EAAA4M,GAAA,oBAAA0H,IAAA9U,EAAAQ,EAAA4M,GAAA,oBAAA2H,IAAA/U,EAAAQ,EAAA4M,GAAA,oBAAA6H,IAAAjV,EAAAQ,EAAA4M,EAAA,sBAAAiI,IAAArV,EAAAQ,EAAA4M,EAAA,sBAAA3L,IAAAzB,EAAAQ,EAAA4M,EAAA,sBAAA4L,IAAAhZ,EAAAQ,EAAA4M,EAAA,sBAAAwI,IAAA5V,EAAAQ,EAAA4M,EAAA,sBAAAyI,IAAA7V,EAAAQ,EAAA4M,EAAA,sBAAA+I,IAAAnW,EAAAQ,EAAA4M,EAAA,sBAAAiJ,IAAArW,EAAAQ,EAAA4M,EAAA,sBAAAmJ,IAAAvW,EAAAQ,EAAA4M,GAAA,oBAAA8J,IAAAlX,EAAAQ,EAAA4M,EAAA,sBAAAkK,IAAAtX,EAAAQ,EAAA4M,GAAA,oBAAA2K,IAAA/X,EAAAQ,EAAA4M,GAAA,oBAAAgL,IAAApY,EAAAQ,EAAA4M,GAAA,oBAAAiL,IAAArY,EAAAQ,EAAA4M,GAAA,oBAAAkL,IAAAtY,EAAAQ,EAAA4M,GAAA,oBAAAmL,IAAAvY,EAAAQ,EAAA4M,EAAA,sBAAAqL,IAAAzY,EAAAQ,EAAA4M,GAAA,oBAAAsL,IAAA1Y,EAAAQ,EAAA4M,EAAA,sBAAAuL,IAAA3Y,EAAAQ,EAAA4M,EAAA,sBAAAwL,IAAA5Y,EAAAQ,EAAA4M,EAAA,sBAAA2L,6CCAO,SAAShS,EAAeD,EAAuBpF,GAClD,IAAK,IAAIxB,EAAI,EAAGA,EAAI4G,EAAWvE,OAAQrC,IAEnC,IACI,GAAI4G,EAAW5G,KAAOwB,EAClB,OAAOxB,EAEb,MAAO8C,IAKb,OAAQ,ECPL,IAAMiW,EAAb,WAOI,SAAAA,IAII,mCAJUA,4DAAAlI,CAAAjR,MAEVA,KAAKW,KAAL,cAA0C,IAAhBiU,KAAKE,WAAmB,GAAlD,KCdD,WAEH,GAAuB,oBAAZa,QACP,OAAO,EAGX,QAA6B,IAAlB7U,OAAOsY,OACd,OAAO,EAGX,IAEI,IAAIC,EAAc,IAAI1D,QAClB2D,KAOJ,OAJAxY,OAAOsY,OAAOE,GAEdD,EAAYxD,IAAIyD,EAJA,mCAMZD,EAAYnY,IAAIoY,GAMtB,MAAOpW,GAEL,OAAO,GDZHqW,GACA,IACIvZ,KAAK0V,QAAU,IAAIC,QACrB,MAAOzS,IAKblD,KAAKoP,QACLpP,KAAKwZ,UApBb,OAAAL,EAAA5X,UAuBIkY,sBAvBJ,WA4BQ,IAHA,IAAI/D,EAAU1V,KAAK0V,QACftG,EAAOpP,KAAKoP,KAEPhP,EAAI,EAAGA,EAAIgP,EAAK3M,OAAQrC,IAAK,CAClC,IAAIsR,EAAQtC,EAAKhP,GAEjB,GAAIiM,YAASqF,IAAUhL,YAAegL,GAAQ,CAE1C,GAAIgE,EACA,IACIA,SAAehE,GACjB,MAAOxO,IAKbkM,EAAKjI,OAAO/G,EAAG,GACfJ,KAAKwZ,OAAOrS,OAAO/G,EAAG,GAEtBA,GAAK,KA5CrB+Y,EAAA5X,UAiDImY,kBAjDJ,SAiDsBpK,GAEd,GAAIjD,YAASiD,GACT,OAAO,EAGX,IACSA,GAAOA,EAAIvP,KACXuP,GAAOA,EAAItP,KAAKW,MACvB,MAAOuC,GACL,OAAO,EAGX,OAAO,GA9DfiW,EAAA5X,UAiEIsU,IAjEJ,SAiEQvG,EAASoC,GAET,IAAKpC,EACD,MAAM,IAAI9L,MAAJ,wBAGV,IAAIkS,EAAU1V,KAAK0V,QAEnB,GAAIA,EACA,IACIA,EAAQG,IAAIvG,EAAKoC,GACnB,MAAOxO,UACElD,KAAK0V,QAIpB,GAAI1V,KAAK0Z,kBAAkBpK,GACvB,IACI,IAAI3O,EAAOX,KAAKW,KACZgZ,EAAQrK,EAAI3O,GAWhB,YATIgZ,GAASA,EAAM,KAAOrK,EACtBqK,EAAM,GAAKjI,EAEX5Q,OAAOC,eAAeuO,EAAK3O,GACvB+Q,OAAYpC,EAAKoC,GACjBkI,UAAU,KAMpB,MAAO1W,IAKblD,KAAKyZ,wBAEL,IAAIrK,EAAOpP,KAAKoP,KACZoK,EAASxZ,KAAKwZ,OACdK,EAAQ5S,EAAYmI,EAAME,IAEf,IAAXuK,GACAzK,EAAK9K,KAAKgL,GACVkK,EAAOlV,KAAKoN,IAEZ8H,EAAOK,GAASnI,GAhH5ByH,EAAA5X,UAoHIL,IApHJ,SAoHQoO,GAEA,IAAKA,EACD,MAAM,IAAI9L,MAAJ,wBAGV,IAAIkS,EAAU1V,KAAK0V,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQoE,IAAIxK,GACZ,OAAOoG,EAAQxU,IAAIoO,GAGzB,MAAOpM,UACElD,KAAK0V,QAIpB,GAAI1V,KAAK0Z,kBAAkBpK,GACvB,IACI,IAAIqK,EAAQrK,EAAItP,KAAKW,MAErB,OAAIgZ,GAASA,EAAM,KAAOrK,EACfqK,EAAM,QAGjB,EACF,MAAOzW,IAKblD,KAAKyZ,wBAEL,IACII,EAAQ5S,EADDjH,KAAKoP,KACcE,GAE9B,IAAe,IAAXuK,EAIJ,OAAO7Z,KAAKwZ,OAAOK,IA9J3BV,EAAA5X,UAAA,gBAiKW+N,GAEH,IAAKA,EACD,MAAM,IAAI9L,MAAJ,wBAGV,IAAIkS,EAAU1V,KAAK0V,QAEnB,GAAIA,EACA,IACIA,SAAepG,GACjB,MAAOpM,UACElD,KAAK0V,QAIpB,GAAI1V,KAAK0Z,kBAAkBpK,GACvB,IACI,IAAIqK,EAAQrK,EAAItP,KAAKW,MAEjBgZ,GAASA,EAAM,KAAOrK,IACtBqK,EAAM,GAAKA,EAAM,QAAKjX,GAE5B,MAAOQ,IAKblD,KAAKyZ,wBAEL,IAAIrK,EAAOpP,KAAKoP,KACZyK,EAAQ5S,EAAYmI,EAAME,IAEf,IAAXuK,IACAzK,EAAKjI,OAAO0S,EAAO,GACnB7Z,KAAKwZ,OAAOrS,OAAO0S,EAAO,KApMtCV,EAAA5X,UAwMIuY,IAxMJ,SAwMQxK,GAEA,IAAKA,EACD,MAAM,IAAI9L,MAAJ,wBAGV,IAAIkS,EAAU1V,KAAK0V,QAEnB,GAAIA,EACA,IACI,GAAIA,EAAQoE,IAAIxK,GACZ,OAAO,EAEb,MAAOpM,UACElD,KAAK0V,QAIpB,GAAI1V,KAAK0Z,kBAAkBpK,GACvB,IACI,IAAIqK,EAAQrK,EAAItP,KAAKW,MAErB,SAAIgZ,GAASA,EAAM,KAAOrK,GAK5B,MAAOpM,IAQb,OAHAlD,KAAKyZ,yBAGa,IADNxS,EAAYjH,KAAKoP,KAAME,IA1O3C6J,EAAA5X,UA8OIwY,SA9OJ,SA8OazK,EAAS1O,GACd,GAAIZ,KAAK8Z,IAAIxK,GAET,OAAOtP,KAAKkB,IAAIoO,GAGpB,IAAIoC,EAAQ9Q,IAEZ,OADAZ,KAAK6V,IAAIvG,EAAKoC,GACPA,GAtPfyH,EAAA,GELAjZ,EAAAQ,EAAA4M,EAAA,sBAAA0M,0HCuBA,SAASC,EAAmBlD,GAExB,IACQtD,IAAOyG,cAAcnD,WACdtD,IAAOyG,cAAcnD,GAAIH,OAEtC,MAAO1T,WAIFuQ,IAAOyG,cAAcnD,GAbhCtD,IAAOyG,cAAgBzG,IAAOyG,kBAC9BzG,IAAO0G,eAAiB,EAoDxB1G,IAAO2G,mBAAqB,SAAAhC,GAA6K,IAA/IzX,EAA+IyX,EAA/IzX,KAAMiW,EAAyIwB,EAAzIxB,OAAQyD,EAAiIjC,EAAjIiC,OAAQC,EAAyHlC,EAAzHkC,YAExEC,EAAexX,YAAUJ,QAE7B,IAAK4X,EACD,MAAM,IAAI/W,MAAJ,4CAGV,IAAIuT,EAnBR,SAAAJ,GAAgG,IAArEhW,EAAqEgW,EAArEhW,KAAMiW,EAA+DD,EAA/DC,OAAQyD,EAAuD1D,EAAvD0D,OAAQC,EAA+C3D,EAA/C2D,YAI7C,OA9BJ,WAA8B,IAC1B,IAAIJ,EAAgBzG,IAAOyG,cADDM,EAAA,EAAAC,EAGV3Z,OAAOsO,KAAK8K,GAHFjV,EAAA,MAAAwV,EAAA,EAAAA,EAAAhY,OAAA+X,EAAAvV,EAAAuV,IAGkB,CAAvC,IAAIlL,OACDoL,EAAeR,EAAc5K,GAEjC,IACI4E,YAAKwG,EAAa9D,QACpB,MAAO1T,GACL+W,EAAmB3K,GACnB,SAGA5I,YAAegU,EAAa9D,SAC5BqD,EAAmB3K,IAa3BqL,GACAlH,IAAO0G,gBAAkB,EACzB1G,IAAOyG,cAAczG,IAAO0G,iBAAoBxZ,OAAMiW,SAAQyD,SAAQC,eAC/D7G,IAAO0G,eAeLS,EAAkBja,OAAMiW,SAAQyD,SAAQC,gBAEjD,OAAO7G,IAAO0E,KAAKoC,EAAchN,IAAUQ,mBAAmBG,aAE1DvN,OAEA2Z,YAJuE,WAMnE,IAAII,EApBhB,SAAyB3D,GACrB,OAAOtD,IAAOyG,cAAcnD,GAmBD8D,CAAgB9D,GAEnC,IAEI7C,YAAKwG,GAAgBA,EAAa9D,QACpC,MAAO1T,GAEL,YADA+W,EAAmBlD,GAIvB,GAAK2D,GAAiBA,EAAa9D,SAAUlQ,YAAegU,EAAa9D,QAAzE,CAIA,IACI8D,EAAaL,SACf,MAAOnX,GACL,OAGJwX,EAAaJ,YAAYhH,MAAMtT,KAAMwC,eAGxCmB,OAAQ4J,IAAUrL,uBCzGpB,SAAS4Y,IAEZ,QAAIzT,YAAa1E,QAAQqI,MAAM,qCAI1BuE,IAAOC,wBAOT,SAASuL,EAAkB/X,GAE9B,OAAKkH,YAAgBvH,OAAQK,GAO1B,SAASgY,EAAqBrX,EAAkBX,GAEnD,GAAIW,GACA,GAAID,gBAAgB6H,YAAiB5H,GACjC,OAAO,OAER,GAAIX,IACFkB,YAAalB,GACd,OAAO,EAIf,OAAO,EAGJ,SAASiY,EAATtE,GAAqG,IAA9E3T,EAA8E2T,EAA9E3T,IAAKW,EAAyEgT,EAAzEhT,OAE/B,SAAKmX,KAIDnX,IAAWqX,EAAqBrX,EAAQX,IAIxCA,IAAQ+X,EAAkB/X,IAO3B,SAASkY,EAAcvX,GAI1B,IAAIwX,GAFJxX,EAASA,GAAU4H,YAAiB5H,IAEP+Q,QAAQ,iBAAkB,KAIvD,OAFanH,IAAU0B,mBAAnB,IAA2CkM,EAK5C,SAASC,IACZ,OAAOjS,QAAQxG,OAAOhC,MAAQgC,OAAOhC,OAASua,EAAcxX,gBAGzD,IAAI2X,EAAoB,IAAIvK,IAAa,SAAAH,GAE5C,GAAIhO,OAAOwK,UAAYxK,OAAOwK,SAASmO,KACnC,OAAO3K,EAAQhO,OAAOwK,SAASmO,MAGnC,IAAIC,EAAWC,YAAY,WACvB,GAAI7Y,OAAOwK,UAAYxK,OAAOwK,SAASmO,KAEnC,OADAG,cAAcF,GACP5K,EAAQhO,OAAOwK,SAASmO,OAEpC,MAKA,SAASI,EAAqB1Y,GACjCyQ,IAAOkI,cAAc9F,IAAI7S,GAAO4Y,mBAAoB,IAAI9K,MAGrD,SAAS+K,EAAiB7Y,GAC7B,OAAOyQ,IAAOkI,cAAcza,IAAI8B,GAG7B,SAAS8Y,EAA0B9Y,EAA6BW,EAAiB2W,GAEpF,IAAIyB,EAAeF,EAAiB7Y,GAEpC,IAAK+Y,EACD,MAAM,IAAIvY,MAAJ,+CAGV,IAAIwY,EAAqB,SAACC,EAAmCpV,EAAkBqV,GAE3E,GAAID,IAAcjZ,EACd,MAAM,IAAIQ,MAAJ,uCAGV,IAAKmH,YAAYuR,EAAcvY,GAC3B,MAAM,IAAIH,MAAJ,iBAA4B0Y,EAA5B,0BAAoEvY,GAG9E2W,EAAYzT,IAGhBkV,EAAaH,mBAAmBjL,QAAQqL,GACxCD,EAAaH,mBAAqB9K,IAAaH,QAAQqL,GAGpD,SAASG,EAAwBnZ,EAA6BE,GAEjE,IAAI6Y,EAAeF,EAAiB7Y,GAEpC,IAAK+Y,EACD,MAAM,IAAIvY,MAAJ,mDAGVuY,EAAaH,mBAAmB7J,YAAY7O,GAGzC,SAASkZ,EAAkBpZ,EAA6B6D,EAAkBlD,GAE7E,IAAI0Y,EAAkB7T,YAAS7F,OAAQK,GACnCsZ,EAAkB9T,YAASxF,EAAKL,QAEpC,IAAK0Z,IAAmBC,EACpB,MAAM,IAAI9Y,MAAJ,+DAGV,IAAIuY,EAAeF,EAAiB7Y,GAEpC,IAAK+Y,EACD,MAAM,IAAIvY,MAAJ,uCAGV,OAAOuY,EAAaH,mBAAmBxL,KAAK,SAAAkK,GACxC,OAAOA,EAAYtX,EAAK6D,EAASlD,KA9DzC8P,IAAOkI,cAAgBlI,IAAOkI,eAAiB,IAAIhG,ICjFnD,IAAI4G,EAA6B9G,YAAe,SAACzS,GAC7C,OAAO8N,IAAYA,IAAK,WAAM,QAAA0J,EAAA,EAAAxV,EACRN,YAAU1B,GADFiC,EAAA,MAAAD,EAAA,EAAAA,EAAAvC,OAAA+X,EAAAvV,EAAAuV,IACQ,CAA7B,IAAI3V,OACL,IAEI,GAAIA,GAASA,IAAUlC,QAAUuB,YAAaW,IAAUA,EAAM0I,IAAUc,aAAaC,WACjF,OAAOzJ,EAGb,MAAO3B,GACL,UAIR,IACI,IAAI2B,EAAQ4C,YAAezE,EAAKkY,EAAcxX,gBAE9C,IAAKmB,EACD,OAIJ,OAAIX,YAAaW,IAAUA,EAAM0I,IAAUc,aAAaC,WAC7CzJ,EAGJ,IAAIiM,IAAa,SAAAH,GAEpB,IAAI4K,SACAvP,SAEJuP,EAAWC,YAAY,WAEnB,GAAI3W,GAASX,YAAaW,IAAUA,EAAM0I,IAAUc,aAAaC,WAG7D,OAFAmN,cAAcF,GACdrP,aAAaF,GACN2E,EAAQ9L,IAEpB,KAEHmH,EAAUG,WAAW,WAEjB,OADAsP,cAAcF,GACP5K,KACR,OAGT,MAAOzN,SAMV,SAASsZ,IACZ,OAAO1L,IAAYA,IAAK,WAEpB,IAAM1N,EAASD,YAAUR,QAEzB,GAAKS,GAIA6X,GAAcjY,IAAKI,IAMxB,OAFAsY,EAAqBtY,GAEdmZ,EAA2BnZ,GAAQgN,KAAK,SAAAqM,GAE3C,OAAKA,EAIA9Z,OAAOhC,KAIL8b,EAAOlP,IAAUc,aAAaC,WAAW8L,oBAE5CzZ,KAAMgC,OAAOhC,KAEbiW,OAAQjU,OAER0X,OAN+D,aAU/DC,YAV+D,SAUnDzT,GAER,IACIqN,YAAKvR,QACP,MAAOO,GACL,OAGJ,GAAKP,SAAUA,OAAOiE,OAItB,IACI6M,IAAOiJ,gBACH7F,KAAQhQ,EACRgE,OAAQ7K,KAAK6K,OACb+L,OAAQ5W,KAAK4W,SAEnB,MAAO1T,GACL4N,IAAaW,OAAOvO,OAI7BkN,KAAK,SAAAuG,GAA8B,IAA3BC,EAA2BD,EAA3BC,OAAQ/L,EAAmB8L,EAAnB9L,OAAQgM,EAAWF,EAAXE,KAEvB,GAAID,IAAWxT,EACX,MAAM,IAAII,MAAJ,gCAGVsY,EAA0BlF,EAAQ/L,EAAQgM,EAAKyD,eAvC5C,MAyCE,SAAApX,GAGL,MADAiZ,EAAwB/Y,EAAQF,GAC1BA,IA/CCiZ,EAAwB/Y,EAAQ,IAAII,MAAJ,8DAJhC2Y,EAAwB/Y,EAAQ,IAAII,MAAJ,gECgBhD,SAASmZ,EAAUnR,EAAc7H,GAEpC,OADAA,EAASA,GAAU4H,YAAiBC,GAC7BrC,QAAQsK,IAAOmJ,QAAQjZ,IAG3B,SAASkZ,EAAWrR,EAAc7H,GAIrC,OAFAA,EAASA,GAAU4H,YAAiBC,GAEhCiI,IAAOmJ,QAAQjZ,GACR8P,IAAOmJ,QAAQjZ,IAG1B8P,IAAOmJ,QAAQjZ,GAAUmN,IAAYA,IAAK,WAEtC,GAAIpN,gBAAgBC,EAChB,MAAM,IAAIH,MAAJ,6DAAwEG,GAGlF,IAAIhD,EAAQua,EAAcvX,GAG1B,GAFY8D,YAAe9E,OAAQhC,GAG/B,MAAM,IAAI6C,MAAJ,mBAA8B7C,EAA9B,2BAGV,IAAImc,EAjDZ,SAAyBnc,EAAe6K,GAEpC,IAAIsR,EAAS3P,SAAS4P,cAAT,UAkBb,OAhBAD,EAAOE,aAAP,OAA4Brc,GAC5Bmc,EAAOE,aAAP,KAA4Brc,GAE5Bmc,EAAOE,aAAP,qFACAF,EAAOE,aAAP,mBACAF,EAAOE,aAAP,cACAF,EAAOE,aAAP,kBACAF,EAAOE,aAAP,4BAEAF,EAAOE,aAAP,iBACAF,EAAOE,aAAP,iBACAF,EAAOE,aAAP,YACAF,EAAOE,aAAP,uBAEAF,EAAOG,IAAMzR,EAENsR,EA6BUI,CAAgBvc,EAAM6K,GAGnC,OAFAiI,IAAO0J,aAAaxZ,GAAUmZ,EAEvBzB,EAAkBjL,KAAK,SAAAkL,GAE1BA,EAAK8B,YAAYN,GAEjB,IAAIL,EAASK,EAAO5W,cAIpB,OApHZ,SAA2B0Q,EAAQjT,GAC/B8P,IAAOiD,GAAGnJ,IAAUQ,mBAAmBG,aAAevL,OAAQiU,EAAQjT,UAAU,SAAAgT,GAAsB,IAAnB9L,EAAmB8L,EAAnB9L,OAAQgM,EAAWF,EAAXE,KAEvF,GAAIhM,IAAWlH,EACX,MAAM,IAAIH,MAAJ,UAAqBG,EAArB,0BAAuDkH,GAGjE,IAAKgM,EAAKlW,KACN,MAAM,IAAI6C,MAAJ,qDAGV,IAAKqT,EAAKyD,YACN,MAAM,IAAI9W,MAAJ,4DAGV,IAAKiQ,IAAO4J,mBAAmBxG,EAAKlW,MAChC,MAAM,IAAI6C,MAAJ,oBAA+BqT,EAAKlW,KAApC,qDAGV,IAAK8S,IAAO4J,mBAAmBxG,EAAKlW,MAAMgD,OACtC,MAAM,IAAIH,MAAJ,iDAA4DqT,EAAKlW,MAG3E,GAAI8S,IAAO4J,mBAAmBxG,EAAKlW,MAAMgD,SAAWkH,EAChD,MAAM,IAAIrH,MAAJ,kBAA6BqH,EAA7B,8CAAmF4I,IAAO4J,mBAAmBxG,EAAKlW,MAAMgD,QAKlI,OAFAmY,EAA0BrI,IAAO4J,mBAAmBxG,EAAKlW,MAAMqC,IAAKW,EAAQkT,EAAKyD,cAG7EA,YADG,SACSzT,GAER,GAAKlE,SAAUA,OAAOiE,OAAtB,CAIA,IAAI0W,EAAa7J,IAAO4J,mBAAmBxG,EAAKlW,MAEhD,GAAK2c,EAIL,IACI7J,IAAOiJ,gBACH7F,KAAQhQ,EACRgE,OAAQyS,EAAW3Z,OACnBiT,OAAQ0G,EAAWta,MAEzB,MAAOE,GACL4N,IAAaW,OAAOvO,SAiE5Bqa,CAAkBd,EAAQ9Y,GAEnB,IAAImN,IAAa,SAACH,EAASc,GAE9BqL,EAAOU,OAAS7M,EAChBmM,EAAOW,QAAUhM,IAElBrB,KAAK,WAEJ,OAAO6I,YAAmBwD,EAAQlN,IAAOG,eAAlC,UAA6DlE,KAErE4E,KAAK,WAEJ,OAAOqM,QAKZhJ,IAAOmJ,QAAQjZ,IA1I1B8P,IAAOmJ,QAAUnJ,IAAOmJ,YACxBnJ,IAAO0J,aAAe1J,IAAO0J,iBAE7B1J,IAAOiK,kBAAoBjK,IAAOiK,mBAAqB,IAAI/H,IAC3DlC,IAAO4J,mBAAqB5J,IAAO4J,uBAyInC,IAAIM,EAAahb,OAAOib,KA6CjB,SAASC,EAAQ7a,EAA6BwI,GAEjD,IAAIsS,EAAarK,IAAOiK,kBAAkBxc,IAAI8B,GAE1C8a,IACAA,EAAWna,OAAS4H,YAAiBC,GACrCkQ,EAAqB1Y,IAItB,SAAS+a,IAAiB,QAAAC,EAAA,EAAAC,EACVnd,OAAOsO,KAAKqE,IAAO0J,cADT/X,EAAA,MAAA6Y,EAAA,EAAAA,EAAAxb,OAAAub,EAAA5Y,EAAA4Y,IACwB,CAAhD,IAAIra,OACDkB,EAAQ4O,IAAO0J,aAAaxZ,GAC5BkB,EAAMsB,YACNtB,EAAMsB,WAAW+X,YAAYrZ,GAGrC4O,IAAO0J,gBACP1J,IAAOmJ,WA7DXja,OAAOib,KAAO,SAA2BpS,EAAc7K,EAAewd,EAAkBC,GAEpF,IAAIza,EAAS6H,EAEb,GAAIA,GAAgD,IAAzCA,EAAI3H,QAAQ0J,IAAUwB,eAAsB,KAAAsP,EACjC7S,EAAIC,MAAM,KAA1B9H,EADiD0a,EAAA,GACzC7S,EADyC6S,EAAA,GAInD1a,IACAA,EAAS4H,YAAiB5H,IAG9B,IAAIX,EAAM2a,EAAWpd,KAAKP,KAAMwL,EAAK7K,EAAMwd,EAASC,GAEpD,IAAKpb,EACD,OAAOA,EAGPwI,GACAkQ,EAAqB1Y,GAnBiF,QAAAwX,EAAA,EAAAC,EAsBtF3Z,OAAOsO,KAAKqE,IAAO4J,oBAtBmEpY,EAAA,MAAAwV,EAAA,EAAAA,EAAAhY,OAAA+X,EAAAvV,EAAAuV,IAsB9C,CAAvD,IAAI8D,OACD5X,YAAe+M,IAAO4J,mBAAmBiB,GAAStb,aAC3CyQ,IAAO4J,mBAAmBiB,GAIzC,GAAI3d,GAAQqC,EAAK,CACb,IAAI8a,EAAarK,IAAOiK,kBAAkBxc,IAAI8B,IAC7ByQ,IAAO4J,mBAAmB1c,OAE3Cmd,EAAWnd,KAAOmd,EAAWnd,MAAQA,EACrCmd,EAAW9a,IAAM8a,EAAW9a,KAAOA,EACnC8a,EAAWna,OAASma,EAAWna,QAAUA,EAEzC8P,IAAOiK,kBAAkB7H,IAAI7S,EAAK8a,GAClCrK,IAAO4J,mBAAmB1c,GAAQmd,EAGtC,OAAO9a,63BC7LJ,SAASub,EAAsBC,EAAsCC,GACxE,IAAKlP,IAAOC,0BAE4C,IAAhDtF,YAAgBsU,EAAcC,GAC9B,MAAM,IAAIjb,MAAJ,iGCRlBtD,EAAAQ,EAAA4M,EAAA,0CAAAiR,ouBCKWG,KAGXA,EAAwBnR,IAAUoB,gBAAgBC,cAAgB,SAAC5L,EAA6B2b,EAA4Bhb,GAGpH,IACIib,EAAQ,GAAgBL,sBAAsB5b,OAAQK,GACxD,MAAOE,GACL,QAMJ4H,MAAMC,QAAQpH,GACJA,EACe,iBAAXA,GACFA,IAEA4J,IAAUrL,WAGRmN,IAAI,SAAAwP,GAElB,GAA6C,IAAzCA,EAAIhb,QAAQ0J,IAAUwB,eAAsB,CAE5C,GAAIpM,OAAOC,SAASC,WAAa0K,IAAUyB,cACvC,OAAOzB,IAAUrL,SAGrB,IAAK6B,YAAqBf,GACtB,MAAM,IAAIQ,MAAJ,8CAAyDqb,EAAzD,yCAIV,OAAOtb,YAAgBP,GAG3B,OAA6C,IAAzC6b,EAAIhb,QAAQ0J,IAAUyB,eACfzB,IAAUrL,SAGd2c,IAGHC,QAAQ,SAAAD,GACZ,OAAO7b,EAAI+b,YAAYJ,EAAmBE,MAIT,IAAAG,EAEwBJ,EAAQ,GAA/DxC,EAF+B4C,EAE/B5C,kBAAmBtB,EAFYkE,EAEZlE,sBAAuBM,EAFX4D,EAEW5D,SAEhDsD,EAAwBnR,IAAUoB,gBAAgBE,QAAU,SAAC7L,EAA6B2b,EAA4Bhb,GAElH,GAAKmX,KAA4BM,IAAjC,CAIA,GAAIlX,YAAalB,GACb,MAAM,IAAIQ,MAAJ,oEAGV,IAAqC,IAAjC0G,YAAgBvH,OAAQK,GACxB,MAAM,IAAIQ,MAAJ,wFAGV,OAAO4Y,EAAkBpZ,EAAK2b,EAAmBhb,KAMrD+a,EAAwBnR,IAAUoB,gBAAgBG,QAAU,SAAC9L,EAA6B2b,GAEtF,GAAKpI,cAAL,CAIA,IAAKrS,YAAalB,GACd,MAAM,IAAIQ,MAAJ,yEAGV,IAAqC,IAAjC0G,YAAgBvH,OAAQK,GACxB,MAAM,IAAIQ,MAAJ,wFAIV,IAAIyb,EAAgBjc,EAAIuK,IAAUc,aAAaC,WAE/C,IAAK2Q,EACD,MAAM,IAAIzb,MAAJ,mDAGV,OAAOyb,EAAcvC,gBACjB9F,OAAQjU,OACRkI,OAAQnH,cACRmT,KAAQ8H,8KC/Eb,SAASrE,EAAYtX,EAA6B6D,EAAkBlD,GACvE,OAAOmN,IAAYA,IAAK,WAAM,IAAAoO,EAsB1B,GApBArY,EAnBR,SAAsB7D,EAA6B6D,GAAyC,IAAvBsX,EAAuB3b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAEpFuU,EAAOvC,cACPyC,EAAOnB,cACPqJ,EAAezb,YAAUf,QAE7B,OAAAyc,KACOvY,EACAsX,GACHgB,eACApI,GAAYlQ,EAAQkQ,IAAMA,EAC1BsI,WAAYpI,IAQFqI,CAAatc,EAAK6D,GACxBgQ,KAAMW,YAAiBxU,EAAKW,EAAQkD,EAAQgQ,MAC5ClT,WAkBAX,IAAQL,SAAW4M,IAAOS,kBAC1B,MAAM,IAAIxM,MAAM,qCAGpB,GAAIkD,YAAe1D,GACf,MAAM,IAAIQ,MAAM,oBAGpB,IAAI+b,KAEAZ,EAAoB5I,cAAaA,MAC/BxI,IAAUc,aAAaC,WAAazH,EADlBqY,GAErB,KAAM,GAET,OAAOpO,IAAazB,IAAIvO,OAAOsO,KAAKsP,GAA0B,SAAAc,GAE1D,OAAO1O,IAAYA,IAAK,WAEpB,IAAKvB,IAAOO,6BAA6B0P,GACrC,MAAM,IAAIhc,MAAJ,wBAAmCgc,GAG7C,OAAOd,EAAwBc,GAAcxc,EAAK2b,EAAmBhb,KAEtEyM,KAAK,WAEJ,OADAmP,EAASjb,KAASkb,EAAlB,cACO,GACR,SAAAtc,GAEC,OADAqc,EAASjb,KAASkb,EAAlB,KAAqC5L,YAAe1Q,GAApD,OACO,MAGZkN,KAAK,SAAAzH,GAEJ,IAAI8W,EAAU9W,EAAQwC,KAAKhC,SACvBuW,EAAa7Y,EAAQoQ,KAArB,IAA+BpQ,EAAQlG,KAAvC,KAAiD8e,EAAU,UAAY,SAAvE,UAA0FF,EAASjU,KAAK,UAAxG,KAEJ,IAAKmU,EACD,MAAM,IAAIjc,MAAMkc,kBCzEhCjM,IAAOkM,kBAAoBlM,IAAOkM,sBAClClM,IAAOmM,iBAAoBnM,IAAOmM,qBAClCnM,IAAOoM,gBAAoBpM,IAAOoM,iBAAqB,IAAK,aAE5DpM,IAAOqM,yBAA2BrM,IAAOqM,6BAEzC,MAAMC,EAAmB,mBAsBlB,SAASC,EAAoBhN,GAChC,OAAOS,IAAOkM,kBAAkB3M,GAG7B,SAASiN,EAAuBjN,UAC5BS,IAAOkM,kBAAkB3M,GAO7B,SAASkN,EAA0BlN,GACtC,OAAO7J,QAAQsK,IAAOqM,yBAAyB9M,IAG5C,SAASmN,EAATxJ,GAAyJ,IAA3HhW,EAA2HgW,EAA3HhW,KAAMqC,EAAqH2T,EAArH3T,IAAKW,EAAgHgT,EAAhHhT,OAU5C,GARIX,IAAQuK,IAAUrL,WAClBc,EAAM,MAGNW,IAAW4J,IAAUrL,WACrByB,EAAS,OAGRhD,EACD,MAAM,IAAI6C,MAAJ,yCAGV,IAAI4c,EAAgB3M,IAAOmM,iBAAiBjf,GAE5C,GAAKyf,EAhBuJ,QAAA5F,EAAA,EAAAzB,GAoBjI/V,EAAKyQ,IAAOoM,iBApBqH5a,EAAA,MAAA8T,EAAA,EAAAA,EAAAtW,OAAA+X,EAAAvV,EAAAuV,IAoBlG,CAArD,IAAI6F,OAEDC,EAAeD,GAAgBD,EAAclf,IAAImf,GAErD,GAAKC,EAAL,CAIA,GAAI3c,GAA4B,iBAAXA,EAAqB,CACtC,GAAI2c,EAAa3c,GACb,OAAO2c,EAAa3c,GAGxB,GAAI2c,EAAaP,GAAmB,QAAA/B,EAAA,EAAAuC,EACAD,EAAaP,GADb3a,EAAA,MAAAmb,EAAA,EAAAA,EAAA9d,OAAAub,EAAA5Y,EAAA4Y,IACgC,KAAAwC,EAAAD,EAAAvC,GAArDjG,EAAqDyI,EAArDzI,MAAO0I,EAA8CD,EAA9CC,SACd,GAAI9V,YAAYoN,EAAOpU,GACnB,OAAO8c,GAMvB,GAAIH,EAAa/S,IAAUrL,UACvB,OAAOoe,EAAa/S,IAAUrL,oLC5F/Bwe,UAELnT,IAAUC,kBAAkBG,KAFvB,SAE6BiJ,EAAgC/L,EAAiBhE,GAEjF,IAAIqZ,EAA0BrZ,EAAQmM,MAAtC,CAIA,IAAImL,EAAU6B,EAAoBnZ,EAAQmM,MAE1C,IAAKmL,EACD,MAAM,IAAI3a,MAAJ,sDAAiEqD,EAAQlG,KAAzE,SAAwFkK,EAAxF,OAAuGlI,OAAOC,SAASC,SAAvH,KAAsIF,OAAOC,SAASa,KAASd,OAAOC,SAAS+d,UAGzL,IAAKhW,YAAYwT,EAAQxa,OAAQkH,GAC7B,MAAM,IAAIrH,MAAJ,cAAyBqH,EAAzB,0BAA2DsT,EAAQxa,OAAO9B,YAGpFsc,EAAQyC,KAAM,IAlBXC,EAqBLtT,IAAUC,kBAAkBC,SArBvB,SAqBiCmJ,EAAgC/L,EAAiBhE,GAErF,IAAIsX,EAAUgC,GAAqBxf,KAAMkG,EAAQlG,KAAMqC,IAAK4T,EAAQjT,OAAQkH,IAE5E,SAASiW,EAAQjK,GAEb,OAAIhQ,EAAQka,eAAiBra,YAAekQ,GACjC9F,IAAaH,UAGjB2J,EAAY1D,EAAZoK,GACHC,OAAQpa,EAAQqa,eAChBlO,KAAQnM,EAAQmM,KAChBrS,KAAQkG,EAAQlG,MACbkW,GACJhM,GAGP,OAAOiG,IAAa8B,KAEhBkO,GACI7J,KAAM1J,IAAUC,kBAAkBG,MAGtCmD,IAAYA,IAAK,WAEb,IAAKqN,EACD,MAAM,IAAI3a,MAAJ,sCAAiDqD,EAAQlG,KAAzD,SAAwEkK,EAAxE,OAAuFlI,OAAOC,SAASC,SAAvG,KAAsHF,OAAOC,SAASa,KAASd,OAAOC,SAAS+d,UAGzK,IAAKhW,YAAYwT,EAAQxa,OAAQkH,GAC7B,MAAM,IAAIrH,MAAJ,kBAA6BqH,EAA7B,0BAA+DsT,EAAQxa,OAAO9B,YAGxF,IAAIgV,EAAOhQ,EAAQgQ,KAEnB,OAAOsH,EAAQpN,SAAU6F,SAAQ/L,SAAQgM,WAE1CzG,KAAK,SAAAyG,GAEJ,OAAOiK,GACH7J,KAAM1J,IAAUC,kBAAkBE,SAClCkT,IAAMrT,IAAUK,iBAAiBC,QACjCgJ,UAGL,SAAA3T,GAEC,IAAIoO,EAAQsC,YAAe1Q,GAAKwR,QAAQ,WAAY,IAEhDiD,EAAOzU,EAAIyU,KAEf,OAAOmJ,GACH7J,KAAM1J,IAAUC,kBAAkBE,SAClCkT,IAAMrT,IAAUK,iBAAiBE,MACjCwD,QACAqG,aAITvH,KAAK8D,KA1CD,MA0Ca,SAAAhR,GAEhB,GAAIib,GAAWA,EAAQgD,YACnB,OAAOhD,EAAQgD,YAAYje,GAE3B,MAAMA,KAtFX2d,EA2FLtT,IAAUC,kBAAkBE,UA3FvB,SA2FkCkJ,EAAgC/L,EAAiBhE,GAEtF,IAAIqZ,EAA0BrZ,EAAQmM,MAAtC,CAIA,IAAImL,EAAU6B,EAAoBnZ,EAAQmM,MAE1C,IAAKmL,EACD,MAAM,IAAI3a,MAAJ,2DAAsEqD,EAAQlG,KAA9E,SAA6FkK,EAA7F,OAA4GlI,OAAOC,SAASC,SAA5H,KAA2IF,OAAOC,SAASa,KAASd,OAAOC,SAAS+d,UAG9L,IAAKhW,YAAYwT,EAAQxa,OAAQkH,GAC7B,MAAM,IAAIrH,MAAJ,mBAA8BqH,EAA9B,0BAAgEQ,YAAuB8S,EAAQxa,SAKzG,GAFAsc,EAAuBpZ,EAAQmM,MAE3BnM,EAAQ+Z,MAAQrT,IAAUK,iBAAiBE,MAAO,CAClD,IAAI5K,EAAM,IAAIM,MAAMqD,EAAQyK,OAK5B,OAJIzK,EAAQ8Q,OAERzU,EAAIyU,KAAO9Q,EAAQ8Q,MAEhBwG,EAAQ2C,QAAQ5d,EAAK,MACzB,GAAI2D,EAAQ+Z,MAAQrT,IAAUK,iBAAiBC,QAAS,CAC3D,IAAIgJ,EAAOhQ,EAAQgQ,MAAQhQ,EAAQua,SAEnC,OAAOjD,EAAQ2C,QAAQ,MAAQlK,SAAQ/L,SAAQgM,YAvHhDgK,+MC4CJ,SAASnE,EAAetI,GAE3B,GAAKzR,SAAUA,OAAOiE,OAAtB,CAIA,IACI,IAAKwN,EAAMwC,OACP,OAEN,MAAO1T,GACL,OAX6C,IAc3C0T,EAAyBxC,EAAzBwC,OAAQ/L,EAAiBuJ,EAAjBvJ,OAEVhE,EApDR,SAAsBA,GAElB,IAAIwa,SAEJ,IACIA,EAAgBhL,YAAUxP,GAC5B,MAAO3D,GACL,OAGJ,GAAKme,GAIwB,iBAAzB,IAAOA,EAAP,YAAAnM,EAAOmM,KAAgD,OAAlBA,IAIzCA,EAAgBA,EAAc9T,IAAUc,aAAaC,aAEN,iBAAzB,IAAO+S,EAAP,YAAAnM,EAAOmM,KAAgD,OAAlBA,GAItDA,EAAcpK,MAAsC,iBAAvBoK,EAAcpK,MAI3CyJ,EAAsBW,EAAcpK,MAIzC,OAAOoK,EAoBOC,CAFiBlN,EAATyC,MAItB,GAAKhQ,EAAL,CAIA,IAAKA,EAAQsY,cAAgD,iBAAzBtY,EAAQsY,aACxC,MAAM,IAAI3b,MAAJ,yCAGoD,IAA1DqD,EAAQsY,aAAatb,QAAQ0J,IAAUwB,gBAAkF,IAA1DlI,EAAQsY,aAAatb,QAAQ0J,IAAUyB,iBACtGnE,EAAShE,EAAQsY,eAGgC,IAAjD1L,IAAO8N,iBAAiB1d,QAAQgD,EAAQkQ,MACxCtD,IAAO8N,iBAAiBjd,KAAKuC,EAAQkQ,IAoBrCrQ,YAAekQ,KAAY/P,EAAQka,gBAInCla,EAAQgQ,OACRhQ,EAAQgQ,KAAO8B,YAAmB/B,EAAQ/L,EAAQhE,EAAQgQ,OAG9D6J,EAAsB7Z,EAAQoQ,MAAML,EAAQ/L,EAAQhE,OAGjD,SAAS2a,EAAgBpN,GAE5B,IACIF,YAAKE,EAAMwC,QACb,MAAO1T,GACL,OAIJ,IAAIue,GACA7K,OAAQxC,EAAMwC,QAAUxC,EAAMsN,cAC9B7W,OAAQuJ,EAAMvJ,QAAWuJ,EAAMuN,eAAiBvN,EAAMuN,cAAc9W,OACpEgM,KAAQzC,EAAMyC,MAId,IACI+H,EAAQ,GAAgBL,sBAAsBkD,EAAa7K,OAAQjU,QACrE,MAAOO,GACL,OAIRwZ,EAAe+E,GC7GZ,SAASG,EAAQzD,GAqMpB,OAnMWrN,IAAYA,IAAK,WAExB,IAAKqN,EAAQxd,KACT,MAAM,IAAI6C,MAAM,yBAGpB,IAAI7C,EAAOwd,EAAQxd,KACf8d,SACA9a,SAEJ,GAA8B,iBAAnBwa,EAAQxb,OAAqB,CACpC,IAAIkf,EAAK1U,SAAS2U,eAAe3D,EAAQxb,QAEzC,IAAKkf,EACD,MAAM,IAAIre,MAAJ,2BAAsC1C,OAAOS,UAAUM,SAAStB,KAAK4d,EAAQxb,QAA7E,6BAGV,GAAiC,WAA7Bkf,EAAGE,QAAQC,cACX,MAAM,IAAIxe,MAAJ,2BAAsC1C,OAAOS,UAAUM,SAAStB,KAAK4d,EAAQxb,QAA7E,oBAIV,IAAKkf,EAAG3b,cACJ,MAAM,IAAI1C,MAAM,wFAIpBib,EAAeoD,EAAG3b,mBAEf,GAAIiY,EAAQxb,kBAAkBsf,kBAAmB,CAEpD,GAA6C,WAAzC9D,EAAQxb,OAAOof,QAAQC,cACvB,MAAM,IAAIxe,MAAJ,2BAAsC1C,OAAOS,UAAUM,SAAStB,KAAK4d,EAAQxb,QAA7E,oBAGV,GAAIwb,EAAQxb,SAAWwb,EAAQxb,OAAOuD,cAClC,MAAM,IAAI1C,MAAM,wFAGhB2a,EAAQxb,QAAUwb,EAAQxb,OAAOuD,gBAEjCuY,EAAeN,EAAQxb,OAAOuD,oBAGlCuY,EAAeN,EAAQxb,OAG3B,IAAK8b,EACD,MAAM,IAAIjb,MAAM,gFAGpB,IAAMR,EAAMyb,EAEZ9a,EAASwa,EAAQxa,QAAU4J,IAAUrL,SAErC,IAAI8Q,EAAWmL,EAAQxd,KAAnB,IAA6B6T,cAEjC,GAAI9N,YAAe1D,GACf,MAAM,IAAIQ,MAAM,2BAGpB,IAAI0e,GAAY,EAEZC,EAAkB1O,IAAO0O,gBAAgBjhB,IAAI8B,GAE5Cmf,IACDA,KACA1O,IAAO0O,gBAAgBtM,IAAI7S,EAAKmf,IAGpC,IAAIC,EAAiBtR,IAAYA,IAAK,WAElC,GAAIjI,YAAWlG,OAAQK,GACnB,OAAOiW,YAAmBjW,EAAKmb,EAAQnS,SAAWuD,IAAOI,wBAG9DS,KAAK,WAAqB,IAAlBvF,GAAkBrI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OAAlBqI,OAEP,GAAIlJ,YAAQgC,KAAYkH,EACpB,OAAOgO,YAAS7V,KAGrBoN,KAAK,WAAqB,IAAlBvF,GAAkBrI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OAAlBqI,OAEP,GAAIlJ,YAAQgC,GAAS,CACjB,IAAKgH,YAAYhH,EAAQkH,GACrB,MAAM,IAAIrH,MAAJ,wBAAmCqH,EAAnC,0BAAqElH,EAAO9B,YAGtF8B,EAASkH,EAGb,GAAsB,iBAAXlH,IAAwBmH,MAAMC,QAAQpH,GAC7C,MAAM,IAAIgP,UAAJ,2CAGV,IAAM0P,EAAe1e,EAErB,OAAO,IAAImN,IAAa,SAACH,EAASc,GAE9B,IAAI6Q,SAgCJ,GA9BKnE,EAAQ4C,eH/FtB,SAA6B/N,EAAeyN,GAC/ChN,IAAOkM,kBAAkB3M,GAAQyN,EGiHjB8B,CAAoBvP,EAlBpBsP,GACI3hB,OACAgC,OAAQK,EACRW,OAAQ0e,EACRvB,QAJe,SAIP5d,EAAKmB,GACJnB,IACDgf,GAAY,EACZC,EAAgBhb,OAAOgb,EAAgBte,QAAQue,EAAgB,KAG/Dlf,EACAuO,EAAOvO,GAEPyN,EAAQtM,MAQxBiW,EAAYtX,GACRiU,KAAe1J,IAAUC,kBAAkBC,QAC3CuF,OACArS,OACAkW,KAAesH,EAAQtH,KACvBkK,cAAe5C,EAAQ4C,eACxBsB,GANH,MAMuB5Q,GAEnB0M,EAAQ4C,cACR,OAAOpQ,IAGX,IAAI6R,EAAajT,IAAOK,YACpB6S,EAAatE,EAAQnS,SAAWuD,IAAOM,YAEvC6S,EAAY,IA0ChBvW,WAxCY,SAARwW,IAEA,IAAIT,EAAJ,CAIA,GAAIxb,YAAe1D,GAEf,OAAKsf,EAAiB1B,IAIfnP,EAAO,IAAIjO,MAAJ,qBAAgC7C,EAAhC,qBAHH8Q,EAAO,IAAIjO,MAAJ,qBAAgC7C,EAAhC,gBAatB,GAPA6hB,EAAa5N,KAAKgO,IAAIJ,EAAaE,EAAW,IAC1B,IAAhBD,IACAA,EAAa7N,KAAKgO,IAAIH,EAAaC,EAAW,IAGrCJ,EAAiB1B,IAElB,CAER,IAAoB,IAAhB6B,EACA,OAGJC,EAAY9N,KAAKiO,IAAIJ,EAAY,SAE9B,IAAmB,IAAfD,EACP,OAAO/Q,EAAO,IAAIjO,MAAJ,0BAAqC7C,EAArC,OAAkD+C,cAAlD,OAAsE6L,IAAOK,YAA7E,OAEX,GAAmB,IAAf6S,EACP,OAAOhR,EAAO,IAAIjO,MAAJ,+BAA0C7C,EAA1C,OAAuD+C,cAAvD,QAA2Eya,EAAQnS,SAAWuD,IAAOM,aAArG,OAGlB1D,WAAWwW,EAAOD,KAGJA,OAW1B,OAPAN,QAAqB,YHtKtB,SAAqCpP,GACxCS,IAAOqM,yBAAyB9M,IAAQ,EGsKhC8P,CAA4B9P,GAC5BiN,EAAuBjN,KAG3BmP,EAAgB7d,KAAK8d,GAEdA,IAMR,SAASjK,EAAKxV,EAA6BhC,EAAekW,EAAgBsH,GAO7E,OALAA,EAAUA,OACFxb,OAASA,EACjBwb,EAAQxd,KAAOA,EACfwd,EAAQtH,KAAOA,EAER+K,EAAQzD,GAGZ,SAAS4E,EAAapiB,EAAekW,EAAgBsH,GAExD,IAAInb,EAAMyF,cAEV,OAAKzF,EAIEmV,EAAKnV,EAAKrC,EAAMkW,EAAMsH,GAHlB,IAAIrN,IAAa,SAACH,EAASc,GAAV,OAAqBA,EAAO,IAAIjO,MAAM,oCAM/D,SAASwf,IAA+G,IAAxG7E,EAAwG3b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAE3H,IAAK2b,EAAQxb,OACT,MAAM,IAAIa,MAAJ,2BAGV,IAAMR,EAAMmb,EAAQxb,OAEpB,OACIwV,KADG,SACExX,EAAekW,GAChB,OAAOsB,EAAKnV,EAAKrC,EAAMkW,EAAMsH,KD3PzC1K,IAAO8N,iBAAmB9N,IAAO8N,qBAwIjC9N,IAAOiJ,eAAiBA,ECvIxBjJ,IAAO0O,gBAAkB1O,IAAO0O,iBAAmB,IAAIxM,IA+PvDlC,IAAO0E,KAAOA,kNCnPP,SAAS8K,EAAO9E,GAEnB,IAAKA,EAAQxd,KACT,MAAM,IAAI6C,MAAM,yBAGpB,IAAK2a,EAAQpN,QACT,MAAM,IAAIvN,MAAM,4BAGpB,IAAM7C,EAAOwd,EAAQxd,KACfqC,EAAMmb,EAAQxb,OACdgB,EAASwa,EAAQxa,OAEnBuf,GACAnS,QAAaoN,EAAQpN,QACrBoQ,YAAahD,EAAQgF,cAAiB,SAAAjgB,GAClC,MAAMA,GAEVP,OAAQK,EACRW,OAAQA,GAAU4J,IAAUrL,SAC5BvB,QAGAyiB,EJ6DD,SAASC,EAATC,EAAkJ7C,GAA0D,IAA9K9f,EAA8K2iB,EAA9K3iB,KAAMqC,EAAwKsgB,EAAxKtgB,IAAKW,EAAmK2f,EAAnK3f,OAE5C,IAAKhD,GAAwB,iBAATA,EAChB,MAAM,IAAI6C,MAAJ,yCAGV,GAAIsH,MAAMC,QAAQ/H,GAAM,KACpB,IAAIugB,KADgBC,EAAA,EAAAC,EAGHzgB,EAHG0C,EAAA,MAAA+d,EAAA,EAAAA,EAAAhhB,OAAA+gB,EAAA9d,EAAA8d,IAGE,CAAjB,IAAI5hB,OACL2hB,EAAoBjf,KAAK+e,GAAqB1iB,OAAMgD,SAAQX,IAAKpB,GAAQ6e,IAG7E,OACIrU,OADG,WACM,QAAAsX,EAAA,EAAA9b,EAAA,MACsB2b,EADtB,EACsBA,EADtB9gB,OAAAihB,EAAA9b,EAAA8b,IACsBH,EAAlBG,GACUtX,WAM/B,GAAItB,MAAMC,QAAQpH,GAAS,KACvB,IAAI4f,KADmBI,EAAA,EAAAC,EAGNjgB,EAHMqE,EAAA,MAAA4b,EAAA,EAAAA,EAAAnhB,OAAAkhB,EAAA3b,EAAA2b,IAGE,CAApB,IAAI/hB,OACL2hB,EAAoBjf,KAAK+e,GAAqB1iB,OAAMqC,MAAKW,OAAQ/B,GAAQ6e,IAG7E,OACIrU,OADG,WACM,QAAAyX,EAAA,EAAAtb,EAAA,MACsBgb,EADtB,EACsBA,EADtB9gB,OAAAohB,EAAAtb,EAAAsb,IACsBN,EAAlBM,GACUzX,WAM/B,IAAI0X,EAAmB3D,GAAqBxf,OAAMqC,MAAKW,WAQvD,GANKX,GAAOA,IAAQuK,IAAUrL,WAC1Bc,EAAMyQ,IAAOoM,iBAGjBlc,EAASA,GAAU4J,IAAUrL,SAEzB4hB,EACA,MAAI9gB,GAAOW,EACD,IAAIH,MAAJ,uCAAkD7C,EAAlD,cAAsEgD,EAAO9B,WAA7E,SAAiGmB,IAAQyQ,IAAOoM,gBAAkB,WAAa,aAA/I,WACC7c,EACD,IAAIQ,MAAJ,uCAAkD7C,EAAlD,SAAgEqC,IAAQyQ,IAAOoM,gBAAkB,WAAa,aAA9G,WACClc,EACD,IAAIH,MAAJ,uCAAkD7C,EAAlD,cAAsEgD,EAAO9B,YAE7E,IAAI2B,MAAJ,uCAAkD7C,GAIhE,IAAIif,EAAmBnM,IAAOmM,iBAE1BQ,EAAgBR,EAAiBjf,GAEhCyf,IACDA,EAAgB,IAAIzK,IACpBiK,EAAiBjf,GAAQyf,GAG7B,IAAIE,EAAgBF,EAAclf,IAAI8B,GAEjCsd,IACDA,KACAF,EAAcvK,IAAI7S,EAAKsd,IAG3B,IAAIyD,EAAYpgB,EAAO9B,WAEnBmiB,EAAiB1D,EAAaP,GAC9BkE,SAiBJ,OAfItiB,YAAQgC,IAEHqgB,IACDA,KACA1D,EAAaP,GAAoBiE,GAGrCC,GAAkBlM,MAAOpU,EAAQ8c,YAEjCuD,EAAe1f,KAAK2f,IAGpB3D,EAAayD,GAAatD,GAI1BrU,OADG,WAEMkU,WAIEA,EAAayD,GAEhB/gB,GAA4C,IAArClC,OAAOsO,KAAKkR,GAAc7d,QACjC2d,SAAqBpd,GAGrBihB,GACAD,EAAe7c,OAAO6c,EAAengB,QAAQogB,EAAe,OIxKlDZ,EAAqB1iB,OAAMqC,MAAKW,UAAUuf,GAEhE,GAAI/E,EAAQnK,KAAM,CACd,IAAIjD,EAAUmS,EAAgBnS,QAC9BmS,EAAgBnS,QAAUmT,YAAa,WAEnC,OADAd,EAAgBhX,SACT2E,EAAQuC,MAAMtT,KAAMwC,aAInC,GAAI0gB,EAAgBvgB,QAAUwb,EAAQgG,aAClC,IAAI5I,EAAWhG,YAAa,WACpBvS,GAAsB,iBAAf,IAAOA,EAAP,YAAAohB,EAAOphB,KAAoB0D,YAAe1D,KACjDuY,EAASnP,SACT8W,EAAgB/B,YAAY,IAAI3d,MAAM,2CAE3C,IAGP,OACI4I,OADG,WAECgX,EAAgBhX,WAKrB,SAASsK,EAAG/V,EAAewd,EAA2CpN,GAYzE,MAVuB,mBAAZoN,IACPpN,EAAUoN,EACVA,OAGJA,EAAUA,OAEFxd,KAAOA,EACfwd,EAAQpN,QAAUA,GAAWoN,EAAQpN,QAE9BkS,EAAO9E,GAGX,SAASnK,EAAKrT,GAA6J,IAA9Iwd,EAA8I3b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAA3FuO,EAA2FvO,UAAA,GAEvJ,mBAAZ2b,IACPpN,EAAUoN,EACVA,MAGJA,EAAUA,MACVpN,EAAUA,GAAWoN,EAAQpN,QAC7B,IAAIoS,EAAehF,EAAQgF,aAEvBzS,EAAU,IAAII,IAAa,SAACH,EAASc,IAErC0M,EAAUA,OAEFxd,KAAOA,EACfwd,EAAQnK,MAAO,EAEfmK,EAAQpN,QAAU,SAACqD,GAEf,GADAzD,EAAQyD,GACJrD,EACA,OAAOA,EAAQqD,IAIvB+J,EAAQgF,aAAe,SAACjgB,GAEpB,GADAuO,EAAOvO,GACHigB,EACA,OAAOA,EAAajgB,MAK5BmhB,EAAepB,EAAO9E,GAG1B,OAFAzN,EAAQtE,OAASiY,EAAajY,OAEvBsE,EAGJ,SAAS+P,IAAwH,IAA/GtC,EAA+G3b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAEpI,OACIkU,GADG,SACA/V,EAAeoQ,GACd,OAAO2F,EAAG/V,EAAMwd,EAASpN,KC5H9B,SAASuT,WACL3hB,OAAO4K,IAAUc,aAAaC,WACrC3L,OAAO2R,oBAAoB,UAAWkN,GD+H1C/N,IAAOiD,GAAKA,EEhIL,IAAIzT,EAASwF,cCFb,SAAS8b,EAAcvhB,GAQ1B,IAAImf,EAAkB1O,IAAO0O,gBAAgBjhB,IAAI8B,GAEjD,GAAImf,EAAiB,QAAA3H,EAAA,EAAAvV,EAAA,MACGkd,EADH,EACGA,EADH1f,OAAA+X,EAAAvV,EAAAuV,IACG2H,EAAX3H,GACG/I,OAAO,IAAIjO,MAAJ,yCAInBiQ,IAAOiK,mBACPjK,IAAOiK,kBAAP,OAAgC1a,GAGhCyQ,IAAOkI,eACPlI,IAAOkI,cAAP,OAA4B3Y,GAGhCyQ,IAAO0O,gBAAP,OAA8Bnf,GAC9ByQ,IAAO+C,QAAP,OAAsBxT,GACtByQ,IAAOuF,cAAP,OAA4BhW,GCtBzB,IAAIyZ,EAA+CmC,EAAQ,GAE3D,SAAS4F,IACP/Q,IAAOgR,cNkIZtQ,YAAiBxR,OAAQ,UAAW6e,GM9H5B5C,EAAQ,GAAYpC,qBAGxB1D,cACArC,aAAmBC,KAAIyB,UAG3B1E,IAAOgR,aAAc,EAGzBD,qmBCrBeE,0CCJf5jB,OAAAC,eAAAuM,EAAA,cAAAoE,OAAA,QAAAiT,EAAAzkB,EAAA,GAAAA,EAAAQ,EAAA4M,EAAA,+BAAAqX,EAAA,aAAAzkB,EAAAQ,EAAA4M,EAAA,4BAAAqX,EAAA,UAAAzkB,EAAAQ,EAAA4M,EAAA,6BAAAqX,EAAA,WAAAzkB,EAAAQ,EAAA4M,EAAA,gCAAAqX,EAAA,cAAAzkB,EAAAQ,EAAA4M,EAAA,0CAAAqX,EAAA,wBAAAzkB,EAAAQ,EAAA4M,EAAA,8BAAAqX,EAAA,YAAAzkB,EAAAQ,EAAA4M,EAAA,sCAAAqX,EAAA,oBAAAzkB,EAAAQ,EAAA4M,EAAA,yCAAAqX,EAAA,uBAAAzkB,EAAAQ,EAAA4M,EAAA,uCAAAqX,EAAA,qBAAAzkB,EAAAQ,EAAA4M,EAAA,mCAAAqX,EAAA","file":"post-robot.ie.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 13fa7cf816af74cd32df","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/util.js","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/constants.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/utils.js","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/index.js","/* @flow */\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\nexport type CrossDomainLocationType = {|\n\n|};\n\nexport type CrossDomainWindowType = {|\n    location : string | CrossDomainLocationType,\n    self : CrossDomainWindowType,\n    closed : boolean,\n    open : (string, string, string) => CrossDomainWindowType,\n    close : () => void,\n    focus : () => void,\n    top : CrossDomainWindowType,\n    frames : Array<CrossDomainWindowType>,\n    opener ? : CrossDomainWindowType,\n    parent : CrossDomainWindowType,\n    length : number,\n    postMessage : (string, string) => void\n|};\n\nexport type SameDomainWindowType = Object & {\n    location : string | Object,\n    self : CrossDomainWindowType,\n    closed : boolean,\n    open : (string, string, string) => CrossDomainWindowType,\n    close : () => void,\n    focus : () => void,\n    XMLHttpRequest : typeof XMLHttpRequest,\n    document : Document,\n    navigator : {\n        userAgent : string,\n        mockUserAgent? : string\n    }\n};\n\nexport type DomainMatcher = string | Array<string> | $ReadOnlyArray<string> | RegExp;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/types.js","/* @flow */\n\nexport let CONSTANTS = {\n\n    POST_MESSAGE_TYPE: {\n        REQUEST:  'postrobot_message_request',\n        RESPONSE: 'postrobot_message_response',\n        ACK:      'postrobot_message_ack'\n    },\n\n    POST_MESSAGE_ACK: {\n        SUCCESS: 'success',\n        ERROR:   'error'\n    },\n\n    POST_MESSAGE_NAMES: {\n        METHOD:      'postrobot_method',\n        HELLO:       'postrobot_ready',\n        OPEN_TUNNEL: 'postrobot_open_tunnel'\n    },\n\n    WINDOW_TYPES: {\n        FULLPAGE: 'fullpage',\n        POPUP:    'popup',\n        IFRAME:   'iframe'\n    },\n\n    WINDOW_PROPS: {\n        POSTROBOT: '__postRobot__'\n    },\n\n    SERIALIZATION_TYPES: {\n        METHOD:        'postrobot_method',\n        ERROR:         'postrobot_error',\n        PROMISE:       'postrobot_promise',\n        ZALGO_PROMISE: 'postrobot_zalgo_promise',\n        REGEX:         'regex'\n    },\n\n    SEND_STRATEGIES: {\n        POST_MESSAGE: 'postrobot_post_message',\n        BRIDGE:       'postrobot_bridge',\n        GLOBAL:       'postrobot_global'\n    },\n\n    MOCK_PROTOCOL: 'mock:',\n    FILE_PROTOCOL: 'file:',\n\n    BRIDGE_NAME_PREFIX: '__postrobot_bridge__',\n    POSTROBOT_PROXY:    '__postrobot_proxy__',\n\n    WILDCARD: '*'\n};\n\nexport const POST_MESSAGE_NAMES = {\n    METHOD:      'postrobot_method',\n    HELLO:       'postrobot_hello',\n    OPEN_TUNNEL: 'postrobot_open_tunnel'\n};\n\nexport let POST_MESSAGE_NAMES_LIST : Array<string> = Object.keys(POST_MESSAGE_NAMES)\n    .map(key => POST_MESSAGE_NAMES[key]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/constants.js","/* @flow */\n\nimport { CONSTANTS } from './constants';\n\nexport let CONFIG : Object = {\n\n    ALLOW_POSTMESSAGE_POPUP: ('__ALLOW_POSTMESSAGE_POPUP__' in window)\n        ? window.__ALLOW_POSTMESSAGE_POPUP__\n        : __POST_ROBOT__.__ALLOW_POSTMESSAGE_POPUP__,\n\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT: (window.navigator.userAgent.match(/MSIE/i) !== -1 && !__TEST__) ? 10000 : 2000,\n    RES_TIMEOUT: __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ CONSTANTS.SEND_STRATEGIES.POST_MESSAGE ]: true,\n        [ CONSTANTS.SEND_STRATEGIES.BRIDGE ]:       true,\n        [ CONSTANTS.SEND_STRATEGIES.GLOBAL ]:       true\n    },\n\n    ALLOW_SAME_ORIGIN: false\n};\n\nif (window.location.href.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n    CONFIG.ALLOW_POSTMESSAGE_POPUP = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/config.js","/* @flow */\n\nexport * from './config';\nexport * from './constants';\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/index.js","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/utils.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/exceptions.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/flush.js","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/promise.js","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/index.js","/* @flow */\n\nimport { CONSTANTS } from './conf';\n\nexport let global : Object = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] || {};\n\n// Backwards compatibility\n\nglobal.registerSelf = () => {\n    // pass\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { isPopup, isIframe, getUserAgent } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\n\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let once = <T>(method : Function) : ((...args : Array<any>) => T | void) => {\n    if (!method) {\n        return method;\n    }\n    let called = false;\n    return function onceWrapper() : T | void {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n};\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function addEventListener(obj : Object, event : string, handler : Function) : { cancel : () => void } {\n    if (obj.addEventListener) {\n        obj.addEventListener(event, handler);\n    } else {\n        obj.attachEvent(`on${ event }`, handler);\n    }\n\n    return {\n        cancel() {\n            if (obj.removeEventListener) {\n                obj.removeEventListener(event, handler);\n            } else {\n                obj.detachEvent(`on${ event }`, handler);\n            }\n        }\n    };\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    return 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n}\n\ntype MixedArrayType = Array<mixed>;\n\nexport function eachArray(item : MixedArrayType, callback : (item : mixed, key : number) => mixed) {\n    for (let i = 0; i < item.length; i++) {\n        callback(item[i], i);\n    }\n}\n\nexport function eachObject(item : Object, callback : (item : mixed, key : string) => mixed) {\n    for (let key in item) {\n        if (item.hasOwnProperty(key)) {\n            callback(item[key], key);\n        }\n    }\n}\n\nexport function each<T : Object | MixedArrayType>(item : T, callback : (item : mixed, key : number | string) => mixed) {\n    if (Array.isArray(item)) {\n        eachArray(item, callback);\n    } else if (typeof item === 'object' && item !== null) {\n        eachObject(item, callback);\n    }\n}\n\nexport function replaceObject<T : Object | MixedArrayType>(item : T, callback : (item : mixed, key : number | string) => mixed, depth : number = 1) : T {\n\n    if (depth >= 100) {\n        throw new Error(`Self-referential object passed, or object contained too many layers`);\n    }\n\n    let newobj;\n\n    if (typeof item === 'object' && item !== null && !Array.isArray(item)) {\n        newobj = {};\n    } else if (Array.isArray(item)) {\n        newobj = [];\n    } else {\n        throw new TypeError(`Invalid type: ${ typeof item }`);\n    }\n\n    each(item, (childItem, key) => {\n\n        let result = callback(childItem, key);\n\n        if (typeof result !== 'undefined') {\n            // $FlowFixMe\n            newobj[key] = result;\n        } else if (typeof childItem === 'object' && childItem !== null) {\n            // $FlowFixMe\n            newobj[key] = replaceObject(childItem, callback, depth + 1);\n        } else {\n            // $FlowFixMe\n            newobj[key] = childItem;\n        }\n    });\n\n    // $FlowFixMe\n    return newobj;\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n    let timeout;\n\n    function runInterval() {\n        timeout = setTimeout(runInterval, time);\n        method.call();\n    }\n\n    timeout = setTimeout(runInterval, time);\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        let result = weakmap.get(arg);\n\n        if (typeof result !== 'undefined') {\n            return result;\n        }\n\n        result = method.call(this, arg);\n\n        if (typeof result !== 'undefined') {\n            weakmap.set(arg, result);\n        }\n\n        return result;\n    };\n};\n\nexport function getWindowType() : string {\n    if (isPopup()) {\n        return CONSTANTS.WINDOW_TYPES.POPUP;\n    }\n    if (isIframe()) {\n        return CONSTANTS.WINDOW_TYPES.IFRAME;\n    }\n    return CONSTANTS.WINDOW_TYPES.FULLPAGE;\n}\n\nexport function jsonStringify<T : mixed>(obj : T, replacer : ?Function, indent : number | void) : string {\n\n    let objectToJSON;\n    let arrayToJSON;\n\n    try {\n        if (JSON.stringify({}) !== '{}') {\n            // $FlowFixMe\n            objectToJSON = Object.prototype.toJSON;\n            // $FlowFixMe\n            delete Object.prototype.toJSON;\n        }\n\n        if (JSON.stringify({}) !== '{}') {\n            throw new Error(`Can not correctly serialize JSON objects`);\n        }\n\n        if (JSON.stringify([]) !== '[]') {\n            // $FlowFixMe\n            arrayToJSON  = Array.prototype.toJSON;\n            // $FlowFixMe\n            delete Array.prototype.toJSON;\n        }\n\n        if (JSON.stringify([]) !== '[]') {\n            throw new Error(`Can not correctly serialize JSON objects`);\n        }\n\n    } catch (err) {\n        throw new Error(`Can not repair JSON.stringify: ${ err.message }`);\n    }\n\n    let result = JSON.stringify.call(this, obj, replacer, indent);\n\n    try {\n        if (objectToJSON) {\n            // $FlowFixMe\n            Object.prototype.toJSON = objectToJSON; // eslint-disable-line no-extend-native\n        }\n\n        if (arrayToJSON) {\n            // $FlowFixMe\n            Array.prototype.toJSON = arrayToJSON; // eslint-disable-line no-extend-native\n        }\n\n    } catch (err) {\n        throw new Error(`Can not repair JSON.stringify: ${ err.message }`);\n    }\n\n\n    return result;\n}\n\nexport function jsonParse(item : string) : mixed {\n    return JSON.parse(item);\n}\n            \nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n        \n    if (!CONFIG.ALLOW_POSTMESSAGE_POPUP) {\n        return true;\n    }\n        \n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/util.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\nimport { once, uniqueID, replaceObject, stringifyError, isRegex } from './util';\n\nglobal.methods = global.methods || new WeakMap();\n\nexport let listenForMethods = once(() => {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.METHOD, { origin: CONSTANTS.WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n\n        let methods = global.methods.get(source);\n\n        if (!methods) {\n            throw new Error(`Could not find any methods this window has privileges to call`);\n        }\n\n        let meth = methods[data.id];\n\n        if (!meth) {\n            throw new Error(`Could not find method with id: ${ data.id }`);\n        }\n\n        if (!matchDomain(meth.domain, origin)) {\n            throw new Error(`Method domain ${ meth.domain } does not match origin ${ origin }`);\n        }\n\n        return ZalgoPromise.try(() => {\n            return meth.method.apply({ source, origin, data }, data.args);\n\n        }).then(result => {\n\n            return {\n                result,\n                id:   data.id,\n                name: data.name\n            };\n        });\n    });\n});\n\nfunction isSerialized(item : mixed, type : string) : boolean {\n    return typeof item === 'object' && item !== null && item.__type__ === type;\n}\n\ntype SerializedMethod = {\n    __type__ : string,\n    __id__ : string,\n    __name__ : string\n};\n\nexport function serializeMethod(destination : CrossDomainWindowType, domain : string | Array<string>, method : Function, name : string) : SerializedMethod {\n\n    let id = uniqueID();\n\n    let methods = global.methods.get(destination);\n\n    if (!methods) {\n        methods = {};\n        global.methods.set(destination, methods);\n    }\n\n    methods[id] = { domain, method };\n\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.METHOD,\n        __id__:   id,\n        __name__: name\n    };\n}\n\ntype SerializedError = {\n    __type__ : string,\n    __message__ : string\n};\n\nfunction serializeError(err : mixed) : SerializedError {\n    return {\n        __type__:    CONSTANTS.SERIALIZATION_TYPES.ERROR,\n        __message__: stringifyError(err),\n        // $FlowFixMe\n        __code__:    err.code\n    };\n}\n\ntype SerializePromise = {\n    __type__ : string,\n    __then__ : SerializedMethod\n};\n\nfunction serializePromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\nfunction serializeZalgoPromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\ntype SerializedRegex = {\n    __type__ : string,\n    __source__ : string\n};\n\nfunction serializeRegex(regex : RegExp) : SerializedRegex {\n    return {\n        __type__:   CONSTANTS.SERIALIZATION_TYPES.REGEX,\n        __source__: regex.source\n    };\n}\n\nexport function serializeMethods(destination : CrossDomainWindowType, domain : string | Array<string>, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item, key) => {\n        if (typeof item === 'function') {\n            return serializeMethod(destination, domain, item, key.toString());\n        }\n\n        if (item instanceof Error) {\n            return serializeError(item);\n        }\n\n        if (window.Promise && item instanceof window.Promise) {\n            return serializePromise(destination, domain, item, key.toString());\n        }\n\n        if (ZalgoPromise.isPromise(item)) {\n            // $FlowFixMe\n            return serializeZalgoPromise(destination, domain, item, key.toString());\n        }\n\n        if (isRegex(item)) {\n            // $FlowFixMe\n            return serializeRegex(item);\n        }\n    }).obj;\n}\n\nexport function deserializeMethod(source : CrossDomainWindowType, origin : string, obj : Object) : Function {\n\n    function wrapper() : ZalgoPromise<mixed> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, CONSTANTS.POST_MESSAGE_NAMES.METHOD, {\n            id:   obj.__id__,\n            name: obj.__name__,\n            args\n\n        }, { domain: origin, timeout: -1 }).then(({ data }) => {\n            return data.result;\n        }, err => {\n            throw err;\n        });\n    }\n\n    wrapper.__name__ = obj.__name__;\n    wrapper.__xdomain__ = true;\n\n    wrapper.source = source;\n    wrapper.origin = origin;\n\n    return wrapper;\n}\n\nexport function deserializeError(source : CrossDomainWindowType, origin : string, obj : Object) : Error {\n    let err = new Error(obj.__message__);\n    if (obj.__code__) {\n        // $FlowFixMe\n        err.code = obj.__code__;\n    }\n    return err;\n}\n\nexport function deserializeZalgoPromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    return new ZalgoPromise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializePromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    if (!window.Promise) {\n        return deserializeZalgoPromise(source, origin, prom);\n    }\n\n    return new window.Promise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializeRegex(source : CrossDomainWindowType, origin : string, item : Object) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(item.__source__);\n}\n\nexport function deserializeMethods(source : CrossDomainWindowType, origin : string, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item) => {\n        if (typeof item !== 'object' || item === null) {\n            return;\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.METHOD)) {\n            return deserializeMethod(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ERROR)) {\n            return deserializeError(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.PROMISE)) {\n            return deserializePromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE)) {\n            return deserializeZalgoPromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.REGEX)) {\n            return deserializeRegex(source, origin, item);\n        }\n\n    }).obj;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/serialize.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\nimport { noop } from './util';\n\nglobal.readyPromises = global.readyPromises || new WeakMap();\n\nexport function onHello(handler : ({ source? : CrossDomainWindowType, origin? : string }) => void) {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.HELLO, { domain: CONSTANTS.WILDCARD }, ({ source, origin }) => {\n        return handler({ source, origin });\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ origin : string }> {\n    return global.send(win, CONSTANTS.POST_MESSAGE_NAMES.HELLO, {}, { domain: CONSTANTS.WILDCARD, timeout: -1 })\n        .then(({ origin }) => {\n            return { origin };\n        });\n}\n\nexport function initOnReady() {\n\n    onHello(({ source, origin }) => {\n        let promise = global.readyPromises.get(source) || new ZalgoPromise();\n        promise.resolve({ origin });\n        global.readyPromises.set(source, promise);\n    });\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function onChildWindowReady(win : mixed, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ origin : string }> {\n\n    let promise = global.readyPromises.get(win);\n\n    if (promise) {\n        return promise;\n    }\n\n    promise = new ZalgoPromise();\n    global.readyPromises.set(win, promise);\n\n    if (timeout !== -1) {\n        setTimeout(() => promise.reject(new Error(`${ name } did not load after ${ timeout }ms`)), timeout);\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ready.js","/* @flow */\n\nexport * from './util';\nexport * from './serialize';\nexport * from './ready';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/util.js","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/weakmap.js","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/native.js","/* @flow */\n\nexport { CrossDomainSafeWeakMap as WeakMap } from './weakmap';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/index.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../conf';\nimport { noop } from '../lib';\nimport { global } from '../global';\n\n/*\n    HERE BE DRAGONS\n\n    Warning: this file may look weird. Why save the tunnel window in an Object\n    by ID, then look it up later, rather than just using the reference from the closure scope?\n\n    The reason is, that ends up meaning the garbage collector can never get its hands\n    on a closed window, since our closure has continued access to it -- and post-robot\n    has no good way to know whether to clean up the function with the closure scope.\n\n    If you're editing this file, be sure to run significant memory / GC tests afterwards.\n*/\n\nglobal.tunnelWindows = global.tunnelWindows || {};\nglobal.tunnelWindowId = 0;\n\nfunction deleteTunnelWindow(id) {\n\n    try {\n        if (global.tunnelWindows[id]) {\n            delete global.tunnelWindows[id].source;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    delete global.tunnelWindows[id];\n}\n\nfunction cleanTunnelWindows() {\n    let tunnelWindows = global.tunnelWindows;\n\n    for (let key of Object.keys(tunnelWindows)) {\n        let tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            deleteTunnelWindow(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            deleteTunnelWindow(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : number {\n    cleanTunnelWindows();\n    global.tunnelWindowId += 1;\n    global.tunnelWindows[global.tunnelWindowId] = { name, source, canary, sendMessage };\n    return global.tunnelWindowId;\n}\n\nfunction getTunnelWindow(id : number) : TunnelWindowDataType {\n    return global.tunnelWindows[id];\n}\n\nglobal.openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<{ source : CrossDomainWindowType, origin : string, data : Object }> {\n\n    let parentWindow = getParent(window);\n\n    if (!parentWindow) {\n        throw new Error(`No parent window found to open tunnel to`);\n    }\n\n    let id = addTunnelWindow({ name, source, canary, sendMessage });\n\n    return global.send(parentWindow, CONSTANTS.POST_MESSAGE_NAMES.OPEN_TUNNEL, {\n\n        name,\n\n        sendMessage() {\n\n            let tunnelWindow = getTunnelWindow(id);\n\n            try {\n                // IE gets antsy if you try to even reference a closed window\n                noop(tunnelWindow && tunnelWindow.source);\n            } catch (err) {\n                deleteTunnelWindow(id);\n                return;\n            }\n\n            if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                return;\n            }\n\n            try {\n                tunnelWindow.canary();\n            } catch (err) {\n                return;\n            }\n\n            tunnelWindow.sendMessage.apply(this, arguments);\n        }\n\n    }, { domain: CONSTANTS.WILDCARD });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/bridge/bridge.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\nimport { global } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    if (!CONFIG.ALLOW_POSTMESSAGE_POPUP) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    let sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    let id = `${ CONSTANTS.BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport let documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    let interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nglobal.remoteWindows = global.remoteWindows || new WeakMap();\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    global.remoteWindows.set(win, { sendMessagePromise: new ZalgoPromise() });\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : { sendMessagePromise : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> } {\n    return global.remoteWindows.get(win);\n}\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : (message : string) => void) {\n\n    let remoteWindow = findRemoteWindow(win);\n\n    if (!remoteWindow) {\n        throw new Error(`Window not found to register sendMessage to`);\n    }\n\n    let sendMessageWrapper = (remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => {\n\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage(message);\n    };\n\n    remoteWindow.sendMessagePromise.resolve(sendMessageWrapper);\n    remoteWindow.sendMessagePromise = ZalgoPromise.resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n\n    let remoteWindow = findRemoteWindow(win);\n\n    if (!remoteWindow) {\n        throw new Error(`Window not found on which to reject sendMessage`);\n    }\n\n    remoteWindow.sendMessagePromise.asyncReject(err);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, message : string, domain : string) : ZalgoPromise<void> {\n\n    let messagingChild  = isOpener(window, win);\n    let messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    let remoteWindow = findRemoteWindow(win);\n\n    if (!remoteWindow) {\n        throw new Error(`Window not found to send message to`);\n    }\n\n    return remoteWindow.sendMessagePromise.then(sendMessage => {\n        return sendMessage(win, message, domain);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bridge/common.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getFrames, getDomain, getFrameByName, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../conf';\nimport { weakMapMemoize, noop } from '../lib';\nimport { global } from '../global';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nlet awaitRemoteBridgeForWindow = weakMapMemoize((win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> => {\n    return ZalgoPromise.try(() => {\n        for (let frame of getFrames(win)) {\n            try {\n                // $FlowFixMe\n                if (frame && frame !== window && isSameDomain(frame) && frame[CONSTANTS.WINDOW_PROPS.POSTROBOT]) {\n                    return frame;\n                }\n\n            } catch (err) {\n                continue;\n            }\n        }\n\n        try {\n            let frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            // $FlowFixMe\n            if (isSameDomain(frame) && frame[CONSTANTS.WINDOW_PROPS.POSTROBOT]) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout;\n\n                interval = setInterval(() => {\n                    // $FlowFixMe\n                    if (frame && isSameDomain(frame) && frame[CONSTANTS.WINDOW_PROPS.POSTROBOT]) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n\n        } catch (err) {\n            // pass\n        }\n    });\n});\n\nexport function openTunnelToOpener() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        const opener = getOpener(window);\n\n        if (!opener) {\n            return;\n        }\n\n        if (!needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return bridge[CONSTANTS.WINDOW_PROPS.POSTROBOT].openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        global.receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bridge/child.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\nimport { onChildWindowReady } from '../lib';\nimport { global } from '../global';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nglobal.bridges = global.bridges || {};\nglobal.bridgeFrames = global.bridgeFrames || {};\n\nglobal.popupWindowsByWin = global.popupWindowsByWin || new WeakMap();\nglobal.popupWindowsByName = global.popupWindowsByName || {};\n\nfunction listenForRegister(source, domain) {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.OPEN_TUNNEL, { window: source, domain }, ({ origin, data }) => {\n\n        if (origin !== domain) {\n            throw new Error(`Domain ${ domain } does not match origin ${ origin }`);\n        }\n\n        if (!data.name) {\n            throw new Error(`Register window expected to be passed window name`);\n        }\n\n        if (!data.sendMessage) {\n            throw new Error(`Register window expected to be passed sendMessage method`);\n        }\n\n        if (!global.popupWindowsByName[data.name]) {\n            throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n        }\n\n        if (!global.popupWindowsByName[data.name].domain) {\n            throw new Error(`We do not have a registered domain for window ${ data.name }`);\n        }\n\n        if (global.popupWindowsByName[data.name].domain !== origin) {\n            throw new Error(`Message origin ${ origin } does not matched registered window origin ${ global.popupWindowsByName[data.name].domain }`);\n        }\n\n        registerRemoteSendMessage(global.popupWindowsByName[data.name].win, domain, data.sendMessage);\n\n        return {\n            sendMessage(message) {\n\n                if (!window || window.closed) {\n                    return;\n                }\n\n                let winDetails = global.popupWindowsByName[data.name];\n\n                if (!winDetails) {\n                    return;\n                }\n\n                try {\n                    global.receiveMessage({\n                        data:   message,\n                        origin: winDetails.domain,\n                        source: winDetails.win\n                    });\n                } catch (err) {\n                    ZalgoPromise.reject(err);\n                }\n            }\n        };\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    let iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    domain = domain || getDomainFromUrl(url);\n    return Boolean(global.bridges[domain]);\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n\n    domain = domain || getDomainFromUrl(url);\n\n    if (global.bridges[domain]) {\n        return global.bridges[domain];\n    }\n\n    global.bridges[domain] = ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        let name  = getBridgeName(domain);\n        let frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        let iframe = openBridgeFrame(name, url);\n        global.bridgeFrames[domain] = iframe;\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n\n            let bridge = iframe.contentWindow;\n\n            listenForRegister(bridge, domain);\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.onload = resolve;\n                iframe.onerror = reject;\n\n            }).then(() => {\n\n                return onChildWindowReady(bridge, CONFIG.BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    });\n\n    return global.bridges[domain];\n}\n\nlet windowOpen = window.open;\n\nwindow.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n\n    let domain = url;\n\n    if (url && url.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0) {\n        [ domain, url ] = url.split('|');\n    }\n\n    if (domain) {\n        domain = getDomainFromUrl(domain);\n    }\n\n    let win = windowOpen.call(this, url, name, options, last);\n\n    if (!win) {\n        return win;\n    }\n\n    if (url) {\n        registerRemoteWindow(win);\n    }\n\n    for (let winName of Object.keys(global.popupWindowsByName)) {\n        if (isWindowClosed(global.popupWindowsByName[winName].win)) {\n            delete global.popupWindowsByName[winName];\n        }\n    }\n\n    if (name && win) {\n        let winOptions = global.popupWindowsByWin.get(win) ||\n                         global.popupWindowsByName[name] || {};\n\n        winOptions.name = winOptions.name || name;\n        winOptions.win = winOptions.win || win;\n        winOptions.domain = winOptions.domain || domain;\n\n        global.popupWindowsByWin.set(win, winOptions);\n        global.popupWindowsByName[name] = winOptions;\n    }\n\n    return win;\n};\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n\n    let winOptions = global.popupWindowsByWin.get(win);\n\n    if (winOptions) {\n        winOptions.domain = getDomainFromUrl(url);\n        registerRemoteWindow(win);\n    }\n}\n\nexport function destroyBridges() {\n    for (let domain of Object.keys(global.bridgeFrames)) {\n        let frame = global.bridgeFrames[domain];\n        if (frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    global.bridgeFrames = {};\n    global.bridges = {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bridge/parent.js","/* @flow */\n\nimport { isSameTopWindow, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONFIG } from '../conf';\n\nexport function emulateIERestrictions(sourceWindow : CrossDomainWindowType, targetWindow : CrossDomainWindowType) {\n    if (!CONFIG.ALLOW_POSTMESSAGE_POPUP) {\n\n        if (isSameTopWindow(sourceWindow, targetWindow) === false) {\n            throw new Error(`Can not send and receive post messages between two different windows (disabled to emulate IE)`);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/compat/ie.js","/* @flow */\n\nexport * from './ie';\n\n\n\n// WEBPACK FOOTER //\n// ./src/compat/index.js","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : (string | Array<string>)) => {\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(window, win);\n        } catch (err) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ CONSTANTS.WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0) {\n\n            if (window.location.protocol === CONSTANTS.FILE_PROTOCOL) {\n                return CONSTANTS.WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n            return CONSTANTS.WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, serializedMessage, domain);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/strategies.js","/* @flow */\n\nimport { getDomain, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { CONSTANTS, CONFIG, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { uniqueID, serializeMethods, getWindowType, jsonStringify, stringifyError } from '../../lib';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\n\nfunction buildMessage(win : CrossDomainWindowType, message : Object, options = {}) : Object {\n\n    let id   = uniqueID();\n    let type = getWindowType();\n    let sourceDomain = getDomain(window);\n\n    return {\n        ...message,\n        ...options,\n        sourceDomain,\n        id:         message.id || id,\n        windowType: type\n    };\n}\n\n\nexport function sendMessage(win : CrossDomainWindowType, message : Object, domain : string | Array<string>) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        message = buildMessage(win, message, {\n            data: serializeMethods(win, domain, message.data),\n            domain\n        });\n\n        let level;\n\n        if (__DEBUG__) {\n            if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n                level = 'debug';\n            } else if (message.ack === 'error') {\n                level = 'error';\n            } else {\n                level = 'info';\n            }\n\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || CONSTANTS.WILDCARD, '\\n\\n', message);\n        }\n\n        if (win === window && !CONFIG.ALLOW_SAME_ORIGIN) {\n            throw new Error('Attemping to send message to self');\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        let messages = [];\n\n        let serializedMessage = jsonStringify({\n            [ CONSTANTS.WINDOW_PROPS.POSTROBOT ]: message\n        }, null, 2);\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/index.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from '../global';\nimport { isRegex } from '../lib';\nimport { CONSTANTS } from '../conf';\n\nexport function resetListeners() {\n    global.responseListeners = {};\n    global.requestListeners  = {};\n}\n\nglobal.responseListeners = global.responseListeners || {};\nglobal.requestListeners  = global.requestListeners  || {};\nglobal.WINDOW_WILDCARD   = global.WINDOW_WILDCARD   || new (function WindowWildcard() { /* pass */ })();\n\nglobal.erroredResponseListeners = global.erroredResponseListeners || {};\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : Object }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : string | RegExp | Array<string>\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : (string | Array<string> | RegExp),\n    respond : (err : ?mixed, result : ?Object) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    global.responseListeners[hash] = listener;\n}\n\nexport function getResponseListener(hash : string) : ResponseListenerType {\n    return global.responseListeners[hash];\n}\n\nexport function deleteResponseListener(hash : string) {\n    delete global.responseListeners[hash];\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    global.erroredResponseListeners[hash] = true;\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return Boolean(global.erroredResponseListeners[hash]);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === CONSTANTS.WILDCARD) {\n        win = null;\n    }\n\n    if (domain === CONSTANTS.WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    let nameListeners = global.requestListeners[name];\n\n    if (!nameListeners) {\n        return;\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n\n        let winListeners = winQualifier && nameListeners.get(winQualifier);\n\n        if (!winListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (winListeners[domain]) {\n                return winListeners[domain];\n            }\n\n            if (winListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of winListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (winListeners[CONSTANTS.WILDCARD]) {\n            return winListeners[CONSTANTS.WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp | Array<string>) }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === CONSTANTS.WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || CONSTANTS.WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let requestListeners = global.requestListeners;\n\n    let nameListeners = requestListeners[name];\n\n    if (!nameListeners) {\n        nameListeners = new WeakMap();\n        requestListeners[name] = nameListeners;\n    }\n\n    let winListeners  = nameListeners.get(win);\n\n    if (!winListeners) {\n        winListeners = {};\n        nameListeners.set(win, winListeners);\n    }\n\n    let strDomain = domain.toString();\n\n    let regexListeners = winListeners[__DOMAIN_REGEX__];\n    let regexListener;\n\n    if (isRegex(domain)) {\n\n        if (!regexListeners) {\n            regexListeners = [];\n            winListeners[__DOMAIN_REGEX__] = regexListeners;\n        }\n\n        regexListener = { regex: domain, listener };\n\n        regexListeners.push(regexListener);\n\n    } else {\n        winListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            if (!winListeners) {\n                return;\n            }\n\n            delete winListeners[strDomain];\n\n            if (win && Object.keys(winListeners).length === 0) {\n                nameListeners.delete(win);\n            }\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n            }\n        }\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/listeners.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { stringifyError, noop } from '../../lib';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : Object) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : Object) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function respond(data) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            return sendMessage(source, {\n                target: message.originalSource,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            }, origin);\n        }\n\n        return ZalgoPromise.all([\n\n            respond({\n                type: CONSTANTS.POST_MESSAGE_TYPE.ACK\n            }),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, err => {\n\n                let error = stringifyError(err).replace(/^Error: /, '');\n                // $FlowFixMe\n                let code = err.code;\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.ERROR,\n                    error,\n                    code\n                });\n            })\n\n        ]).then(noop).catch(err => {\n\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : Object) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === CONSTANTS.POST_MESSAGE_ACK.ERROR) {\n            let err = new Error(message.error);\n            if (message.code) {\n                // $FlowFixMe\n                err.code = message.code;\n            }\n            return options.respond(err, null);\n        } else if (message.ack === CONSTANTS.POST_MESSAGE_ACK.SUCCESS) {\n            let data = message.data || message.response;\n\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/types.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { deserializeMethods, jsonParse, addEventListener, noop } from '../../lib';\nimport { global } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nglobal.receivedMessages = global.receivedMessages || [];\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = jsonParse(message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        return;\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    let message = parseMessage(data);\n\n    if (!message) {\n        return;\n    }\n\n    if (!message.sourceDomain || typeof message.sourceDomain !== 'string') {\n        throw new Error(`Expected message to have sourceDomain`);\n    }\n\n    if (message.sourceDomain.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0 || message.sourceDomain.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n        origin = message.sourceDomain;\n    }\n\n    if (global.receivedMessages.indexOf(message.id) === -1) {\n        global.receivedMessages.push(message.id);\n    } else {\n        return;\n    }\n\n    if (__DEBUG__) {\n        let level;\n\n        if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n        \n        // eslint-disable-next-line no-console\n        console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.data) {\n        message.data = deserializeMethods(source, origin, message.data);\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(messageEvent.source, window);\n        } catch (err) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/index.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { uniqueID, onChildWindowReady, sayHello, isRegex } from '../lib';\nimport { global } from '../global';\n\nglobal.requestPromises = global.requestPromises || new WeakMap();\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?(string | Array<string> | RegExp),\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : string | Array<string> | RegExp;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || CONSTANTS.WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let requestPromises = global.requestPromises.get(win);\n\n        if (!requestPromises) {\n            requestPromises = [];\n            global.requestPromises.set(win, requestPromises);\n        }\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return onChildWindowReady(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                requestPromises.splice(requestPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, {\n                    type:          CONSTANTS.POST_MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: options.fireAndForget\n                }, actualDomain).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let ackTimeout = CONFIG.ACK_TIMEOUT;\n                let resTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ CONFIG.ACK_TIMEOUT }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ options.timeout || CONFIG.RES_TIMEOUT }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        requestPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/client.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { once as onceFunction, safeInterval } from '../lib';\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : Object }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?(string | RegExp | Array<string>),\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || CONSTANTS.WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/server.js","/* @flow */\n\nimport { CONSTANTS } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG, CONSTANTS } from '../conf';\n\nexport function disable() {\n    delete window[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/config.js","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/index.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n\n    // global.tunnelWindows\n    // global.bridges\n    // global.popupWindowsByName\n    // global.responseListeners\n    // global.requestListeners\n\n    let requestPromises = global.requestPromises.get(win);\n\n    if (requestPromises) {\n        for (let promise of requestPromises) {\n            promise.reject(new Error(`No response from window - cleaned up`));\n        }\n    }\n\n    if (global.popupWindowsByWin) {\n        global.popupWindowsByWin.delete(win);\n    }\n\n    if (global.remoteWindows) {\n        global.remoteWindows.delete(win);\n    }\n\n    global.requestPromises.delete(win);\n    global.methods.delete(win);\n    global.readyPromises.delete(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clean.js","/* @flow */\n\nimport { initOnReady, listenForMethods } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\nimport { on, send } from './public';\n\nexport * from './public';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nexport function init() {\n    if (!global.initialized) {\n        listenForMessages();\n\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            require('./bridge').openTunnelToOpener();\n        }\n\n        initOnReady();\n        listenForMethods({ on, send });\n    }\n\n    global.initialized = true;\n}\n\ninit();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.js","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* @flow */\n\nexport { openBridge, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, openTunnelToOpener, destroyBridges } from './index';\n\n\n\n// WEBPACK FOOTER //\n// ./src/bridge/interface.js"],"sourceRoot":""}